{
  "log": {
    "_recordingName": "Velcro.runner/jsdelivr/will require the events shim",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "4.3.0"
    },
    "entries": [
      {
        "_id": "b80f15554f5e10be948993043e9b00fc",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "cdn.jsdelivr.net"
            }
          ],
          "headersSize": 107,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://cdn.jsdelivr.net/npm/@velcro/node-libs@0.56.2/package.json"
        },
        "response": {
          "bodySize": 1569,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 1569,
            "text": "{\n  \"name\": \"@velcro/node-libs\",\n  \"version\": \"0.56.2\",\n  \"description\": \"A curated collection of browser-compatible shims for node core modules\",\n  \"keywords\": [\n    \"node\",\n    \"core\",\n    \"libs\",\n    \"shim\",\n    \"browser\",\n    \"webpack\",\n    \"browserify\"\n  ],\n  \"author\": \"Geoff Goodman <ggoodman@gmail.com>\",\n  \"homepage\": \"https://github.com/ggoodman/velcro\",\n  \"license\": \"MIT\",\n  \"main\": \"lib/index.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:ggoodman/velcro.git\"\n  },\n  \"scripts\": {\n    \"build\": \"echo Nothing to build\",\n    \"test\": \"echo Nothing to test\"\n  },\n  \"dependencies\": {\n    \"@types/hapi__code\": \"^5.3.0\",\n    \"@wessberg/rollup-plugin-ts\": \"^1.3.5\",\n    \"assert\": \"1.4.1\",\n    \"browserify-zlib\": \"^0.2.0\",\n    \"buffer\": \"5.2.1\",\n    \"crypto-browserify\": \"3.12.0\",\n    \"events\": \"3.0.0\",\n    \"memfs\": \"^2.15.5\",\n    \"node-libs-browser\": \"^2.2.0\",\n    \"os-browserify\": \"^0.3.0\",\n    \"querystring\": \"^0.2.0\",\n    \"readable-stream\": \"^3.3.0\",\n    \"stream-http\": \"^3.0.0\",\n    \"string_decoder\": \"^1.2.0\",\n    \"url-parse\": \"^1.4.6\",\n    \"util\": \"^0.11.1\",\n    \"vmdom\": \"^0.0.23\"\n  },\n  \"devDependencies\": {\n    \"@microsoft/api-documenter\": \"^7.9.1\",\n    \"@microsoft/api-extractor\": \"^7.10.1\",\n    \"@types/node\": \"^11.15.27\",\n    \"eslint\": \"^5.16.0\",\n    \"typescript\": \"^4.0.3\"\n  },\n  \"prettier\": {\n    \"printWidth\": 120,\n    \"singleQuote\": true,\n    \"tabWidth\": 2,\n    \"trailingComma\": \"es5\"\n  },\n  \"gitHead\": \"119090915cf2c484524e8dba7538202cbe2ddcce\"\n}\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, s-maxage=31536000, immutable"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "etag",
              "value": "W/\"621-+xdgkz119ybFc7LTDxEnCyjMq/E\""
            },
            {
              "name": "age",
              "value": "296"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra19158-FRA, cache-yyz4521-YYZ"
            },
            {
              "name": "x-cache",
              "value": "MISS, MISS"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d23670000ca4b1cb8e000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae579c7ca4b-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 895,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.523Z",
        "time": 59,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 59
        }
      },
      {
        "_id": "a10b297774b4866b85d85ff89de404a4",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "data.jsdelivr.com"
            }
          ],
          "headersSize": 112,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://data.jsdelivr.com/v1/package/npm/@velcro/node-libs@0.56.2/tree"
        },
        "response": {
          "bodySize": 5067,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 5067,
            "text": "{\n\t\"default\": \"/lib/index.min.js\",\n\t\"files\": [\n\t\t{\n\t\t\t\"type\": \"directory\",\n\t\t\t\"name\": \"lib\",\n\t\t\t\"files\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \".eslintrc\",\n\t\t\t\t\t\"hash\": \"MhHrTO5WOSbkJNeN5u1oQcLoe8FrhiTgtjJ02aXRry8=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 169\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"assert.js\",\n\t\t\t\t\t\"hash\": \"ILDdjAhcVSfj8whMQzCramZMBNxgaM6efs6cOt0PWXs=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 81\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"buffer.js\",\n\t\t\t\t\t\"hash\": \"FpAB9BUBLMAH/NjmlUHOf0fl8p5kqsqYtptRN9cISCo=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 51\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"constants.js\",\n\t\t\t\t\t\"hash\": \"gw6lYxmW0nKloH9QqTHwvtlLZIds8HYh8X5/nZ34x8M=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 5676\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"crypto.js\",\n\t\t\t\t\t\"hash\": \"4jP/8NBlZ7zkOIpmhYUmC50AFXFOGEMKdCu2a5Yvg7k=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 62\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"events.js\",\n\t\t\t\t\t\"hash\": \"ztalm+4eoiSMqDdl8cyBo3IH9+32bqYGxTowh7viE3Q=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 83\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"fs.js\",\n\t\t\t\t\t\"hash\": \"H/wDyYrZwAiwGezVf2hmq3pxxchn2Cq7f924Cst6EZY=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 50\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"global.js\",\n\t\t\t\t\t\"hash\": \"BMthNIx5DUglrWTugSgH28KyAgWC13QZDCNHC71GMS8=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 285\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"http.js\",\n\t\t\t\t\t\"hash\": \"1LlG04pEurj6sGmC9Jv5X6iuw8R+zCF3uSktE/tsqos=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 56\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"https.js\",\n\t\t\t\t\t\"hash\": \"1LlG04pEurj6sGmC9Jv5X6iuw8R+zCF3uSktE/tsqos=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 56\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"index.js\",\n\t\t\t\t\t\"hash\": \"BR2nhsatTCnvornOmKBBAxNxUIVkT+luKZNhJoI9xbE=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 142\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"net.js\",\n\t\t\t\t\t\"hash\": \"wpu0h3r6jiFODjcEB1UENjQfR/ZzIkHIqOI3wOOrQDY=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 71\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"os.js\",\n\t\t\t\t\t\"hash\": \"gWZ4TOIF/UOP66e5hjyA64bNpImreClAmPvzaDO6+VY=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 58\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"path.js\",\n\t\t\t\t\t\"hash\": \"8wQAAZ6NyQ61jdTLS9tMcYG1a/NJ92A46eARdxXN848=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 130\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"path_posix.js\",\n\t\t\t\t\t\"hash\": \"qNZmKo8XLkn+oMlmSuAA390iPuYNU9YE/nWvvmu+ul8=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 13826\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"process.js\",\n\t\t\t\t\t\"hash\": \"yx8iHtVjsjYd+JaIF0sR9GyNUmW5khWk/ANekIXTGMo=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 9053\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"querystring.js\",\n\t\t\t\t\t\"hash\": \"97CWQpejPi0Zzbob/r2lQVnQ3QajhFgXj22NcZKfWz4=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 56\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"stream.js\",\n\t\t\t\t\t\"hash\": \"EiPEjDxyZc+liCReiinV6hDKcUi5VSZsekIy/Xdv3f0=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 80\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"string_decoder.js\",\n\t\t\t\t\t\"hash\": \"CDAaowyeSdbDDawlbx25PzlSjuL/ynv67vW9A3683/0=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 59\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"tls.js\",\n\t\t\t\t\t\"hash\": \"plOH0MltIo11hRa9zOQ2yiXRGw/+Vjt1RVdc4acVM9k=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 71\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"tty.js\",\n\t\t\t\t\t\"hash\": \"WzDWiy99lVrVfHa5VJcSRM/HReGCN12Jt/ouEdwYqUg=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 71\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"url.js\",\n\t\t\t\t\t\"hash\": \"suVSUmuuhRtFsQBLwCwudxjHea8vcvKRLER0jnhRgJc=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 54\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"util.js\",\n\t\t\t\t\t\"hash\": \"+e58hbeVbj31co3NJylK1h0fSZqSH2iY3b5QlxgyVQg=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 49\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"vm.js\",\n\t\t\t\t\t\"hash\": \"lOsQMbWfAAlWxLYFbhavxXjfJtDVt9rocCzSkFAFT6o=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 50\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"zlib.js\",\n\t\t\t\t\t\"hash\": \"0rkjrZz0UCMvdgNEYGKALMmA2nSYqoBJJirc99ra9zA=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 60\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"LICENSE.md\",\n\t\t\t\"hash\": \"80hVLRutIHd8eiafE6vqtv8zjSAHOMf87x12fy2E78w=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 1076\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"package.json\",\n\t\t\t\"hash\": \"BP7j2Lf4Aig9nY20niGFHD8unxKp72292SF9sarGx5o=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 1569\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"README.md\",\n\t\t\t\"hash\": \"7xuKSbXBwnHiH6a09cGTfFIjY3VsLgujy93iOzkVb1s=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 89\n\t\t}\n\t]\n}"
          },
          "cookies": [
            {
              "domain": ".jsdelivr.com",
              "expires": "2020-11-22T13:26:55.000Z",
              "httpOnly": true,
              "name": "__cfduid",
              "path": "/",
              "sameSite": "Lax",
              "secure": true,
              "value": "d213d8a2c0e009af0e43ec69280e863201603459615"
            }
          ],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "_fromType": "array",
              "name": "set-cookie",
              "value": "__cfduid=d213d8a2c0e009af0e43ec69280e863201603459615; expires=Sun, 22-Nov-20 13:26:55 GMT; path=/; domain=.jsdelivr.com; HttpOnly; SameSite=Lax; Secure"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=10, stale-if-error=60"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "etag",
              "value": "W/\"13cb-AJbrHOFZwmJIC+Ay7juqXEs873k\""
            },
            {
              "name": "x-response-time",
              "value": "40ms"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "age",
              "value": "260"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d23b00000ecfe8314b000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=ll%2Bu8dKT%2BWCaXPNkseXkvyRS0pAFKDwowu%2FC60m5R6%2FN4AevI7SUmbCbp0QhjEo6S3%2Bt%2B7lPT30XDyLlJkCm49XRvN7htHhs%2BpFCDDT0mBhdkA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "nel",
              "value": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae5ecdbecfe-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 1250,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.584Z",
        "time": 71,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 71
        }
      },
      {
        "_id": "b99f7b503e0594663139b60080bf5f93",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "cdn.jsdelivr.net"
            }
          ],
          "headersSize": 108,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://cdn.jsdelivr.net/npm/@velcro/node-libs@0.56.2/lib/events.js"
        },
        "response": {
          "bodySize": 83,
          "content": {
            "mimeType": "application/javascript; charset=utf-8",
            "size": 83,
            "text": "'use strict';\n\n/** @type {import('events')} */\nmodule.exports = require('events');\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, s-maxage=31536000, immutable"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "etag",
              "value": "W/\"53-gbQ3EbzdZBw/Mc5opcu0MiEDdgg\""
            },
            {
              "name": "age",
              "value": "295"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra19156-FRA, cache-yyz4527-YYZ"
            },
            {
              "name": "x-cache",
              "value": "MISS, MISS"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d23f60000ece289a85000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae6587fece2-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 900,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.657Z",
        "time": 80,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 80
        }
      },
      {
        "_id": "3e6b8b8c5ba03f52e9a445e25eae0343",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "cdn.jsdelivr.net"
            }
          ],
          "headersSize": 95,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://cdn.jsdelivr.net/npm/events@3.0.0/package.json"
        },
        "response": {
          "bodySize": 788,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 788,
            "text": "{\n  \"name\": \"events\",\n  \"id\": \"events\",\n  \"version\": \"3.0.0\",\n  \"description\": \"Node's event emitter for all engines.\",\n  \"keywords\": [\n    \"events\",\n    \"eventEmitter\",\n    \"eventDispatcher\",\n    \"listeners\"\n  ],\n  \"author\": \"Irakli Gozalishvili <rfobic@gmail.com> (http://jeditoolkit.com)\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/Gozala/events.git\",\n    \"web\": \"https://github.com/Gozala/events\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/Gozala/events/issues/\"\n  },\n  \"main\": \"./events.js\",\n  \"engines\": {\n    \"node\": \">=0.8.x\"\n  },\n  \"devDependencies\": {\n    \"airtap\": \"0.0.6\",\n    \"isarray\": \"^2.0.2\",\n    \"tape\": \"^4.8.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node tests/index.js\",\n    \"test:browsers\": \"airtap -- tests/index.js\"\n  },\n  \"license\": \"MIT\"\n}\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, s-maxage=31536000, immutable"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "etag",
              "value": "W/\"314-aLuCB9bdFYPNKD9kI02DdqNYqMc\""
            },
            {
              "name": "age",
              "value": "295"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra19149-FRA, cache-yyz4524-YYZ"
            },
            {
              "name": "x-cache",
              "value": "MISS, HIT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d243f0000ca4b0c147000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae6cc4aca4b-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 894,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.740Z",
        "time": 57,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 57
        }
      },
      {
        "_id": "6179bf2692a2bbb8c90c8df4c17cd305",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "data.jsdelivr.com"
            }
          ],
          "headersSize": 100,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://data.jsdelivr.com/v1/package/npm/events@3.0.0/tree"
        },
        "response": {
          "bodySize": 5384,
          "content": {
            "mimeType": "application/json; charset=utf-8",
            "size": 5384,
            "text": "{\n\t\"default\": \"/events.min.js\",\n\t\"files\": [\n\t\t{\n\t\t\t\"type\": \"directory\",\n\t\t\t\"name\": \"tests\",\n\t\t\t\"files\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"add-listeners.js\",\n\t\t\t\t\t\"hash\": \"nWSIkCVtzUOwL/uaBbtHpup/AkBnUEOZlGERYj30fag=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 3792\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"check-listener-leaks.js\",\n\t\t\t\t\t\"hash\": \"gE2kwX5klfhTzwpnRXczyKPjsU8l99JgghjJLhHDtv0=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 3461\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"common.js\",\n\t\t\t\t\t\"hash\": \"+sG+L+dTBBpqanlyJ0XD3JDBMgL+k5/qJxsvK32QMCs=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 3204\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"errors.js\",\n\t\t\t\t\t\"hash\": \"zHjizjENcchaF8f5ck5qIuWM0O78JxbGv7awxiUOPPA=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 344\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"events-list.js\",\n\t\t\t\t\t\"hash\": \"IZ6hP4O13SW/hFkC9tByElqO5YFKWHf3pvrRi8iIYXo=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 813\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"index.js\",\n\t\t\t\t\t\"hash\": \"oqf2WCClTLjVxtOBdXnF+QKGFeZiFr9LYHapTH8Waw8=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 1423\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"legacy-compat.js\",\n\t\t\t\t\t\"hash\": \"IGSiOdBeaDl5GpUVdW5nxCfTdH6DBwbpf2HmhmKN40I=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 296\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"listener-count.js\",\n\t\t\t\t\t\"hash\": \"070M2eKAybI9UgMjfVVQRCZcfJBL+RKHqnbac0Qo+5o=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 1687\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"listeners.js\",\n\t\t\t\t\t\"hash\": \"7S8Z6q/5jTWLFJHGJA6Z2WmUXJPgWi2T/CSWdAWwJ+o=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 4928\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"listeners-side-effects.js\",\n\t\t\t\t\t\"hash\": \"h993DTX42XNBtZC9/DxrqBaWqCbjtV7im1/yD+noGvM=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 2102\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"max-listeners.js\",\n\t\t\t\t\t\"hash\": \"YjknL32W9t+oN5eORIqnae1DUQxbCC94wDpjYmfI+5E=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 2068\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"method-names.js\",\n\t\t\t\t\t\"hash\": \"qEfqgcnRsxd29luRxS83JMLOwOnZUjQlMfuvr1nwmkI=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 1665\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"modify-in-emit.js\",\n\t\t\t\t\t\"hash\": \"9ZEqHArU1RIY6aSooildMMqxwu/aPnXtaPc/df8l5cI=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 3225\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"num-args.js\",\n\t\t\t\t\t\"hash\": \"R6Q5+1x2UdsI7nBME4s2ZwxZvzl1pZVtJAmvG4qeudA=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 2217\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"once.js\",\n\t\t\t\t\t\"hash\": \"DRP+EyuXv/nAMjPdi5M3SLTRBBkQHiKwVIqFLHZkta8=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 2650\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"prepend.js\",\n\t\t\t\t\t\"hash\": \"ZX8SxMnH3QbxBZJK+5PGoHiThhf/8KH7d1xzPlTnMAw=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 833\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"remove-all-listeners.js\",\n\t\t\t\t\t\"hash\": \"s0uWN+x8atgy8KttgLZvxvLJ5BXRK8IJ2/Pb7bgV0Xg=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 4733\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"remove-listeners.js\",\n\t\t\t\t\t\"hash\": \"3rA8oLybwhUBDVDNKLVFcJgQmIP+nQWCf0zWMQNETA0=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 6597\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"set-max-listeners-side-effects.js\",\n\t\t\t\t\t\"hash\": \"F+G3dmc2ooQn+hfuyMz3BBHu3d0G8UYffsqtXnP2N2w=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 1445\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"special-event-names.js\",\n\t\t\t\t\t\"hash\": \"aEsS6ub4yUKvbuFLEDX4E/+A5z83vlcjyHkPCpSb+fI=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 1420\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"subclass.js\",\n\t\t\t\t\t\"hash\": \"if8izvZx6ZGDBB56131sIVaXUQULPFYdhwcmNiO2+Y0=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 2011\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"file\",\n\t\t\t\t\t\"name\": \"symbols.js\",\n\t\t\t\t\t\"hash\": \"rE3O42YP1T6smt7TFfj6YkTEZPHNNaG65UctxpmTF38=\",\n\t\t\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\t\t\"size\": 627\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \".airtap.yml\",\n\t\t\t\"hash\": \"SLZjduTO3T0D7DZUrODEuPfyaC0xAw1/9w/hIxrrbg4=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 293\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \".travis.yml\",\n\t\t\t\"hash\": \"jTrLAuVbhk2cr1/a03t+cIGYeEkYKAz08/1BBG74Q0o=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 646\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"events.js\",\n\t\t\t\"hash\": \"yFz0wcLKZ98StQRC61lypJW8t5XepVnH3TddkPudi9Q=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 13604\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"History.md\",\n\t\t\t\"hash\": \"4A9YpQjDvToZUL6QCcJn6C2NIWPzoRzCZCV7OcD3N4c=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 1722\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"LICENSE\",\n\t\t\t\"hash\": \"YxmHt2FqMlpbl1ZsIyQYSB3ffbteyt77mR55GHbMJZk=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 1081\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"package.json\",\n\t\t\t\"hash\": \"g5rQiKFjUdGoAoJ4x6yLTqT+dn1e2+MP1KFSWwynLTM=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 788\n\t\t},\n\t\t{\n\t\t\t\"type\": \"file\",\n\t\t\t\"name\": \"Readme.md\",\n\t\t\t\"hash\": \"pnM6bPHFPeqpk38qvOx7ywO3XoaHuy3EtzfMYSVmgaQ=\",\n\t\t\t\"time\": \"1985-10-26T08:15:00.000Z\",\n\t\t\t\"size\": 2279\n\t\t}\n\t]\n}"
          },
          "cookies": [
            {
              "domain": ".jsdelivr.com",
              "expires": "2020-11-22T13:26:55.000Z",
              "httpOnly": true,
              "name": "__cfduid",
              "path": "/",
              "sameSite": "Lax",
              "secure": true,
              "value": "dd3ec7b7c027616480b1661f9f06f4fb21603459615"
            }
          ],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "_fromType": "array",
              "name": "set-cookie",
              "value": "__cfduid=dd3ec7b7c027616480b1661f9f06f4fb21603459615; expires=Sun, 22-Nov-20 13:26:55 GMT; path=/; domain=.jsdelivr.com; HttpOnly; SameSite=Lax; Secure"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, stale-while-revalidate=86400, stale-if-error=86400"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "etag",
              "value": "W/\"1508-OE/NHTAbbmPKH3wJR1TlgF6ROvA\""
            },
            {
              "name": "x-response-time",
              "value": "40ms"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "age",
              "value": "295"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d247d0000ca4f87b8d000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "report-to",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s=67h46TA6oIiDDEf%2BYyNh3kR0w%2FwY%2B1tv5YpZw%2BziXZVg%2F%2FdUv8QH%2F36ZJ6aIgtiQF54x8bzpLuQlTxOrdIn0SHHbgRRZgK7BIKhuc%2FAg7PmHbg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "nel",
              "value": "{\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae728d3ca4f-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 1291,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.799Z",
        "time": 61,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 61
        }
      },
      {
        "_id": "6a471d708f296585436a2c711f4acfd0",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 0,
          "cookies": [],
          "headers": [
            {
              "name": "host",
              "value": "cdn.jsdelivr.net"
            }
          ],
          "headersSize": 92,
          "httpVersion": "HTTP/1.1",
          "method": "GET",
          "queryString": [],
          "url": "https://cdn.jsdelivr.net/npm/events@3.0.0/events.js"
        },
        "response": {
          "bodySize": 13604,
          "content": {
            "mimeType": "application/javascript; charset=utf-8",
            "size": 13604,
            "text": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 23 Oct 2020 13:26:55 GMT"
            },
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "access-control-expose-headers",
              "value": "*"
            },
            {
              "name": "timing-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "public, max-age=31536000, s-maxage=31536000, immutable"
            },
            {
              "name": "cross-origin-resource-policy",
              "value": "cross-origin"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "etag",
              "value": "W/\"3524-2e/Y07JLF3xfsuN9+O46ZdVzaIE\""
            },
            {
              "name": "age",
              "value": "294"
            },
            {
              "name": "x-served-by",
              "value": "cache-fra19145-FRA, cache-yyz4545-YYZ"
            },
            {
              "name": "x-cache",
              "value": "HIT, HIT"
            },
            {
              "name": "vary",
              "value": "Accept-Encoding"
            },
            {
              "name": "cf-cache-status",
              "value": "HIT"
            },
            {
              "name": "cf-request-id",
              "value": "05f73d24be00003f99ad934000000001"
            },
            {
              "name": "expect-ct",
              "value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "5e6bcae79d2e3f99-YUL"
            },
            {
              "name": "alt-svc",
              "value": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
            }
          ],
          "headersSize": 900,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2020-10-23T13:26:55.862Z",
        "time": 65,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 65
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
