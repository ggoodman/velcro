{"version":3,"sources":["../../@velcro/common/dist/dist-module/index.js","../../@velcro/strategy-memory/dist/dist-module/index.js","lib/EditorManager.ts","../../@velcro/bundler/dist/dist-module/index.js","playground/Editor.tsx","../../@velcro/plugin-css/dist/dist-module/index.js","../../@velcro/plugin-sucrase/dist/dist-module/index.js","../../@velcro/strategy-cdn/dist/dist-module/index.js","../../@velcro/strategy-compound/dist/dist-module/index.js","velcro/index.ts","playground/Preview.tsx","lib/hooks.ts","playground/Sidebar.tsx","playground/Playground.tsx","templates/react.ts","useServiceWorker.tsx","App.tsx","serviceWorker.ts","index.tsx","../../@velcro/resolver/dist/dist-module/index.js"],"names":["Base64","BaseError","arguments","name","constructor","Error","CanceledError","EntryExcludedError","uri","toString","EntryNotFoundError","DependencyNotFoundError","spec","parentUri","isCanceledError","err","all","values","token","shouldAwait","result","map","element","isThenable","checkCancellation","Promise","promise","a","isCancellationRequested","reject","object","then","done","next","pre","decode","global","data","from","atob","decodeURIComponent","escape","_data","encode","btoa","unescape","encodeURIComponent","Decoder","TextDecoder","this","decoder","Buffer","buf","str","charCodeAt","slice","MapSet","Map","key","value","get","Set","set","add","clear","ret","delete","size","has","entries","hasInvalidBrowserField","json","error","browser","hasInvalidRequiredStringField","field","hasInvalidOptionalStringField","undefined","hasInvalidDependenciesField","Object","keys","every","parseBufferAsPartialPackageJson","content","parseTextAsPartialPackageJson","message","parseBufferAsPackageJson","text","isValidPackageJson","parseTextAsPackageJson","JSON","parse","isValidPartialPackageJson","ErrorInvalidArgType","expected","actual","determiner","indexOf","replace","type","msg","code","validateString","isPosixPathSeparator","normalizeString","path","allowAboveRoot","separator","isPathSeparator","res","lastSegmentLength","lastSlash","dots","i","length","lastSlashIndex","lastIndexOf","posix","resolve","resolvedPath","resolvedAbsolute","process","cwd","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","to","fromEnd","fromLen","toLen","lastCommonSep","fromCode","out","toNamespacedPath","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","sep","pathObject","dir","root","base","bind","delimiter","win32","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","test","_schemeFix","_referenceResolution","_slash","_regexp","Uri","schemeOrData","change","_URI","skipEncoding","_asFormatted","uriToFsPath","trailingSlash","with","TRAILING_SLASH_RX","l","r","child","parent","childHref","parentHref","parentOffset","charAt","prefix","startsWith","thing","fsPath","match","exec","percentDecode","idx","substring","components","pathFragment","newPath","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","toLowerCase","encoder","userinfo","String","fromCharCode","_rEncodedAsHex","decodeURIComponentGraceful","_a","FileEncoding","encodeText","TextEncoder","buffer","MemoryStrategy","files","rootUri","pathname","ensureTrailingSlash","ResolverStrategy","EntryKind","Directory","children","file","addFile","encoding","segments","Array","isArray","split","filter","Boolean","segment","UTF8","overwrite","filename","pop","entry","File","_ctx","urlPathname","basePathname","fsPathname","getEntryAtPath","joinPath","binSting","binArray","Uint8Array","prototype","forEach","call","_el","arr","AbstractResolverStrategyWithRoot","EditorManager","options","editor","disposableStore","DisposableStore","initialPath","viewState","WeakMap","onWillFocusModelEmitter","Emitter","onDidChangeEmitter","Monaco","typescript","typescriptDefaults","setEagerModelSync","setMaximumWorkerIdleTime","setCompilerOptions","allowJs","allowNonTsExtensions","allowSyntheticDefaultImports","baseUrl","checkJs","esModuleInterop","experimentalDecorators","inlineSourceMap","inlineSources","isolatedModules","jsx","JsxEmit","React","lib","module","ModuleKind","CommonJS","moduleResolution","ModuleResolutionKind","NodeJs","noEmit","outDir","resolveJsonModule","rootDir","sourceMap","target","ScriptTarget","ES2015","typeRoots","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","createModel","language","inferLanguage","getModel","href","model","getModelByHref","focusModel","setModel","lineNumber","revealLineInCenter","ScrollType","Smooth","setPosition","column","columnNumber","markers","setModelMarkers","focus","getModelByPath","_","el","create","automaticLayout","minimap","enabled","showUnused","scrollBeyondLastLine","theme","wordWrap","wrappingIndent","onDidDispose","onDidChangeModel","e","newModelUrl","restoreViewState","onDidBlurEditorText","saveViewState","focusPath","dispose","event","EditorManagerContext","createContext","Editor","className","useRef","editorManager","useContext","useEffect","current","mount","ref","charToInteger","chars","mappings","decoded","line","j","shift","c","segmentify","push","integer","hasContinuationBit","shouldNegate","sourceFileIndex","sourceCodeLine","sourceCodeColumn","nameIndex","generatedCodeColumn","lineMappings","_i","line_1","segmentMappings","encodeInteger","num","clamped","SourceMap","input","sourceRoot","names","sources","sourcesContent","version","stringify","getSourceMappingUrlMatch","re","lastMatch","getSourceMappingUrl","updateSourceMappingUrl","url","index","decodeDataUriAsSourceMap","SourceModuleDependencyKind","Source","source","Link","tracedLine","traced","traceSegment","sourceIndex","tracedSegment","m","PluginManager","plugins","load","ctx","id","readReturn","resolver","readFileContent","readResult","visited","resolveDependency","dependency","fromSourceModule","resolveReturn","resolveResult","found","resolveEntrypoint","transform","createMagicString","endsWith","magicString","prepend","generateDecodedMap","plugin","loadReturn","loadResult","fromModule","kind","pluginCtx","assign","MagicString","sourceMapTree","sourceMapRef","sourceMapUri","baseSources","transformReturn","transformResult","SourceModuleDependency","locations","Entrypoint","exportName","GlobalObject","Require","RequireResolve","isArrowFunctionExpression","node","isFunctionDeclaration","isFunctionExpression","isIdentifier","isMemberExpression","isRestElement","isStringLiteral","isLiteral","traverse","ast","visit","enter","leave","_shouldSkip","shouldSkip","context","skipped","childKeys","sort","b","skip","parse$1","visitorCtx","unboundSymbols","locals","indentExclusionRanges","nodeEnv","replacedSymbols","requires","requireResolves","skipTransform","dependencies","parse$2","allowReturnOutsideFunction","sourceType","scopingAndRequiresVisitor","collectGlobalsVisitor","requiresBySpec","requireDependency","fromRequire","requireResolvesBySpec","fromRequireResolve","symbolName","shim","globalModules","fromGlobalObject","export","location","addSourcemapLocation","_parent","isVariableDeclaration","nextParent","isScope","isBlockScope","declarations","declarePattern","declareFunction","isFunction","isClassDeclaration","isTryStatement","handler","param","visitAndCaptureScoping","isIfStatement","isBinaryExpression","operator","left","right","memberExpressionMatches","rootObject","remove","consequent","alternate","visitAndSkipBranches","isCallExpression","callee","firstArg","console","warn","property","visitRequires","nextCheck","contentOnly","storeName","isPropertyOfMemberExpression","isProperty","isKeyOfProperty","isBindingIdentifier","foundBinding","declaresArguments","isThisExpression","declaresThis","params","isObjectPattern","properties","argument","isArrayPattern","elements","isAssignmentPattern","isProgram","isBlockStatement","pattern","memberParts","createRuntime","velcro","runtime","Module","importMap","exports","require","createRequire","Runtime","imports","scopes","defs","modules","dependents","resolveSpecAgainstImportMap","moduleDefinition","factory","specParts","__filename","__dirname","_spec","inject","invalidate","invalidations","queue","dependent","scopesForId","mappedId","ChunkOutput","bundle","sourceModules","inputMap","includeContent","hires","sourceMapTreeMappings","sourceHref","sourceModule","sourceMapsTree","traceMappings","cachedCode","cachedSourceMap","generateSourceMap","cachedSourceMapString","cachedSourceMapDataUri","toDataUri","Chunk","edgesFrom","edgesTo","edges","edge","fromHref","fromUri","toHref","toUri","Bundle","moduleScopes","sourceModuleCode","clone","append","addSource","injectRuntime","Graph","DEFAULT_SHIM_GLOBALS","globalThis","SourceModule","visits","Build","disposer","errors","seen","pendingModuleOperations","onCompletedEmitter","onErrorEmitter","onProgressEmitter","onCompleted","graph","onError","tokenSource","CancellationTokenSource","catch","cancel","fn","fire","progress","completed","pending","GraphBuilder","edgesByDependency","edgesByInvalidation","sourceModulesByInvalidation","pluginManager","build","dep","runAsync","executeResolveDependency","createEdge","addEdge","loadEdge","hasSourceModule","existingSourceModule","addSourceModule","visitSourceModule","executeLoad","executeTransform","parseResult","toRootUri","executeResolveEntrypoint","fromEntrypoint","existingEdge","loadDependency","entrypoints","loadEntrypoint","isUri","deleteAll","fromRootUri","sucrasePlugin","extensions","transforms","uriTestRx","RegExp","jsxPragmaRx","jsxFragmentPragmaRx","sucraseOptions","filePath","production","sourceMapOptions","compiledFilename","jsxPragma","jsxPragmaMatches","jsxFragmentPragma","jsxFragmentPragmaMatches","isValidEntry","isValidFile","isValidDirectory","specToString","JSDelivrCdn","specRx","protocol","host","mapChildEntry","matches","dataHost","UnpkgCdn","UNPKG_SPEC_RX","CdnStrategy","readUrlFn","cdn","urlForPackageFile","contentCache","locks","packageEntriesCache","packageJsonCache","isPrefixOf","unresolvedUri","resolveUri","_withRootUriCheck","unresolvedSpec","parseUrl","packageJsonReturn","runInChildContext","_readPackageJsonWithCache","packageJson","results","getResolveRoot","_readPackageEntriesWithCache","resolveRootUri","entriesReturn","canonicalizedSpec","traversalSegments","parentEntry","find","uriStr","cached","recordVisit","ResolverContext","VisitKind","wrappedReturn","debug","_withLock","packageEntriesCacheForModule","exactMatch","range","validRange","satisfies","_readPackageEntries","urlForPackageList","dataStr","normalizePackageListing","packageJsonCacheForModule","_readPackageJson","contentReturn","contentResult","manifest","canonicalHref","lockKey","lock","runCriticalSection","locked","CompoundStrategy","strategies","method","strategy","_delegateToStrategy","getUrlForBareModule","AbstractResolverStrategy","readUrl","fetch","arrayBuffer","VelcroMonaco","monaco","fsm","states","initial","onEvent","transitionTo","stateName","dirty","onEnter","eventName","graphBuilder","buildConfig","autoBuild","waiting","timerHandle","setTimeout","sendEvent","autoBuildWaitTimeout","stateDisposer","clearTimeout","timer_fired","building","Date","now","localStrategy","incremental","onProgress","build_complete","latency","build_error","build_progress","built","onStateChangeEmitter","npmStrategy","forJsDelivr","rootStrategy","mutableBuildState","pendingEvents","Resolver","packageMain","cssCode","BACKSLASH","SINGLE_QUOTE","NL","CR","prependRight","getModels","trackModel","onDidCreateModel","currentStateDef","state","nextStateConfig","fromState","onWillDispose","removeFile","handleChange","disposerReference","getValue","onDidChangeContent","PreviewProgress","props","total","Math","round","PreviewIframeWrap","PreviewWrap","PreviewMessageError","PreviewMessageErrorText","isInternal","PreviewMessages","PreviewMessageLine","PreviewMessage","lines","Preview","previewWrapRef","previewIframeRef","useState","buildState","setBuildState","setMessages","buildProgress","setBuildProgress","onMessage","contentWindow","log","window","addEventListener","removeEventListener","onStateChange","splitChunks","buildForStaticRuntime","codeWithStart","entrypoint","runtimeCode","sourceMapDataUri","codeBundleFile","markup","URL","createObjectURL","htmlUrl","iframe","document","createElement","style","display","src","appendChild","onLoad","once","Entry","modelFocused","color","cursor","backgroundColor","CreateEntry","SidebarFileDelete","Button","StyledTooltip","SidebarFile","activeModel","workbench","setActiveModel","disposable","trackEditor","onDidFocusEditorText","hasTextFocus","onDidCreateEditor","useActiveModel","tooltip","useTooltipState","gutter","onClick","TooltipReference","as","role","aria-label","Tooltip","Sidebar","sortEntries","models","initialEntries","reduce","modelUri","nestedPath","nextDirIdx","setEntries","onWillDisposeModel","findIndex","splice","useDirectory","prompt","onClickCreate","PlaygroundCmp","project","Provider","Playground","react","trim","ServiceWorkerContext","ServiceWorkerProvider","waitingServiceWorker","assetsUpdateReady","assetsCached","useMemo","updateAssets","reload","postMessage","PlaygroundWrapper","StatusBarItem","StatusBarStyles","AppWrapper","Title","Subtitle","Links","Header","globalCss","css","App","CssBaseline","styles","rel","hostname","navigator","serviceWorker","ready","registration","unregister","ReactDOM","render","getElementById","SPEC_RX","parseBareModuleSpec","bareModuleSpec","nameSpec","NODE_CORE_SHIMS","string_decoder","punycode","_uri","settings","overrides","setPrototypeOf","CACHE","Symbol","Visits","cmp","equals","toArray","mapResultWithVisits","cache","cacheInvalidations","debugMode","operationName","encodedOperation","encodePathNode","includes","formattedPath","decodePathNode","_wrapError","resetPath","concat","resetVisits","getCanonicalUrl","receiver","runWithCache","getSettings","invalidated","cacheKey","operationCache","listEntries","readParentPackageJson","contextFn","runInContext","forOperation","mappedResult","cacheEntries","cacheSegment","cacheResult","createStoreResultFn","args","apply","promiseRet","wrappedRet","repeat","parts","bothResolved","canonicalizationResult","resolveRootResult","settingsResult","rootUriWithoutTrailingSlash","resolveAsDirectory","resolveAsFile","readParentPackageJsonReturn","resolveAndPackageJson","readParentPackageJsonResult","parentPackageJson","parsedSpec","resolveBareModule","relativeUri","locatorName","locatorSpec","locatorPath","resolveRootReturn","nextUri","maxIterations","parentPackageJsonReturn","parentPackageJsonResult","directoryUri","devDependencies","peerDependencies","builtIn","bareModuleUriReturn","bareModuleUriResult","listEntriesReturn","listEntriesResult","mainPathname","packageJsonUri","packageJsonEntry","packageJsonContentReturn","packageJsonContentResult","fileUri","ignoreBrowserOverrides","TypeError","browserOverrides","readParentPackageJsonInternal","uriIsCanonicalized","browserMap","packageJsonDir","impliedUri","targetSpec","containingDirUri","entriesResult","entryDirectoryMap","entryFileMap","childFilename","getFirstPathSegmentAfterPrefix","hrefWithExtensionUri","hrefWithExtension","mapping","canonicalizationReturn","visitedDirs","hostRootHref","containingDirUrl","readPackageJsonOrRecurse","parentPackageJsonContentReturn","parentPackageJsonContentResult","parentDir","disposed","rootCtx","runInIsolatedContext"],"mappings":"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","file":"static/js/main.7b77b374.chunk.js","sourcesContent":["export { CancellationToken, CancellationTokenSource, DisposableStore, Emitter, Event } from 'ts-primitives';\n\nclass BaseError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = this.constructor.name;\n    }\n}\nclass AmbiguousModuleError extends BaseError {\n}\nclass CanceledError extends BaseError {\n}\nclass EntryExcludedError extends BaseError {\n    constructor(uri) {\n        super(`Entry was excluded by current configuration '${uri.toString()}'`);\n    }\n}\nclass EntryNotFoundError extends BaseError {\n    constructor(uri) {\n        super(`Unable to resolve '${uri.toString()}'`);\n    }\n}\nclass DependencyNotFoundError extends EntryNotFoundError {\n    constructor(spec, parentUri) {\n        super(`The dependency '${spec}' of '${parentUri.toString()}' was not found`);\n    }\n}\nclass NotResolvableError extends BaseError {\n}\nclass ParseError extends BaseError {\n    constructor(uri, message) {\n        super(`Parsing failed for '${uri.toString()}': ${message}`);\n        this.uri = uri;\n    }\n}\nfunction isCanceledError(err) {\n    return err instanceof CanceledError || (err && err.name === 'CanceledError');\n}\n\n// See: https://github.com/microsoft/TypeScript/pull/26063#issuecomment-461576933\nfunction all(values, token) {\n    let shouldAwait = false;\n    const result = values.map((element) => {\n        if (isThenable(element)) {\n            shouldAwait = true;\n            return checkCancellation(element, token);\n        }\n        return element;\n    });\n    if (shouldAwait) {\n        return Promise.all(result);\n    }\n    return values;\n}\nasync function checkCancellation(promise, token) {\n    try {\n        const result = await promise;\n        if (token.isCancellationRequested) {\n            return Promise.reject(new CanceledError());\n        }\n        return result;\n    }\n    catch (err) {\n        if (token.isCancellationRequested) {\n            return Promise.reject(new CanceledError());\n        }\n        throw err;\n    }\n}\nfunction isThenable(object) {\n    return (object &&\n        // Detection of 'normal' thenable\n        (typeof object.then === 'function' ||\n            // Detection for regenerator runtime state\n            (typeof object.done === 'boolean' &&\n                typeof object.next === 'number' &&\n                typeof object.pre === 'number')));\n}\n\nvar Base64;\n(function (Base64) {\n    Base64.decode = typeof global === 'object' && typeof global['Buffer'] === 'function'\n        ? (data) => global['Buffer'].from(data, 'base64').toString('utf-8')\n        : typeof atob === 'function'\n            ? (data) => decodeURIComponent(escape(atob(data)))\n            : (_data) => {\n                throw new Error('The environment has neither the Buffer nor btoa functions. Please consider polyfilling one of these apis.');\n            };\n    Base64.encode = typeof global === 'object' && typeof global['Buffer'] === 'function'\n        ? (data) => global['Buffer'].from(data).toString('base64')\n        : typeof btoa === 'function'\n            ? (data) => btoa(unescape(encodeURIComponent(data)))\n            : (_data) => {\n                throw new Error('The environment has neither the Buffer nor btoa functions. Please consider polyfilling one of these apis.');\n            };\n})(Base64 || (Base64 = {}));\n\nclass Decoder {\n    constructor() {\n        if (typeof TextDecoder !== 'undefined') {\n            this.decoder = new TextDecoder();\n        }\n        else if (typeof Buffer !== 'function' || typeof Buffer['from'] !== 'function') {\n            throw new Error('The environment supports neither the TextDecoder nor Buffer API. Please consider polyfilling one of these.');\n        }\n    }\n    decode(buf) {\n        const str = this.decoder\n            ? this.decoder.decode(buf)\n            : Buffer.from(buf).toString('utf-8');\n        return str.charCodeAt(0) === 0xfeff ? str.slice(1) : str;\n    }\n}\n\nclass MapSet {\n    constructor() {\n        this._data = new Map();\n    }\n    get size() {\n        return this._data.size;\n    }\n    add(key, value) {\n        let values = this._data.get(key);\n        if (!values) {\n            values = new Set();\n            this._data.set(key, values);\n        }\n        values.add(value);\n        return this;\n    }\n    clear() {\n        this._data.clear();\n    }\n    delete(key, value) {\n        const values = this._data.get(key);\n        if (values) {\n            const ret = values.delete(value);\n            if (!values.size) {\n                this._data.delete(key);\n            }\n            return ret;\n        }\n        return false;\n    }\n    deleteAll(key) {\n        return this._data.delete(key);\n    }\n    get(key) {\n        return this._data.get(key);\n    }\n    has(key) {\n        return this._data.has(key);\n    }\n    hasValue(key, value) {\n        const values = this._data.get(key);\n        return values ? values.has(value) : false;\n    }\n    *entries() {\n        for (const [key, values] of this._data.entries()) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const values of this._data.values()) {\n            yield* values.values();\n        }\n    }\n}\n\nfunction isValidPartialPackageJson(json) {\n    return (typeof json === 'object' &&\n        json !== null &&\n        !hasInvalidOptionalStringField(json, 'name') &&\n        !hasInvalidOptionalStringField(json, 'version') &&\n        !hasInvalidBrowserField(json) &&\n        !hasInvalidOptionalStringField(json, 'main') &&\n        !hasInvalidOptionalStringField(json, 'module') &&\n        !hasInvalidOptionalStringField(json, 'jsnext:main') &&\n        !hasInvalidOptionalStringField(json, 'unpkg') &&\n        !hasInvalidDependenciesField(json, 'dependencies') &&\n        !hasInvalidDependenciesField(json, 'devDependencies') &&\n        !hasInvalidDependenciesField(json, 'peerDependencies'));\n}\nfunction isValidPackageJson(json) {\n    return (typeof json === 'object' &&\n        json !== null &&\n        !hasInvalidRequiredStringField(json, 'name') &&\n        !hasInvalidRequiredStringField(json, 'version') &&\n        !hasInvalidBrowserField(json) &&\n        !hasInvalidOptionalStringField(json, 'main') &&\n        !hasInvalidOptionalStringField(json, 'module') &&\n        !hasInvalidOptionalStringField(json, 'jsnext:main') &&\n        !hasInvalidOptionalStringField(json, 'unpkg') &&\n        !hasInvalidDependenciesField(json, 'dependencies') &&\n        !hasInvalidDependenciesField(json, 'devDependencies') &&\n        !hasInvalidDependenciesField(json, 'peerDependencies'));\n}\nfunction hasInvalidBrowserField(json) {\n    let error = '';\n    const browser = json.browser;\n    if (browser) {\n        if (typeof browser === 'object') {\n            for (const key in browser) {\n                if (typeof key !== 'string') {\n                    error = `The key ${key} of .browser must be a string`;\n                    break;\n                }\n                if (typeof browser[key] !== 'string' && browser[key] !== false) {\n                    error = `The value ${key} of .browser must be a string or false`;\n                    break;\n                }\n            }\n        }\n    }\n    return error;\n}\nfunction hasInvalidRequiredStringField(json, field) {\n    return typeof json[field] !== 'string';\n}\nfunction hasInvalidOptionalStringField(json, field) {\n    return json[field] !== undefined && typeof json[field] !== 'string';\n}\nfunction hasInvalidDependenciesField(json, field) {\n    return (json[field] !== undefined &&\n        typeof json[field] === 'object' &&\n        json[field] !== null &&\n        !Object.keys(json[field]).every((key) => typeof key === 'string' && typeof json[field][key] === 'string'));\n}\nfunction parseBufferAsPartialPackageJson(decoder, content, spec) {\n    try {\n        const text = decoder.decode(content);\n        return parseTextAsPartialPackageJson(text, spec);\n    }\n    catch (err) {\n        throw new Error(`Error decoding manifest buffer for package ${spec}: ${err.message}`);\n    }\n}\nfunction parseBufferAsPackageJson(decoder, content, spec) {\n    try {\n        const text = decoder.decode(content);\n        return parseTextAsPackageJson(text, spec);\n    }\n    catch (err) {\n        throw new Error(`Error decoding manifest buffer for package ${spec}: ${err.message}`);\n    }\n}\nfunction parseTextAsPartialPackageJson(text, spec) {\n    let json;\n    try {\n        json = JSON.parse(text);\n    }\n    catch (err) {\n        throw new Error(`Error parsing manifest as json for package ${spec}: ${err.message}`);\n    }\n    if (!isValidPartialPackageJson(json)) {\n        throw new Error(`Invalid manifest for the package ${spec}`);\n    }\n    return json;\n}\nfunction parseTextAsPackageJson(text, spec) {\n    const json = parseTextAsPartialPackageJson(text, spec);\n    if (!isValidPackageJson(json)) {\n        throw new Error(`Invalid manifest for the package ${spec}`);\n    }\n    return json;\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 ||\n                    lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base || `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n// export const win32: IPath = {\n// \t// path.resolve([from ...], to)\n// \tresolve(...pathSegments: string[]): string {\n// \t\tlet resolvedDevice = '';\n// \t\tlet resolvedTail = '';\n// \t\tlet resolvedAbsolute = false;\n// \t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n// \t\t\tlet path;\n// \t\t\tif (i >= 0) {\n// \t\t\t\tpath = pathSegments[i];\n// \t\t\t\tvalidateString(path, 'path');\n// \t\t\t\t// Skip empty entries\n// \t\t\t\tif (path.length === 0) {\n// \t\t\t\t\tcontinue;\n// \t\t\t\t}\n// \t\t\t} else if (resolvedDevice.length === 0) {\n// \t\t\t\tpath = process.cwd();\n// \t\t\t} else {\n// \t\t\t\t// Windows has the concept of drive-specific current working\n// \t\t\t\t// directories. If we've resolved a drive letter but not yet an\n// \t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n// \t\t\t\t// the drive cwd is not available. We're sure the device is not\n// \t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n// \t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n// \t\t\t\t// Verify that a cwd was found and that it actually points\n// \t\t\t\t// to our drive. If not, default to the drive's root.\n// \t\t\t\tif (path === undefined ||\n// \t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n// \t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n// \t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tconst len = path.length;\n// \t\t\tlet rootEnd = 0;\n// \t\t\tlet device = '';\n// \t\t\tlet isAbsolute = false;\n// \t\t\tconst code = path.charCodeAt(0);\n// \t\t\t// Try to match a root\n// \t\t\tif (len === 1) {\n// \t\t\t\tif (isPathSeparator(code)) {\n// \t\t\t\t\t// `path` contains just a path separator\n// \t\t\t\t\trootEnd = 1;\n// \t\t\t\t\tisAbsolute = true;\n// \t\t\t\t}\n// \t\t\t} else if (isPathSeparator(code)) {\n// \t\t\t\t// Possible UNC root\n// \t\t\t\t// If we started with a separator, we know we at least have an\n// \t\t\t\t// absolute path of some kind (UNC or otherwise)\n// \t\t\t\tisAbsolute = true;\n// \t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n// \t\t\t\t\t// Matched double path separator at beginning\n// \t\t\t\t\tlet j = 2;\n// \t\t\t\t\tlet last = j;\n// \t\t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\tj++;\n// \t\t\t\t\t}\n// \t\t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t\tconst firstPart = path.slice(last, j);\n// \t\t\t\t\t\t// Matched!\n// \t\t\t\t\t\tlast = j;\n// \t\t\t\t\t\t// Match 1 or more path separators\n// \t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\t\tj++;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t\t\t// Matched!\n// \t\t\t\t\t\t\tlast = j;\n// \t\t\t\t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\t\t\tj++;\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\tif (j === len || j !== last) {\n// \t\t\t\t\t\t\t\t// We matched a UNC root\n// \t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n// \t\t\t\t\t\t\t\trootEnd = j;\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\trootEnd = 1;\n// \t\t\t\t}\n// \t\t\t} else if (isWindowsDeviceRoot(code) &&\n// \t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n// \t\t\t\t// Possible device root\n// \t\t\t\tdevice = path.slice(0, 2);\n// \t\t\t\trootEnd = 2;\n// \t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n// \t\t\t\t\t// Treat separator following drive name as an absolute path\n// \t\t\t\t\t// indicator\n// \t\t\t\t\tisAbsolute = true;\n// \t\t\t\t\trootEnd = 3;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (device.length > 0) {\n// \t\t\t\tif (resolvedDevice.length > 0) {\n// \t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n// \t\t\t\t\t\t// This path points to another device so it is not applicable\n// \t\t\t\t\t\tcontinue;\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\tresolvedDevice = device;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (resolvedAbsolute) {\n// \t\t\t\tif (resolvedDevice.length > 0) {\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t} else {\n// \t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n// \t\t\t\tresolvedAbsolute = isAbsolute;\n// \t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\t// At this point the path should be resolved to a full absolute path,\n// \t\t// but handle relative paths to be safe (might happen when process.cwd()\n// \t\t// fails)\n// \t\t// Normalize the tail path\n// \t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n// \t\t\tisPathSeparator);\n// \t\treturn resolvedAbsolute ?\n// \t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n// \t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n// \t},\n// \tnormalize(path: string): string {\n// \t\tvalidateString(path, 'path');\n// \t\tconst len = path.length;\n// \t\tif (len === 0) {\n// \t\t\treturn '.';\n// \t\t}\n// \t\tlet rootEnd = 0;\n// \t\tlet device;\n// \t\tlet isAbsolute = false;\n// \t\tconst code = path.charCodeAt(0);\n// \t\t// Try to match a root\n// \t\tif (len === 1) {\n// \t\t\t// `path` contains just a single char, exit early to avoid\n// \t\t\t// unnecessary work\n// \t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n// \t\t}\n// \t\tif (isPathSeparator(code)) {\n// \t\t\t// Possible UNC root\n// \t\t\t// If we started with a separator, we know we at least have an absolute\n// \t\t\t// path of some kind (UNC or otherwise)\n// \t\t\tisAbsolute = true;\n// \t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n// \t\t\t\t// Matched double path separator at beginning\n// \t\t\t\tlet j = 2;\n// \t\t\t\tlet last = j;\n// \t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\tj++;\n// \t\t\t\t}\n// \t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\tconst firstPart = path.slice(last, j);\n// \t\t\t\t\t// Matched!\n// \t\t\t\t\tlast = j;\n// \t\t\t\t\t// Match 1 or more path separators\n// \t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\tj++;\n// \t\t\t\t\t}\n// \t\t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t\t// Matched!\n// \t\t\t\t\t\tlast = j;\n// \t\t\t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\t\tj++;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j === len) {\n// \t\t\t\t\t\t\t// We matched a UNC root only\n// \t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n// \t\t\t\t\t\t\t// is nothing left to process\n// \t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j !== last) {\n// \t\t\t\t\t\t\t// We matched a UNC root with leftovers\n// \t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n// \t\t\t\t\t\t\trootEnd = j;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t} else {\n// \t\t\t\trootEnd = 1;\n// \t\t\t}\n// \t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n// \t\t\t// Possible device root\n// \t\t\tdevice = path.slice(0, 2);\n// \t\t\trootEnd = 2;\n// \t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n// \t\t\t\t// Treat separator following drive name as an absolute path\n// \t\t\t\t// indicator\n// \t\t\t\tisAbsolute = true;\n// \t\t\t\trootEnd = 3;\n// \t\t\t}\n// \t\t}\n// \t\tlet tail = rootEnd < len ?\n// \t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n// \t\t\t'';\n// \t\tif (tail.length === 0 && !isAbsolute) {\n// \t\t\ttail = '.';\n// \t\t}\n// \t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n// \t\t\ttail += '\\\\';\n// \t\t}\n// \t\tif (device === undefined) {\n// \t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n// \t\t}\n// \t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n// \t},\n// \tisAbsolute(path: string): boolean {\n// \t\tvalidateString(path, 'path');\n// \t\tconst len = path.length;\n// \t\tif (len === 0) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tconst code = path.charCodeAt(0);\n// \t\treturn isPathSeparator(code) ||\n// \t\t\t// Possible device root\n// \t\t\tlen > 2 &&\n// \t\t\tisWindowsDeviceRoot(code) &&\n// \t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n// \t\t\tisPathSeparator(path.charCodeAt(2));\n// \t},\n// \tjoin(...paths: string[]): string {\n// \t\tif (paths.length === 0) {\n// \t\t\treturn '.';\n// \t\t}\n// \t\tlet joined;\n// \t\tlet firstPart: string | undefined;\n// \t\tfor (let i = 0; i < paths.length; ++i) {\n// \t\t\tconst arg = paths[i];\n// \t\t\tvalidateString(arg, 'path');\n// \t\t\tif (arg.length > 0) {\n// \t\t\t\tif (joined === undefined) {\n// \t\t\t\t\tjoined = firstPart = arg;\n// \t\t\t\t}\n// \t\t\t\telse {\n// \t\t\t\t\tjoined += `\\\\${arg}`;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\tif (joined === undefined) {\n// \t\t\treturn '.';\n// \t\t}\n// \t\t// Make sure that the joined path doesn't start with two slashes, because\n// \t\t// normalize() will mistake it for an UNC path then.\n// \t\t//\n// \t\t// This step is skipped when it is very clear that the user actually\n// \t\t// intended to point at an UNC path. This is assumed when the first\n// \t\t// non-empty string arguments starts with exactly two slashes followed by\n// \t\t// at least one more non-slash character.\n// \t\t//\n// \t\t// Note that for normalize() to treat a path as an UNC path it needs to\n// \t\t// have at least 2 components, so we don't filter for that here.\n// \t\t// This means that the user can use join to construct UNC paths from\n// \t\t// a server name and a share name; for example:\n// \t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n// \t\tlet needsReplace = true;\n// \t\tlet slashCount = 0;\n// \t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n// \t\t\t++slashCount;\n// \t\t\tconst firstLen = firstPart.length;\n// \t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n// \t\t\t\t++slashCount;\n// \t\t\t\tif (firstLen > 2) {\n// \t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n// \t\t\t\t\t\t++slashCount;\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\t// We matched a UNC path in the first part\n// \t\t\t\t\t\tneedsReplace = false;\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\tif (needsReplace) {\n// \t\t\t// Find any more consecutive slashes we need to replace\n// \t\t\twhile (slashCount < joined.length &&\n// \t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n// \t\t\t\tslashCount++;\n// \t\t\t}\n// \t\t\t// Replace the slashes if needed\n// \t\t\tif (slashCount >= 2) {\n// \t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n// \t\t\t}\n// \t\t}\n// \t\treturn win32.normalize(joined);\n// \t},\n// \t// It will solve the relative path from `from` to `to`, for instance:\n// \t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n// \t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n// \t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n// \trelative(from: string, to: string): string {\n// \t\tvalidateString(from, 'from');\n// \t\tvalidateString(to, 'to');\n// \t\tif (from === to) {\n// \t\t\treturn '';\n// \t\t}\n// \t\tconst fromOrig = win32.resolve(from);\n// \t\tconst toOrig = win32.resolve(to);\n// \t\tif (fromOrig === toOrig) {\n// \t\t\treturn '';\n// \t\t}\n// \t\tfrom = fromOrig.toLowerCase();\n// \t\tto = toOrig.toLowerCase();\n// \t\tif (from === to) {\n// \t\t\treturn '';\n// \t\t}\n// \t\t// Trim any leading backslashes\n// \t\tlet fromStart = 0;\n// \t\twhile (fromStart < from.length &&\n// \t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n// \t\t\tfromStart++;\n// \t\t}\n// \t\t// Trim trailing backslashes (applicable to UNC paths only)\n// \t\tlet fromEnd = from.length;\n// \t\twhile (fromEnd - 1 > fromStart &&\n// \t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n// \t\t\tfromEnd--;\n// \t\t}\n// \t\tconst fromLen = fromEnd - fromStart;\n// \t\t// Trim any leading backslashes\n// \t\tlet toStart = 0;\n// \t\twhile (toStart < to.length &&\n// \t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n// \t\t\ttoStart++;\n// \t\t}\n// \t\t// Trim trailing backslashes (applicable to UNC paths only)\n// \t\tlet toEnd = to.length;\n// \t\twhile (toEnd - 1 > toStart &&\n// \t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n// \t\t\ttoEnd--;\n// \t\t}\n// \t\tconst toLen = toEnd - toStart;\n// \t\t// Compare paths to find the longest common path from root\n// \t\tconst length = fromLen < toLen ? fromLen : toLen;\n// \t\tlet lastCommonSep = -1;\n// \t\tlet i = 0;\n// \t\tfor (; i < length; i++) {\n// \t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n// \t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n// \t\t\t\tbreak;\n// \t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n// \t\t\t\tlastCommonSep = i;\n// \t\t\t}\n// \t\t}\n// \t\t// We found a mismatch before the first common path separator was seen, so\n// \t\t// return the original `to`.\n// \t\tif (i !== length) {\n// \t\t\tif (lastCommonSep === -1) {\n// \t\t\t\treturn toOrig;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tif (toLen > length) {\n// \t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n// \t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n// \t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n// \t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n// \t\t\t\t}\n// \t\t\t\tif (i === 2) {\n// \t\t\t\t\t// We get here if `from` is the device root.\n// \t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n// \t\t\t\t\treturn toOrig.slice(toStart + i);\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (fromLen > length) {\n// \t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n// \t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n// \t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n// \t\t\t\t\tlastCommonSep = i;\n// \t\t\t\t} else if (i === 2) {\n// \t\t\t\t\t// We get here if `to` is the device root.\n// \t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n// \t\t\t\t\tlastCommonSep = 3;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (lastCommonSep === -1) {\n// \t\t\t\tlastCommonSep = 0;\n// \t\t\t}\n// \t\t}\n// \t\tlet out = '';\n// \t\t// Generate the relative path based on the path difference between `to` and\n// \t\t// `from`\n// \t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n// \t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n// \t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n// \t\t\t}\n// \t\t}\n// \t\ttoStart += lastCommonSep;\n// \t\t// Lastly, append the rest of the destination (`to`) path that comes after\n// \t\t// the common path parts\n// \t\tif (out.length > 0) {\n// \t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n// \t\t}\n// \t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n// \t\t\t++toStart;\n// \t\t}\n// \t\treturn toOrig.slice(toStart, toEnd);\n// \t},\n// \ttoNamespacedPath(path: string): string {\n// \t\t// Note: this will *probably* throw somewhere.\n// \t\tif (typeof path !== 'string') {\n// \t\t\treturn path;\n// \t\t}\n// \t\tif (path.length === 0) {\n// \t\t\treturn '';\n// \t\t}\n// \t\tconst resolvedPath = win32.resolve(path);\n// \t\tif (resolvedPath.length <= 2) {\n// \t\t\treturn path;\n// \t\t}\n// \t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n// \t\t\t// Possible UNC root\n// \t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n// \t\t\t\tconst code = resolvedPath.charCodeAt(2);\n// \t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n// \t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n// \t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n// \t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n// \t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n// \t\t\t// Matched device root, convert the path to a long UNC path\n// \t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n// \t\t}\n// \t\treturn path;\n// \t},\n// \tdirname(path: string): string {\n// \t\tvalidateString(path, 'path');\n// \t\tconst len = path.length;\n// \t\tif (len === 0) {\n// \t\t\treturn '.';\n// \t\t}\n// \t\tlet rootEnd = -1;\n// \t\tlet offset = 0;\n// \t\tconst code = path.charCodeAt(0);\n// \t\tif (len === 1) {\n// \t\t\t// `path` contains just a path separator, exit early to avoid\n// \t\t\t// unnecessary work or a dot.\n// \t\t\treturn isPathSeparator(code) ? path : '.';\n// \t\t}\n// \t\t// Try to match a root\n// \t\tif (isPathSeparator(code)) {\n// \t\t\t// Possible UNC root\n// \t\t\trootEnd = offset = 1;\n// \t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n// \t\t\t\t// Matched double path separator at beginning\n// \t\t\t\tlet j = 2;\n// \t\t\t\tlet last = j;\n// \t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\tj++;\n// \t\t\t\t}\n// \t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t// Matched!\n// \t\t\t\t\tlast = j;\n// \t\t\t\t\t// Match 1 or more path separators\n// \t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\tj++;\n// \t\t\t\t\t}\n// \t\t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t\t// Matched!\n// \t\t\t\t\t\tlast = j;\n// \t\t\t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\t\tj++;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j === len) {\n// \t\t\t\t\t\t\t// We matched a UNC root only\n// \t\t\t\t\t\t\treturn path;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j !== last) {\n// \t\t\t\t\t\t\t// We matched a UNC root with leftovers\n// \t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n// \t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n// \t\t\t\t\t\t\trootEnd = offset = j + 1;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\t// Possible device root\n// \t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n// \t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n// \t\t\toffset = rootEnd;\n// \t\t}\n// \t\tlet end = -1;\n// \t\tlet matchedSlash = true;\n// \t\tfor (let i = len - 1; i >= offset; --i) {\n// \t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n// \t\t\t\tif (!matchedSlash) {\n// \t\t\t\t\tend = i;\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t} else {\n// \t\t\t\t// We saw the first non-path separator\n// \t\t\t\tmatchedSlash = false;\n// \t\t\t}\n// \t\t}\n// \t\tif (end === -1) {\n// \t\t\tif (rootEnd === -1) {\n// \t\t\t\treturn '.';\n// \t\t\t}\n// \t\t\tend = rootEnd;\n// \t\t}\n// \t\treturn path.slice(0, end);\n// \t},\n// \tbasename(path: string, ext?: string): string {\n// \t\tif (ext !== undefined) {\n// \t\t\tvalidateString(ext, 'ext');\n// \t\t}\n// \t\tvalidateString(path, 'path');\n// \t\tlet start = 0;\n// \t\tlet end = -1;\n// \t\tlet matchedSlash = true;\n// \t\tlet i;\n// \t\t// Check for a drive letter prefix so as not to mistake the following\n// \t\t// path separator as an extra separator at the end of the path that can be\n// \t\t// disregarded\n// \t\tif (path.length >= 2 &&\n// \t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n// \t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n// \t\t\tstart = 2;\n// \t\t}\n// \t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n// \t\t\tif (ext === path) {\n// \t\t\t\treturn '';\n// \t\t\t}\n// \t\t\tlet extIdx = ext.length - 1;\n// \t\t\tlet firstNonSlashEnd = -1;\n// \t\t\tfor (i = path.length - 1; i >= start; --i) {\n// \t\t\t\tconst code = path.charCodeAt(i);\n// \t\t\t\tif (isPathSeparator(code)) {\n// \t\t\t\t\t// If we reached a path separator that was not part of a set of path\n// \t\t\t\t\t// separators at the end of the string, stop now\n// \t\t\t\t\tif (!matchedSlash) {\n// \t\t\t\t\t\tstart = i + 1;\n// \t\t\t\t\t\tbreak;\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\tif (firstNonSlashEnd === -1) {\n// \t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n// \t\t\t\t\t\t// we need it if the extension ends up not matching\n// \t\t\t\t\t\tmatchedSlash = false;\n// \t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n// \t\t\t\t\t}\n// \t\t\t\t\tif (extIdx >= 0) {\n// \t\t\t\t\t\t// Try to match the explicit extension\n// \t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n// \t\t\t\t\t\t\tif (--extIdx === -1) {\n// \t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n// \t\t\t\t\t\t\t\t// component\n// \t\t\t\t\t\t\t\tend = i;\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n// \t\t\t\t\t\t\t// component\n// \t\t\t\t\t\t\textIdx = -1;\n// \t\t\t\t\t\t\tend = firstNonSlashEnd;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif (start === end) {\n// \t\t\t\tend = firstNonSlashEnd;\n// \t\t\t} else if (end === -1) {\n// \t\t\t\tend = path.length;\n// \t\t\t}\n// \t\t\treturn path.slice(start, end);\n// \t\t}\n// \t\tfor (i = path.length - 1; i >= start; --i) {\n// \t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n// \t\t\t\t// If we reached a path separator that was not part of a set of path\n// \t\t\t\t// separators at the end of the string, stop now\n// \t\t\t\tif (!matchedSlash) {\n// \t\t\t\t\tstart = i + 1;\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t} else if (end === -1) {\n// \t\t\t\t// We saw the first non-path separator, mark this as the end of our\n// \t\t\t\t// path component\n// \t\t\t\tmatchedSlash = false;\n// \t\t\t\tend = i + 1;\n// \t\t\t}\n// \t\t}\n// \t\tif (end === -1) {\n// \t\t\treturn '';\n// \t\t}\n// \t\treturn path.slice(start, end);\n// \t},\n// \textname(path: string): string {\n// \t\tvalidateString(path, 'path');\n// \t\tlet start = 0;\n// \t\tlet startDot = -1;\n// \t\tlet startPart = 0;\n// \t\tlet end = -1;\n// \t\tlet matchedSlash = true;\n// \t\t// Track the state of characters (if any) we see before our first dot and\n// \t\t// after any path separator we find\n// \t\tlet preDotState = 0;\n// \t\t// Check for a drive letter prefix so as not to mistake the following\n// \t\t// path separator as an extra separator at the end of the path that can be\n// \t\t// disregarded\n// \t\tif (path.length >= 2 &&\n// \t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n// \t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n// \t\t\tstart = startPart = 2;\n// \t\t}\n// \t\tfor (let i = path.length - 1; i >= start; --i) {\n// \t\t\tconst code = path.charCodeAt(i);\n// \t\t\tif (isPathSeparator(code)) {\n// \t\t\t\t// If we reached a path separator that was not part of a set of path\n// \t\t\t\t// separators at the end of the string, stop now\n// \t\t\t\tif (!matchedSlash) {\n// \t\t\t\t\tstartPart = i + 1;\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t\tcontinue;\n// \t\t\t}\n// \t\t\tif (end === -1) {\n// \t\t\t\t// We saw the first non-path separator, mark this as the end of our\n// \t\t\t\t// extension\n// \t\t\t\tmatchedSlash = false;\n// \t\t\t\tend = i + 1;\n// \t\t\t}\n// \t\t\tif (code === CHAR_DOT) {\n// \t\t\t\t// If this is our first dot, mark it as the start of our extension\n// \t\t\t\tif (startDot === -1) {\n// \t\t\t\t\tstartDot = i;\n// \t\t\t\t}\n// \t\t\t\telse if (preDotState !== 1) {\n// \t\t\t\t\tpreDotState = 1;\n// \t\t\t\t}\n// \t\t\t} else if (startDot !== -1) {\n// \t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n// \t\t\t\t// have a good chance at having a non-empty extension\n// \t\t\t\tpreDotState = -1;\n// \t\t\t}\n// \t\t}\n// \t\tif (startDot === -1 ||\n// \t\t\tend === -1 ||\n// \t\t\t// We saw a non-dot character immediately before the dot\n// \t\t\tpreDotState === 0 ||\n// \t\t\t// The (right-most) trimmed path component is exactly '..'\n// \t\t\t(preDotState === 1 &&\n// \t\t\t\tstartDot === end - 1 &&\n// \t\t\t\tstartDot === startPart + 1)) {\n// \t\t\treturn '';\n// \t\t}\n// \t\treturn path.slice(startDot, end);\n// \t},\n// \tformat: _format.bind(null, '\\\\'),\n// \tparse(path) {\n// \t\tvalidateString(path, 'path');\n// \t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n// \t\tif (path.length === 0) {\n// \t\t\treturn ret;\n// \t\t}\n// \t\tconst len = path.length;\n// \t\tlet rootEnd = 0;\n// \t\tlet code = path.charCodeAt(0);\n// \t\tif (len === 1) {\n// \t\t\tif (isPathSeparator(code)) {\n// \t\t\t\t// `path` contains just a path separator, exit early to avoid\n// \t\t\t\t// unnecessary work\n// \t\t\t\tret.root = ret.dir = path;\n// \t\t\t\treturn ret;\n// \t\t\t}\n// \t\t\tret.base = ret.name = path;\n// \t\t\treturn ret;\n// \t\t}\n// \t\t// Try to match a root\n// \t\tif (isPathSeparator(code)) {\n// \t\t\t// Possible UNC root\n// \t\t\trootEnd = 1;\n// \t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n// \t\t\t\t// Matched double path separator at beginning\n// \t\t\t\tlet j = 2;\n// \t\t\t\tlet last = j;\n// \t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\tj++;\n// \t\t\t\t}\n// \t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t// Matched!\n// \t\t\t\t\tlast = j;\n// \t\t\t\t\t// Match 1 or more path separators\n// \t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\tj++;\n// \t\t\t\t\t}\n// \t\t\t\t\tif (j < len && j !== last) {\n// \t\t\t\t\t\t// Matched!\n// \t\t\t\t\t\tlast = j;\n// \t\t\t\t\t\t// Match 1 or more non-path separators\n// \t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n// \t\t\t\t\t\t\tj++;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (j === len) {\n// \t\t\t\t\t\t\t// We matched a UNC root only\n// \t\t\t\t\t\t\trootEnd = j;\n// \t\t\t\t\t\t} else if (j !== last) {\n// \t\t\t\t\t\t\t// We matched a UNC root with leftovers\n// \t\t\t\t\t\t\trootEnd = j + 1;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t}\n// \t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n// \t\t\t// Possible device root\n// \t\t\tif (len <= 2) {\n// \t\t\t\t// `path` contains just a drive root, exit early to avoid\n// \t\t\t\t// unnecessary work\n// \t\t\t\tret.root = ret.dir = path;\n// \t\t\t\treturn ret;\n// \t\t\t}\n// \t\t\trootEnd = 2;\n// \t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n// \t\t\t\tif (len === 3) {\n// \t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n// \t\t\t\t\t// unnecessary work\n// \t\t\t\t\tret.root = ret.dir = path;\n// \t\t\t\t\treturn ret;\n// \t\t\t\t}\n// \t\t\t\trootEnd = 3;\n// \t\t\t}\n// \t\t}\n// \t\tif (rootEnd > 0) {\n// \t\t\tret.root = path.slice(0, rootEnd);\n// \t\t}\n// \t\tlet startDot = -1;\n// \t\tlet startPart = rootEnd;\n// \t\tlet end = -1;\n// \t\tlet matchedSlash = true;\n// \t\tlet i = path.length - 1;\n// \t\t// Track the state of characters (if any) we see before our first dot and\n// \t\t// after any path separator we find\n// \t\tlet preDotState = 0;\n// \t\t// Get non-dir info\n// \t\tfor (; i >= rootEnd; --i) {\n// \t\t\tcode = path.charCodeAt(i);\n// \t\t\tif (isPathSeparator(code)) {\n// \t\t\t\t// If we reached a path separator that was not part of a set of path\n// \t\t\t\t// separators at the end of the string, stop now\n// \t\t\t\tif (!matchedSlash) {\n// \t\t\t\t\tstartPart = i + 1;\n// \t\t\t\t\tbreak;\n// \t\t\t\t}\n// \t\t\t\tcontinue;\n// \t\t\t}\n// \t\t\tif (end === -1) {\n// \t\t\t\t// We saw the first non-path separator, mark this as the end of our\n// \t\t\t\t// extension\n// \t\t\t\tmatchedSlash = false;\n// \t\t\t\tend = i + 1;\n// \t\t\t}\n// \t\t\tif (code === CHAR_DOT) {\n// \t\t\t\t// If this is our first dot, mark it as the start of our extension\n// \t\t\t\tif (startDot === -1) {\n// \t\t\t\t\tstartDot = i;\n// \t\t\t\t} else if (preDotState !== 1) {\n// \t\t\t\t\tpreDotState = 1;\n// \t\t\t\t}\n// \t\t\t} else if (startDot !== -1) {\n// \t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n// \t\t\t\t// have a good chance at having a non-empty extension\n// \t\t\t\tpreDotState = -1;\n// \t\t\t}\n// \t\t}\n// \t\tif (end !== -1) {\n// \t\t\tif (startDot === -1 ||\n// \t\t\t\t// We saw a non-dot character immediately before the dot\n// \t\t\t\tpreDotState === 0 ||\n// \t\t\t\t// The (right-most) trimmed path component is exactly '..'\n// \t\t\t\t(preDotState === 1 &&\n// \t\t\t\t\tstartDot === end - 1 &&\n// \t\t\t\t\tstartDot === startPart + 1)) {\n// \t\t\t\tret.base = ret.name = path.slice(startPart, end);\n// \t\t\t} else {\n// \t\t\t\tret.name = path.slice(startPart, startDot);\n// \t\t\t\tret.base = path.slice(startPart, end);\n// \t\t\t\tret.ext = path.slice(startDot, end);\n// \t\t\t}\n// \t\t}\n// \t\t// If the directory is the root, use the entire root as the `dir` including\n// \t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n// \t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n// \t\tif (startPart > 0 && startPart !== rootEnd) {\n// \t\t\tret.dir = path.slice(0, startPart - 1);\n// \t\t} else {\n// \t\t\tret.dir = ret.root;\n// \t\t}\n// \t\treturn ret;\n// \t},\n// \tsep: '\\\\',\n// \tdelimiter: ';',\n// \twin32: null,\n// \tposix: null\n// };\nconst posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null,\n};\nconst normalize = posix.normalize;\nconst isAbsolute = posix.isAbsolute;\nconst join = posix.join;\nconst resolve = posix.resolve;\nconst relative = posix.relative;\nconst dirname = posix.dirname;\nconst basename = posix.basename;\nconst extname = posix.extname;\nconst format = posix.format;\nconst parse = posix.parse;\nconst toNamespacedPath = posix.toNamespacedPath;\nconst sep = posix.sep;\nconst delimiter = posix.delimiter;\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nclass Uri {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static ensureTrailingSlash(uri, trailingSlash = '/') {\n        return uri.with({\n            path: uri.path.replace(TRAILING_SLASH_RX, trailingSlash),\n        });\n    }\n    static equals(l, r) {\n        return (l.authority === r.authority &&\n            l.fragment === r.fragment &&\n            l.path === r.path &&\n            l.query === r.query &&\n            l.scheme === r.scheme);\n    }\n    static getFirstPathSegmentAfterPrefix(child, parent) {\n        const childHref = child.path;\n        const parentHref = parent.path;\n        const parentOffset = parentHref.charAt(parentHref.length - 1) === '/' ? -1 : 0;\n        for (let i = 0; i <= childHref.length; i++) {\n            if (i < parentHref.length) {\n                if (childHref.charAt(i) !== parentHref.charAt(i)) {\n                    throw new Error(`The child entry ${child.toString()} does not have the pathname of ${parent.toString()} as a prefix`);\n                }\n            }\n            else if (i === parentHref.length + parentOffset) {\n                if (childHref.charAt(i) !== '/') {\n                    throw new Error(`The child entry ${child.toString()} does not have the pathname of ${parent.toString()} as a prefix`);\n                }\n            }\n            else if (childHref.charAt(i) === '/') {\n                return childHref.slice(parentHref.length + 1 + parentOffset, i);\n            }\n        }\n        return childHref.slice(parentHref.length + 1 + parentOffset);\n    }\n    static isPrefixOf(prefix, uri) {\n        return (prefix.authority === uri.authority &&\n            prefix.fragment === uri.fragment &&\n            prefix.query === uri.query &&\n            prefix.scheme === uri.scheme &&\n            uri.path.startsWith(prefix.path));\n    }\n    static isUri(thing) {\n        if (thing instanceof Uri) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return (typeof thing.authority === 'string' &&\n            typeof thing.fragment === 'string' &&\n            typeof thing.path === 'string' &&\n            typeof thing.query === 'string' &&\n            typeof thing.scheme === 'string' &&\n            typeof thing.fsPath === 'function' &&\n            typeof thing.with === 'function' &&\n            typeof thing.toString === 'function');\n    }\n    // ---- filesystem path -----------------------\n    /**\n       * Returns a string representing the corresponding file system path of this URI.\n       * platform specific path separator.\n       *\n       * * Will *not* validate the path for invalid characters and semantics.\n       * * Will *not* look at the scheme of this URI.\n       * * The result shall *not* be used for display purposes but for accessing a file on disk.\n       *\n       *\n       * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n       *\n       * ```ts\n          const u = URI.parse('file://server/c$/folder/file.txt')\n          u.authority === 'server'\n          u.path === '/shares/c$/file.txt'\n          u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n      ```\n       *\n       * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n       * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n       * with URIs that represent files on disk (`file` scheme).\n       */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme &&\n            authority === this.authority &&\n            path === this.path &&\n            query === this.query &&\n            fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n       * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n       * `/usr/home`, or `\\\\server\\share\\some\\path`.\n       *\n       * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n       * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n       * `URI.parse('file://' + path)` because the path might contain characters that are\n       * interpreted (# and ?). See the following sample:\n       * ```ts\n      const good = URI.file('/coding/c#/project1');\n      good.scheme === 'file';\n      good.path === '/coding/c#/project1';\n      good.fragment === '';\n      const bad = URI.parse('file://' + '/coding/c#/project1');\n      bad.scheme === 'file';\n      bad.path === '/coding/c'; // path is now broken\n      bad.fragment === '/project1';\n      ```\n       *\n       * @param path A file system path (see `URI#fsPath`)\n       */\n    static file(path) {\n        let authority = _empty;\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPaths on URI without path`);\n        }\n        const newPath = join(uri.path, ...pathFragment);\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = true) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof Uri) {\n            return data;\n        }\n        else {\n            const result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = undefined;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass _URI extends Uri {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = true) {\n        if (!skipEncoding) {\n            // we don't cache that\n            return _asFormatted(this, false);\n        }\n        else {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, true);\n            }\n            return this._formatted;\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1,\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */) ||\n            (code >= 65 /* A */ && code <= 90 /* Z */) ||\n            (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */) ||\n            code === 45 /* Dash */ ||\n            code === 46 /* Period */ ||\n            code === 95 /* Underline */ ||\n            code === 126 /* Tilde */ ||\n            (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */ &&\n        ((uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */) ||\n            (uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)) &&\n        uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding ? encodeURIComponentFast : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 &&\n            path.charCodeAt(0) === 47 /* Slash */ &&\n            path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\nconst TRAILING_SLASH_RX = /\\/?$/;\n\nconst version = '0.45.1';\n\nexport { AmbiguousModuleError, Base64, CanceledError, Decoder, DependencyNotFoundError, EntryExcludedError, EntryNotFoundError, MapSet, NotResolvableError, ParseError, Uri, all, basename, checkCancellation, delimiter, dirname, extname, format, isAbsolute, isCanceledError, isThenable, isValidPackageJson, isValidPartialPackageJson, join, normalize, parse, parseBufferAsPackageJson, parseBufferAsPartialPackageJson, posix, relative, resolve, sep, toNamespacedPath, uriToFsPath, version };\n//# sourceMappingURL=index.js.map\n","import { Uri } from '@velcro/common';\nimport { AbstractResolverStrategyWithRoot, ResolverStrategy } from '@velcro/resolver';\n\nvar FileEncoding;\n(function (FileEncoding) {\n    FileEncoding[\"Base64\"] = \"base64\";\n    FileEncoding[\"UTF8\"] = \"utf-8\";\n})(FileEncoding || (FileEncoding = {}));\nconst encodeText = typeof TextEncoder === 'function'\n    ? (function () {\n        const encoder = new TextEncoder();\n        return function encodeText(data) {\n            return encoder.encode(data).buffer;\n        };\n    })()\n    : typeof Buffer === 'function'\n        ? function encodeText(data) {\n            return Buffer.from(data);\n        }\n        : function encodeText(_data) {\n            throw new Error('The environment provides neither TextEncoder nor Buffer. Please consider polyfilling one of these APIs.');\n        };\nclass MemoryStrategy extends AbstractResolverStrategyWithRoot {\n    constructor(files, rootUri = Uri.parse('memory:/')) {\n        super(Uri.ensureTrailingSlash(rootUri));\n        this.root = {\n            type: ResolverStrategy.EntryKind.Directory,\n            children: {},\n        };\n        for (const pathname in files) {\n            const file = files[pathname];\n            if (typeof file === 'string') {\n                this.addFile(pathname, file);\n            }\n            else {\n                this.addFile(pathname, file.content, { encoding: file.encoding });\n            }\n        }\n    }\n    getEntryAtPath(pathname) {\n        const segments = Array.isArray(pathname)\n            ? pathname.slice()\n            : pathname.split('/').filter(Boolean);\n        let parent = this.root;\n        for (const segment of segments) {\n            if (!parent || parent.type !== ResolverStrategy.EntryKind.Directory) {\n                throw new Error(`Failed to add ${pathname}`);\n            }\n            parent = parent.children[segment];\n        }\n        return parent;\n    }\n    addFile(pathname, content, { encoding = FileEncoding.UTF8, overwrite = false, } = {}) {\n        const segments = pathname.split('/').filter(Boolean);\n        const filename = segments.pop();\n        if (!filename) {\n            throw new Error(`Unable to add a file without a filename '${pathname}'`);\n        }\n        let parent = this.root;\n        for (const segment of segments) {\n            if (!parent || parent.type !== ResolverStrategy.EntryKind.Directory) {\n                throw new Error(`Failed to add ${pathname}`);\n            }\n            let dir = parent.children[segment];\n            if (!dir) {\n                dir = {\n                    type: ResolverStrategy.EntryKind.Directory,\n                    children: {},\n                };\n                parent.children[segment] = dir;\n            }\n            parent = dir;\n        }\n        if (parent.type !== ResolverStrategy.EntryKind.Directory) {\n            throw new Error(`Cannot add file to a non directory entry ${pathname}`);\n        }\n        if (parent.children[filename] && !overwrite) {\n            throw new Error(`Entry already exists at ${pathname}`);\n        }\n        const entry = {\n            type: ResolverStrategy.EntryKind.File,\n            content,\n            encoding,\n        };\n        parent.children[filename] = entry;\n        return entry;\n    }\n    removeFile(pathname) {\n        const segments = pathname.split('/').filter(Boolean);\n        const filename = segments.pop();\n        if (!filename) {\n            return false;\n        }\n        let parent = this.root;\n        for (const segment of segments) {\n            if (!parent || parent.type !== ResolverStrategy.EntryKind.Directory) {\n                return false;\n            }\n            parent = parent.children[segment];\n        }\n        if (!parent || parent.type !== ResolverStrategy.EntryKind.Directory) {\n            return false;\n        }\n        return delete parent.children[filename];\n    }\n    getResolveRoot() {\n        return {\n            uri: this.rootUri,\n        };\n    }\n    listEntries(_ctx, uri) {\n        const urlPathname = Uri.ensureTrailingSlash(uri).fsPath;\n        const basePathname = this.rootUri.fsPath;\n        const fsPathname = urlPathname.startsWith(basePathname)\n            ? urlPathname.slice(basePathname.length - 1)\n            : urlPathname;\n        const parent = this.getEntryAtPath(fsPathname);\n        if (!parent) {\n            throw new Error(`No such directory ${uri.toString()}`);\n        }\n        if (parent.type !== ResolverStrategy.EntryKind.Directory) {\n            throw new Error(`Cannot list entries under a file at ${uri.toString()}`);\n        }\n        const entries = Object.keys(parent.children).map((filename) => {\n            const entry = parent.children[filename];\n            return {\n                uri: Uri.joinPath(this.rootUri, fsPathname, filename),\n                type: entry.type,\n            };\n        });\n        return {\n            entries,\n        };\n    }\n    readFileContent(_ctx, uri) {\n        const urlPathname = Uri.ensureTrailingSlash(uri).fsPath;\n        const basePathname = this.rootUri.fsPath;\n        const fsPathname = urlPathname.startsWith(basePathname)\n            ? urlPathname.slice(basePathname.length - 1)\n            : urlPathname;\n        const entry = this.getEntryAtPath(fsPathname);\n        if (!entry) {\n            throw new Error(`No such file ${uri.toString()}`);\n        }\n        if (entry.type !== 'file') {\n            throw new Error(`Cannot read content of a non-file at ${uri.toString()}`);\n        }\n        switch (entry.encoding) {\n            case FileEncoding.Base64: {\n                const binSting = atob(entry.content);\n                const binArray = new Uint8Array(binSting.length);\n                Array.prototype.forEach.call(binArray, function (_el, idx, arr) {\n                    arr[idx] = binSting.charCodeAt(idx);\n                });\n                return {\n                    content: binArray.buffer,\n                };\n            }\n            case FileEncoding.UTF8: {\n                return {\n                    content: encodeText(entry.content),\n                };\n            }\n            default:\n                throw new Error(`Unsupported encoding for ${uri.toString()}: ${entry.encoding}`);\n        }\n    }\n    uriForPath(pathname) {\n        return Uri.joinPath(this.rootUri, pathname);\n    }\n}\n\nconst version = '0.45.1';\n\nexport { MemoryStrategy, version };\n//# sourceMappingURL=index.js.map\n","import { DisposableStore, Emitter, IDisposable } from '@velcro/common';\nimport * as Monaco from 'monaco-editor';\nimport { createContext, useContext, useEffect, useState } from 'react';\n\nexport class EditorManager implements IDisposable {\n  editor: Monaco.editor.IStandaloneCodeEditor | null = null;\n\n  private readonly disposableStore = new DisposableStore();\n  private readonly initialPath: string | undefined;\n  private readonly viewState = new WeakMap<\n    Monaco.editor.ITextModel,\n    Monaco.editor.ICodeEditorViewState\n  >();\n\n  private readonly onWillFocusModelEmitter = new Emitter<Monaco.editor.ITextModel>();\n  private readonly onDidChangeEmitter = new Emitter<{ model: Monaco.editor.ITextModel }>();\n\n  constructor(options: { files?: Record<string, string>; initialPath?: string } = {}) {\n    this.disposableStore.add(this.onWillFocusModelEmitter);\n    this.disposableStore.add(this.onDidChangeEmitter);\n\n    Monaco.languages.typescript.typescriptDefaults.setEagerModelSync(true);\n    Monaco.languages.typescript.typescriptDefaults.setMaximumWorkerIdleTime(-1);\n    Monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n      allowJs: true,\n      allowNonTsExtensions: true,\n      allowSyntheticDefaultImports: true,\n      baseUrl: '.',\n      checkJs: true,\n      esModuleInterop: true,\n      experimentalDecorators: true,\n      inlineSourceMap: true,\n      inlineSources: true,\n      isolatedModules: false,\n      jsx: Monaco.languages.typescript.JsxEmit.React,\n      lib: ['dom'],\n      module: Monaco.languages.typescript.ModuleKind.CommonJS,\n      moduleResolution: Monaco.languages.typescript.ModuleResolutionKind.NodeJs,\n      noEmit: false,\n      outDir: `dist`,\n      resolveJsonModule: true,\n      rootDir: '/',\n      sourceMap: true,\n      target: Monaco.languages.typescript.ScriptTarget.ES2015,\n      typeRoots: ['node_modules/@types'],\n    });\n    Monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: true,\n      noSyntaxValidation: false,\n    });\n\n    if (options.files) {\n      for (const pathname in options.files) {\n        const content = options.files[pathname];\n\n        this.createModel(pathname, content);\n      }\n    }\n\n    this.initialPath = options.initialPath;\n  }\n\n  get dispose() {\n    return this.disposableStore.dispose;\n  }\n\n  get onDidChange() {\n    return this.onDidChangeEmitter.event;\n  }\n\n  get onWillFocusModel() {\n    return this.onWillFocusModelEmitter.event;\n  }\n\n  createModel(pathname: string, content = '') {\n    const language = this.inferLanguage(pathname);\n\n    let uri: Monaco.Uri;\n\n    try {\n      uri = Monaco.Uri.file(pathname);\n    } catch (err) {\n      throw new Error(`Invalid path '${pathname}': ${err && err.message}`);\n    }\n\n    if (Monaco.editor.getModel(uri)) {\n      throw new Error(`Cannot create file because it exists '${pathname}'`);\n    }\n\n    return Monaco.editor.createModel(content, language, uri);\n  }\n\n  focusHref(\n    href: string,\n    options: {\n      lineNumber?: number;\n      columnNumber?: number;\n      markers?: Monaco.editor.IMarkerData[];\n    } = {}\n  ) {\n    const model = this.getModelByHref(href);\n\n    if (model) {\n      this.focusModel(model, options);\n    }\n  }\n\n  focusModel(\n    model: Monaco.editor.ITextModel,\n    options: {\n      lineNumber?: number;\n      columnNumber?: number;\n      markers?: Monaco.editor.IMarkerData[];\n    } = {}\n  ) {\n    if (this.editor) {\n      this.editor.setModel(model);\n      if (options.lineNumber) {\n        this.editor.revealLineInCenter(options.lineNumber, Monaco.editor.ScrollType.Smooth);\n        this.editor.setPosition({\n          column: options.columnNumber || 0,\n          lineNumber: options.lineNumber,\n        });\n      }\n      if (options.markers) {\n        Monaco.editor.setModelMarkers(model, 'editorManager', options.markers);\n      }\n      this.editor.focus();\n    }\n  }\n\n  focusPath(\n    path: string,\n    options: {\n      lineNumber?: number;\n      columnNumber?: number;\n      markers?: Monaco.editor.IMarkerData[];\n    } = {}\n  ) {\n    const model = this.getModelByPath(path);\n\n    if (model) {\n      this.focusModel(model, options);\n    }\n  }\n\n  getModelByHref(href: string) {\n    try {\n      const uri = Monaco.Uri.parse(href);\n      return Monaco.editor.getModel(uri);\n    } catch (_) {\n      return null;\n    }\n  }\n\n  getModelByPath(path: string) {\n    return Monaco.editor.getModel(Monaco.Uri.file(path));\n  }\n\n  mount(el: HTMLElement) {\n    if (this.editor) {\n      throw new Error('Invariant violation: Editor already mounted');\n    }\n\n    this.editor = Monaco.editor.create(el, {\n      model: null,\n      automaticLayout: true,\n      minimap: {\n        enabled: false,\n      },\n      showUnused: true,\n      scrollBeyondLastLine: false,\n      theme: 'vs',\n      wordWrap: 'bounded',\n      wrappingIndent: 'same',\n    });\n\n    this.editor.onDidDispose(() => {\n      this.editor = null;\n    });\n\n    this.editor.onDidChangeModel((e) => {\n      if (e.newModelUrl && this.editor) {\n        const model = Monaco.editor.getModel(e.newModelUrl)!;\n        const viewState = this.viewState.get(model);\n\n        if (viewState) {\n          this.editor.restoreViewState(viewState);\n        }\n      }\n    });\n\n    this.editor.onDidBlurEditorText(() => {\n      if (this.editor) {\n        const model = this.editor.getModel();\n        const viewState = this.editor.saveViewState();\n\n        if (model && viewState) {\n          this.viewState.set(model, viewState);\n        }\n      }\n    });\n\n    this.disposableStore.add(this.editor);\n\n    if (this.initialPath) {\n      this.focusPath(this.initialPath);\n    }\n\n    return this.editor;\n  }\n\n  inferLanguage(pathname: string) {\n    return pathname.match(/\\.(?:tsx?|jsx?)$/) ? 'typescript' : undefined;\n  }\n}\n\nexport const EditorManagerContext = createContext<EditorManager>(undefined as any);\n\nexport function useActiveModel() {\n  const workbench = useContext(EditorManagerContext);\n  const [activeModel, setActiveModel] = useState<Monaco.editor.ITextModel | null>(\n    workbench.editor ? workbench.editor.getModel() : null\n  );\n\n  useEffect(() => {\n    const disposable = new DisposableStore();\n\n    const trackEditor = (editor: Monaco.editor.ICodeEditor) => {\n      editor.onDidChangeModel((e) => {\n        const model = e.newModelUrl ? Monaco.editor.getModel(e.newModelUrl) : null;\n\n        setActiveModel(model);\n      });\n\n      disposable.add(\n        editor.onDidBlurEditorText(() => {\n          setActiveModel(null);\n        })\n      );\n\n      disposable.add(\n        editor.onDidFocusEditorText(() => {\n          setActiveModel(editor.getModel());\n        })\n      );\n\n      if (editor.hasTextFocus()) {\n        setActiveModel(editor.getModel());\n      }\n    };\n\n    disposable.add(Monaco.editor.onDidCreateEditor(trackEditor));\n    if (workbench.editor) {\n      trackEditor(workbench.editor);\n    }\n\n    return () => disposable.dispose();\n  }, [workbench.editor, activeModel]);\n\n  return activeModel;\n}\n","import { Base64, Uri, isThenable, checkCancellation, DependencyNotFoundError, EntryExcludedError, EntryNotFoundError, MapSet, DisposableStore, Emitter, CancellationTokenSource, isCanceledError } from '@velcro/common';\nimport MagicString, { Bundle } from 'magic-string';\nimport { parse as parse$2 } from 'acorn';\n\nclass BaseError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = this.constructor.name;\n    }\n}\nclass GraphBuildError extends BaseError {\n    constructor(errors) {\n        super(`Graph building failed with errors:\\n${errors.map((err) => `  ${err.message}`).join('\\n')}`);\n        this.errors = errors;\n    }\n}\n\nvar charToInteger = {};\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfor (var i = 0; i < chars.length; i++) {\n    charToInteger[chars.charCodeAt(i)] = i;\n}\nfunction decode(mappings) {\n    var decoded = [];\n    var line = [];\n    var segment = [\n        0,\n        0,\n        0,\n        0,\n        0,\n    ];\n    var j = 0;\n    for (var i = 0, shift = 0, value = 0; i < mappings.length; i++) {\n        var c = mappings.charCodeAt(i);\n        if (c === 44) { // \",\"\n            segmentify(line, segment, j);\n            j = 0;\n        }\n        else if (c === 59) { // \";\"\n            segmentify(line, segment, j);\n            j = 0;\n            decoded.push(line);\n            line = [];\n            segment[0] = 0;\n        }\n        else {\n            var integer = charToInteger[c];\n            if (integer === undefined) {\n                throw new Error('Invalid character (' + String.fromCharCode(c) + ')');\n            }\n            var hasContinuationBit = integer & 32;\n            integer &= 31;\n            value += integer << shift;\n            if (hasContinuationBit) {\n                shift += 5;\n            }\n            else {\n                var shouldNegate = value & 1;\n                value >>>= 1;\n                if (shouldNegate) {\n                    value = value === 0 ? -0x80000000 : -value;\n                }\n                segment[j] += value;\n                j++;\n                value = shift = 0; // reset\n            }\n        }\n    }\n    segmentify(line, segment, j);\n    decoded.push(line);\n    return decoded;\n}\nfunction segmentify(line, segment, j) {\n    // This looks ugly, but we're creating specialized arrays with a specific\n    // length. This is much faster than creating a new array (which v8 expands to\n    // a capacity of 17 after pushing the first item), or slicing out a subarray\n    // (which is slow). Length 4 is assumed to be the most frequent, followed by\n    // length 5 (since not everything will have an associated name), followed by\n    // length 1 (it's probably rare for a source substring to not have an\n    // associated segment data).\n    if (j === 4)\n        line.push([segment[0], segment[1], segment[2], segment[3]]);\n    else if (j === 5)\n        line.push([segment[0], segment[1], segment[2], segment[3], segment[4]]);\n    else if (j === 1)\n        line.push([segment[0]]);\n}\nfunction encode(decoded) {\n    var sourceFileIndex = 0; // second field\n    var sourceCodeLine = 0; // third field\n    var sourceCodeColumn = 0; // fourth field\n    var nameIndex = 0; // fifth field\n    var mappings = '';\n    for (var i = 0; i < decoded.length; i++) {\n        var line = decoded[i];\n        if (i > 0)\n            mappings += ';';\n        if (line.length === 0)\n            continue;\n        var generatedCodeColumn = 0; // first field\n        var lineMappings = [];\n        for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n            var segment = line_1[_i];\n            var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n            generatedCodeColumn = segment[0];\n            if (segment.length > 1) {\n                segmentMappings +=\n                    encodeInteger(segment[1] - sourceFileIndex) +\n                        encodeInteger(segment[2] - sourceCodeLine) +\n                        encodeInteger(segment[3] - sourceCodeColumn);\n                sourceFileIndex = segment[1];\n                sourceCodeLine = segment[2];\n                sourceCodeColumn = segment[3];\n            }\n            if (segment.length === 5) {\n                segmentMappings += encodeInteger(segment[4] - nameIndex);\n                nameIndex = segment[4];\n            }\n            lineMappings.push(segmentMappings);\n        }\n        mappings += lineMappings.join(',');\n    }\n    return mappings;\n}\nfunction encodeInteger(num) {\n    var result = '';\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        var clamped = num & 31;\n        num >>>= 5;\n        if (num > 0) {\n            clamped |= 32;\n        }\n        result += chars[clamped];\n    } while (num > 0);\n    return result;\n}\n\nclass SourceMap {\n    constructor(input) {\n        this.file = input.file;\n        this.mappings = input.mappings;\n        this.sourceRoot = input.sourceRoot;\n        this.names = input.names;\n        this.sources = input.sources;\n        this.sourcesContent = input.sourcesContent;\n        this.version = input.version;\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n    toDataUri() {\n        return `data:application/json;charset=utf-8;base64,${Base64.encode(this.toString())}`;\n    }\n}\nfunction getSourceMappingUrlMatch(str) {\n    const re = /(?:(?:\\/\\/|\\/\\*)[@#][\\s]*(?:source)MappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*(?:source)MappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/gm;\n    // Keep executing the search to find the *last* sourceMappingURL to avoid\n    // picking up sourceMappingURLs from comments, strings, etc.\n    let lastMatch = null;\n    let match;\n    while ((match = re.exec(str)))\n        lastMatch = match;\n    return lastMatch;\n}\nfunction getSourceMappingUrl(str) {\n    const lastMatch = getSourceMappingUrlMatch(str);\n    if (!lastMatch)\n        return '';\n    return lastMatch[1];\n}\nfunction updateSourceMappingUrl(str, url) {\n    const lastMatch = getSourceMappingUrlMatch(str);\n    if (!lastMatch)\n        return str;\n    return str.slice(0, lastMatch.index) + str.slice(lastMatch.index).replace(lastMatch[1], url);\n}\nfunction decodeDataUriAsSourceMap(href) {\n    const match = href.match(/^data:application\\/json;(?:charset=([^;]+);)?base64,(.*)$/);\n    if (match) {\n        if (match[1] && match[1] !== 'utf-8') {\n            return null;\n        }\n        try {\n            const decoded = JSON.parse(Base64.decode(match[2]));\n            if (decoded.mappings === '') {\n                return {\n                    file: '',\n                    mappings: [],\n                    names: [],\n                    sources: [],\n                    sourcesContent: [],\n                };\n            }\n            if (typeof decoded.mappings === 'string') {\n                decoded.mappings = decode(decoded.mappings);\n            }\n            return decoded;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    return null;\n}\n\n/**\n * Copyright (c) Rollup 2020 authors: https://github.com/rollup/rollup/graphs/contributors)\n *\n * Copied with light modifications from:\n * https://github.com/rollup/rollup/blob/36a4527473ea1fe678ed866c9f8dfd3c2542cd22/src/utils/collapseSourcemaps.ts\n */\nclass Source {\n    constructor(filename, content) {\n        this.filename = filename;\n        this.content = content;\n    }\n    traceSegment(line, column, name) {\n        return { line, column, name, source: this };\n    }\n}\nclass Link {\n    constructor(map, sources) {\n        this.sources = sources;\n        this.names = map.names;\n        this.mappings = typeof map.mappings === 'string' ? decode(map.mappings) : map.mappings;\n    }\n    traceMappings() {\n        const sources = [];\n        const sourcesContent = [];\n        const names = [];\n        const mappings = [];\n        for (const line of this.mappings) {\n            const tracedLine = [];\n            for (const segment of line) {\n                if (segment.length == 1)\n                    continue;\n                const source = this.sources[segment[1]];\n                if (!source)\n                    continue;\n                const traced = source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : '');\n                if (traced) {\n                    // newer sources are more likely to be used, so search backwards.\n                    let sourceIndex = sources.lastIndexOf(traced.source.filename);\n                    if (sourceIndex === -1) {\n                        sourceIndex = sources.length;\n                        sources.push(traced.source.filename);\n                        sourcesContent[sourceIndex] = traced.source.content;\n                    }\n                    else if (sourcesContent[sourceIndex] == null) {\n                        sourcesContent[sourceIndex] = traced.source.content;\n                    }\n                    else if (traced.source.content != null &&\n                        sourcesContent[sourceIndex] !== traced.source.content) {\n                        return new Error(`Multiple conflicting contents for sourcemap source ${traced.source.filename}`);\n                    }\n                    const tracedSegment = [\n                        segment[0],\n                        sourceIndex,\n                        traced.line,\n                        traced.column,\n                    ];\n                    if (traced.name) {\n                        let nameIndex = names.indexOf(traced.name);\n                        if (nameIndex === -1) {\n                            nameIndex = names.length;\n                            names.push(traced.name);\n                        }\n                        tracedSegment[4] = nameIndex;\n                    }\n                    tracedLine.push(tracedSegment);\n                }\n            }\n            mappings.push(tracedLine);\n        }\n        return { sources, sourcesContent, names, mappings };\n    }\n    traceSegment(line, column, name) {\n        const segments = this.mappings[line];\n        if (!segments)\n            return null;\n        // binary search through segments for the given column\n        let i = 0;\n        let j = segments.length - 1;\n        while (i <= j) {\n            const m = (i + j) >> 1;\n            const segment = segments[m];\n            if (segment[0] === column) {\n                if (segment.length == 1)\n                    return null;\n                const source = this.sources[segment[1]];\n                if (!source)\n                    return null;\n                return source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : name);\n            }\n            if (segment[0] > column) {\n                j = m - 1;\n            }\n            else {\n                i = m + 1;\n            }\n        }\n        return null;\n    }\n}\n/**\n * This function attempts to compensate for the loss of precision when lower\n * layers of source maps have higher precision than upper layers, leading to\n * a loss of fidelity.\n *\n * The code was lifted from [Alec Larson](https://github.com/aleclarson)'s\n * [fork of sorcery](https://github.com/aleclarson/sorcery/blob/3934a3f38a6d8604fc9dbaa576cbb6e4d733040f/src/blend.js).\n *\n * NOTE: This function mutates the given node.\n *\n * @copyright [Alec Larson](https://github.com/aleclarson) 2018\n */\n// function blend(node: Link) {\n//   let mappings: SourceMapSegment[][] = []; // traced lines\n//   let sources: (Link | Source)[] = []; // traced sources\n//   let names: string[] = []; // traced symbols\n//   // Precompute which source/line/column triples are mapped by the given node.\n//   // These references are useful when interweaving old segments.\n//   const refs: number[][][] = Object.keys(node.sources).map(() => []);\n//   for (const segments of node.mappings) {\n//     let segment: SourceMapSegment;\n//     let lines: number[][];\n//     let columns: number[];\n//     for (let i = 0; i < segments.length; i++) {\n//       segment = segments[i];\n//       if (segment.length === 4 || segment.length === 5) {\n//         lines = refs[segment[1]];\n//         if (!lines) refs[segment[1]] = lines = [];\n//         columns = lines[segment[2]];\n//         if (columns) {\n//           uniqueAscendingInsert(columns, segment[3]);\n//         } else {\n//           lines[segment[2]] = [segment[3]];\n//         }\n//       }\n//     }\n//   }\n//   let traced: SourceMapSegment[] | undefined = undefined; // the traced line mapping\n//   let untraced: SourceMapSegment[] | undefined = undefined; // the untraced line mapping\n//   function addSegment(\n//     segment: SourceMapSegment,\n//     source?: { names: string[]; sources: (Link | Source)[] }\n//   ) {\n//     if (source) {\n//       segment[1] = uniq<Link | Source>(sources, source.sources[segment[1]!]);\n//       if (segment.length === 5) {\n//         segment[4] = uniq(names, source.names[segment[4]]);\n//       }\n//     } else if (segment.length === 5) {\n//       segment[4] = uniq(names, node.names[segment[4]]);\n//     }\n//     traced!.push(segment);\n//   }\n//   let tracedLine: number; // the last traced line\n//   let generatedLine = -1; // the current line\n//   let sourceIndex: number | undefined = -1; // source of last traced segment\n//   let sourceLine: number | undefined = undefined; // source line of last traced segment\n//   // Find the next line with segments.\n//   function nextLine() {\n//     tracedLine = generatedLine;\n//     while (++generatedLine < node.mappings.length) {\n//       untraced = node.mappings[generatedLine];\n//       if (untraced.length) return true;\n//     }\n//   }\n//   // Provide mappings for lines between the\n//   // last traced line and the current line.\n//   function fillSkippedLines() {\n//     const skipped = generatedLine - (tracedLine + 1);\n//     if (skipped !== 0) {\n//       let line = tracedLine;\n//       // Take line mappings from the current source.\n//       if (sourceIndex !== -1) {\n//         const source = node.sources[sourceIndex!];\n//         if (source instanceof Link) {\n//           while (line < generatedLine - 1) {\n//             if (++sourceLine! !== source.mappings.length) {\n//               mappings[++line] = traced = [];\n//               // Check referenced columns to avoid duplicate segments.\n//               const columns = refs[sourceIndex!][sourceLine!] || [];\n//               let prevColumn = -1;\n//               // Interweave old segments from the current source.\n//               const segments = source.mappings[sourceLine!];\n//               for (let i = 0; i < segments.length; i++) {\n//                 const segment = segments[i];\n//                 if (!hasValueBetween(columns, prevColumn, segment[0] + 1)) {\n//                   addSegment([...segment] as SourceMapSegment, source);\n//                   prevColumn = segment[0];\n//                 } else break;\n//               }\n//             } else {\n//               // End of source file.\n//               sourceIndex = -1;\n//               break;\n//             }\n//           }\n//         }\n//       }\n//       // Default to empty arrays for unmapped lines.\n//       while (++line < generatedLine) {\n//         mappings[line] = [];\n//       }\n//     }\n//   }\n//   while (nextLine()) {\n//     fillSkippedLines();\n//     // Trace the segments of this generated line.\n//     mappings[generatedLine] = traced = [];\n//     // Interweave old segments before the first mapped column of each line.\n//     const sourceColumn = untraced![0][3];\n//     if (sourceIndex !== -1 && sourceColumn !== 0) {\n//       const source = node.sources[sourceIndex];\n//       if (source instanceof Link) {\n//         const segments =\n//           sourceLine! < source.mappings.length - 1 ? source.mappings[++sourceLine!] : [];\n//         for (let i = 0; i < segments.length; i++) {\n//           const segment = segments[i];\n//           if (segment[0] < sourceColumn!) {\n//             addSegment(segment.slice(0) as SourceMapSegment, source);\n//           } else break;\n//         }\n//       }\n//     }\n//     const last = untraced!.length - 1;\n//     untraced!.forEach((curr: SourceMapSegment | null, i) => {\n//       [, sourceIndex, sourceLine] = curr!;\n//       const source = node.sources[sourceIndex!];\n//       if (source === null) {\n//         curr![1] = uniq(sources, null);\n//         return addSegment(curr!);\n//       }\n//       if (!(source instanceof Link)) {\n//         curr![1] = uniq(sources, source);\n//         return addSegment(curr!);\n//       }\n//       const next = i !== last ? untraced![i + 1] : null;\n//       const sourceColumn = curr![3];\n//       const generatedColumn = curr![0];\n//       // Find the first segment with a greater column.\n//       const segments = source.mappings[sourceLine!] || [];\n//       let j = findGreaterColumn(segments, sourceColumn!);\n//       // A \"base segment\" is required for tracing to a grand-parent.\n//       let base;\n//       if (--j !== -1) {\n//         base = segments[j];\n//         curr![1] = uniq(sources, source.sources[base[1]!]);\n//         curr![2] = base[2];\n//         curr![3] = base[3]! + sourceColumn! - base[0];\n//         if (base.length === 5) {\n//           // Inherit the names of aligned base segments.\n//           if (base[0] === sourceColumn) {\n//             curr![4] = uniq(names, source.names[base[4]!]);\n//           }\n//         } else if (curr!.length === 5) {\n//           // When our segment is named and the base segment is not,\n//           // assume this segment cannot be traced to its original source.\n//           if (base[0] !== sourceColumn) curr = null;\n//         }\n//       } else {\n//         curr![1] = uniq(sources, null);\n//       }\n//       curr && addSegment(curr);\n//       // Check referenced columns to avoid duplicate segments.\n//       const columns = refs[sourceIndex!][sourceLine!] || [];\n//       let baseColumn = base ? base[0] : -1;\n//       // Interweave old segments between our current and next segments.\n//       const nextColumn = next ? next[0] : 1 / 0;\n//       while (++j < segments.length) {\n//         let segment = segments[j];\n//         // The generated column is shifted to fit into the root source map.\n//         const column = segment[0] + generatedColumn - sourceColumn!;\n//         if (column >= nextColumn) break;\n//         // Avoid duplicates by checking if this segment goes elsewhere.\n//         if (!hasValueBetween(columns, baseColumn, segment[0] + 1)) {\n//           baseColumn = segment[0];\n//           segment = segment.slice(0) as SourceMapSegment;\n//           segment[0] = column;\n//           addSegment(segment, source);\n//         } else break;\n//       }\n//     });\n//   }\n//   fillSkippedLines();\n//   node.mappings = mappings;\n//   node.sources = sources;\n//   node.names = names;\n//   return node;\n// }\n// // Check if a value exists before pushing it to an array.\n// // Return the new or existing index of the value.\n// function uniq<T>(arr: T[], val: T): number {\n//   const i = arr.indexOf(val);\n//   return ~i ? i : arr.push(val) - 1;\n// }\n// // Get the first segment with a greater column.\n// function findGreaterColumn(segments: SourceMapSegment[], column: number) {\n//   let low = 0,\n//     high = segments.length;\n//   while (low < high) {\n//     const mid = (low + high) >>> 1;\n//     segments[mid][0] <= column ? (low = mid + 1) : (high = mid);\n//   }\n//   return low;\n// }\n// // The range is exclusive.\n// function hasValueBetween(arr: number[], start: number, end: number) {\n//   let low = 0,\n//     high = arr.length;\n//   while (low < high) {\n//     const mid = (low + high) >>> 1;\n//     const val = arr[mid];\n//     if (val <= start) {\n//       low = mid + 1;\n//     } else if (val >= end) {\n//       high = mid;\n//     } else {\n//       return true;\n//     }\n//   }\n//   return false;\n// }\n// // Insert unique values in ascending order.\n// function uniqueAscendingInsert(arr: number[], val: number) {\n//   let low = 0,\n//     high = arr.length;\n//   while (low < high) {\n//     const mid = (low + high) >>> 1;\n//     const x = arr[mid];\n//     if (x === val) return;\n//     if (x < val) {\n//       low = mid + 1;\n//     } else {\n//       high = mid;\n//     }\n//   }\n//   arr.splice(low, 0, val);\n// }\n\nclass PluginManager {\n    constructor(plugins) {\n        this.plugins = plugins;\n        this.plugins.push({\n            name: 'builtIn',\n            load: async (ctx, id) => {\n                const uri = Uri.parse(id);\n                const readReturn = ctx.resolver.readFileContent(uri);\n                const readResult = isThenable(readReturn)\n                    ? await checkCancellation(readReturn, ctx.token)\n                    : readReturn;\n                return {\n                    code: ctx.resolver.decode(readResult.content),\n                    visited: readResult.visited,\n                };\n            },\n            resolveDependency: async (ctx, dependency, fromSourceModule) => {\n                const resolveReturn = ctx.resolver.resolve(dependency.spec, fromSourceModule.uri);\n                const resolveResult = isThenable(resolveReturn)\n                    ? await checkCancellation(resolveReturn, ctx.token)\n                    : resolveReturn;\n                if (!resolveResult.found) {\n                    throw new DependencyNotFoundError(dependency.spec, fromSourceModule);\n                }\n                if (!resolveResult.uri) {\n                    // TODO: Inject empty module\n                    throw new EntryExcludedError(dependency.spec);\n                }\n                return {\n                    uri: resolveResult.uri,\n                    rootUri: resolveResult.rootUri,\n                    visited: resolveResult.visited,\n                };\n            },\n            resolveEntrypoint: async (ctx, uri) => {\n                const resolveResult = await ctx.resolver.resolve(uri);\n                if (!resolveResult.found) {\n                    throw new EntryNotFoundError(`Entry point not found: ${uri}`);\n                }\n                if (!resolveResult.uri) {\n                    throw new EntryExcludedError(uri);\n                }\n                return resolveResult;\n            },\n            transform: async ({ createMagicString }, id) => {\n                if (id.path.endsWith('.json')) {\n                    const magicString = createMagicString();\n                    magicString.prepend('module.exports = ');\n                    return {\n                        code: magicString.toString(),\n                        sourceMap: magicString.generateDecodedMap(),\n                    };\n                }\n            },\n        });\n    }\n    async executeLoad(ctx, uri) {\n        for (const plugin of this.plugins) {\n            if (typeof plugin.load === 'function') {\n                const loadReturn = plugin.load(ctx, uri.toString());\n                const loadResult = isThenable(loadReturn)\n                    ? await checkCancellation(loadReturn, ctx.token)\n                    : loadReturn;\n                if (!loadResult) {\n                    continue;\n                }\n                return {\n                    code: loadResult.code,\n                    visited: loadResult.visited || [],\n                };\n            }\n        }\n        throw new Error(`No plugin was found that was able to load the uri ${uri.toString()}`);\n    }\n    async executeResolveDependency(ctx, dependency, fromModule) {\n        for (const plugin of this.plugins) {\n            if (typeof plugin.resolveDependency === 'function') {\n                const loadReturn = plugin.resolveDependency(ctx, dependency, fromModule);\n                const loadResult = isThenable(loadReturn)\n                    ? await checkCancellation(loadReturn, ctx.token)\n                    : loadReturn;\n                if (!loadResult) {\n                    continue;\n                }\n                return {\n                    uri: loadResult.uri,\n                    rootUri: loadResult.rootUri,\n                    visited: loadResult.visited || [],\n                };\n            }\n        }\n        throw new Error(`No plugin was able to resolve the '${dependency.kind}' dependency, '${dependency.spec}' from '${fromModule.href}'`);\n    }\n    async executeResolveEntrypoint(ctx, uri) {\n        for (const plugin of this.plugins) {\n            if (typeof plugin.resolveEntrypoint === 'function') {\n                const loadReturn = plugin.resolveEntrypoint(ctx, uri);\n                const loadResult = isThenable(loadReturn)\n                    ? await checkCancellation(loadReturn, ctx.token)\n                    : loadReturn;\n                if (!loadResult) {\n                    continue;\n                }\n                return {\n                    uri: loadResult.uri,\n                    rootUri: loadResult.rootUri,\n                    visited: loadResult.visited || [],\n                };\n            }\n        }\n        throw new Error(`No plugin was able to resolve the entrypoint '${uri.toString()}'`);\n    }\n    async executeTransform(ctx, uri, code) {\n        if (typeof code !== 'string') {\n            code = ctx.resolver.decode(code);\n        }\n        const pluginCtx = Object.assign(ctx, {\n            createMagicString() {\n                return new MagicString(code);\n            },\n        });\n        let sourceMapTree = new Source(uri.toString(), code);\n        // Figure out if our original code, itself has a sourcemap.\n        // For now, we will not recurse beyond that depth.\n        const sourceMapRef = getSourceMappingUrl(code);\n        if (sourceMapRef) {\n            let sourceMap = decodeDataUriAsSourceMap(sourceMapRef);\n            if (!sourceMap) {\n                const sourceMapUri = Uri.joinPath(uri, `../${sourceMapRef}`);\n                code = updateSourceMappingUrl(code, sourceMapUri.toString());\n            }\n            if (sourceMap) {\n                const sources = sourceMap.sources;\n                const sourcesContent = sourceMap.sourcesContent || [];\n                const baseSources = [];\n                for (const idx in sources) {\n                    if (sources[idx] && sourcesContent[idx]) {\n                        baseSources.push(new Source(sources[idx], sourcesContent[idx]));\n                    }\n                }\n                sourceMapTree = new Link(sourceMap, baseSources);\n            }\n        }\n        const visited = [];\n        for (const plugin of this.plugins) {\n            if (typeof plugin.transform === 'function') {\n                const transformReturn = plugin.transform(pluginCtx, uri, code);\n                const transformResult = isThenable(transformReturn)\n                    ? await checkCancellation(transformReturn, ctx.token)\n                    : transformReturn;\n                if (transformResult === null || transformResult === undefined) {\n                    continue;\n                }\n                if (transformResult.sourceMap) {\n                    sourceMapTree = new Link(transformResult.sourceMap, [sourceMapTree]);\n                }\n                code = transformResult.code;\n                if (transformResult.visited) {\n                    visited.push(...transformResult.visited);\n                }\n            }\n        }\n        return {\n            code,\n            sourceMapTree,\n            visited,\n        };\n    }\n}\n\nvar SourceModuleDependencyKind;\n(function (SourceModuleDependencyKind) {\n    SourceModuleDependencyKind[\"Entrypoint\"] = \"Entrypoint\";\n    SourceModuleDependencyKind[\"Require\"] = \"Require\";\n    SourceModuleDependencyKind[\"RequireResolve\"] = \"RequireResolve\";\n    SourceModuleDependencyKind[\"GlobalObject\"] = \"GlobalObject\";\n})(SourceModuleDependencyKind || (SourceModuleDependencyKind = {}));\nclass SourceModuleDependency {\n    constructor(kind, spec, locations, options = {}) {\n        this.kind = kind;\n        this.spec = spec;\n        this.locations = locations;\n        this.options = options;\n    }\n    static areIdentical(l, r) {\n        return l.kind === r.kind && l.spec === r.spec;\n    }\n    static fromEntrypoint(uri) {\n        return new SourceModuleDependency(SourceModuleDependencyKind.Entrypoint, uri.toString(), []);\n    }\n    static fromGlobalObject(spec, locations, exportName) {\n        return new SourceModuleDependency(SourceModuleDependencyKind.GlobalObject, spec, locations, {\n            exportName,\n        });\n    }\n    static fromRequire(spec, locations) {\n        return new SourceModuleDependency(SourceModuleDependencyKind.Require, spec, locations);\n    }\n    static fromRequireResolve(spec, locations) {\n        return new SourceModuleDependency(SourceModuleDependencyKind.RequireResolve, spec, locations);\n    }\n}\n\nfunction isArrowFunctionExpression(node) {\n    return node.type === 'ArrowFunctionExpression';\n}\nfunction isArrayPattern(node) {\n    return node.type === 'ArrayPattern';\n}\nfunction isAssignmentPattern(node) {\n    return node.type === 'AssignmentPattern';\n}\nfunction isBinaryExpression(node) {\n    return node.type === 'BinaryExpression';\n}\nfunction isBlockStatement(node) {\n    return node.type === 'BlockStatement';\n}\nfunction isCallExpression(node) {\n    return node.type === 'CallExpression';\n}\nfunction isClassDeclaration(node) {\n    return node.type === 'ClassDeclaration';\n}\nfunction isFunctionDeclaration(node) {\n    return node.type === 'FunctionDeclaration';\n}\nfunction isFunctionExpression(node) {\n    return node.type === 'FunctionExpression';\n}\nfunction isIdentifier(node) {\n    return node.type === 'Identifier';\n}\nfunction isIfStatement(node) {\n    return node.type === 'IfStatement';\n}\nfunction isLiteral(node) {\n    return node.type === 'Literal';\n}\nfunction isMemberExpression(node) {\n    return node.type === 'MemberExpression';\n}\nfunction isObjectPattern(node) {\n    return node.type === 'ObjectPattern';\n}\nfunction isProperty(node) {\n    return node.type === 'Property';\n}\nfunction isRestElement(node) {\n    return node.type === 'RestElement';\n}\nfunction isProgram(node) {\n    return node.type === 'Program';\n}\nfunction isThisExpression(node) {\n    return node.type === 'ThisExpression';\n}\nfunction isTryStatement(node) {\n    return node.type === 'TryStatement';\n}\nfunction isVariableDeclaration(node) {\n    return node.type === 'VariableDeclaration';\n}\n// Refinements or groups\nfunction isFunction(node) {\n    return (isFunctionDeclaration(node) || isFunctionExpression(node) || isArrowFunctionExpression(node));\n}\nfunction isStringLiteral(node) {\n    return isLiteral(node) && typeof node.value === 'string';\n}\nfunction parse(code, options) {\n    return parse$2(code, {\n        ...options,\n        allowReturnOutsideFunction: true,\n        sourceType: 'script',\n    });\n}\n\nfunction traverse(ast, ctx, { enter, leave }) {\n    visit(ast, null, ctx, enter, leave);\n}\nlet shouldSkip = false;\nconst context = { skip: () => (shouldSkip = true) };\nconst childKeys = {};\nfunction visit(node, parent, ctx, enter, leave\n// prop?: string,\n// index?: number\n) {\n    if (!node)\n        return;\n    node.parent = parent;\n    if (enter) {\n        const _shouldSkip = shouldSkip;\n        shouldSkip = false;\n        enter.call(context, node, parent, ctx);\n        const skipped = shouldSkip;\n        shouldSkip = _shouldSkip;\n        if (skipped)\n            return;\n    }\n    const keys = childKeys[node.type] ||\n        (childKeys[node.type] = Object.keys(node).filter((key) => key !== 'parent' && typeof node[key] === 'object'));\n    const children = [];\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const value = node[key];\n        if (Array.isArray(value)) {\n            children.push(...value);\n            // for (let j = 0; j < value.length; j++) {\n            //   visit(value[j], node, ctx, enter, leave);\n            // }\n        }\n        else if (value && value.type) {\n            children.push(value);\n        }\n    }\n    children.sort((a, b) => a.start - b.start);\n    for (const child of children) {\n        visit(child, node, ctx, enter, leave);\n    }\n    if (leave) {\n        leave(node, parent, ctx);\n    }\n}\n\nconst parse$1 = function parseJavaScript(uri, code, options) {\n    const visitorCtx = {\n        unboundSymbols: new Map(),\n        locals: new Map(),\n        magicString: new MagicString(code, { filename: uri.toString(), indentExclusionRanges: [] }),\n        nodeEnv: options.nodeEnv,\n        replacedSymbols: new Set(),\n        requires: [],\n        requireResolves: [],\n        skip: new Set(),\n        skipTransform: new Set(),\n    };\n    const dependencies = [];\n    try {\n        // let lastToken: Token | undefined;\n        const ast = parse(code, {\n        // onComment: (_isBlock, _test, start, end) => {\n        //   result.changes.push({ type: 'remove', start, end });\n        // },\n        // onInsertedSemicolon(lastTokEnd) {\n        //   result.changes.push({ type: 'appendRight', position: lastTokEnd, value: ';' });\n        // },\n        // onToken: (token) => {\n        //   const start = lastToken ? lastToken.end + 1 : 0;\n        //   const end = token.start;\n        //   if (end > start) {\n        //     result.changes.push({ type: 'remove', start, end });\n        //   }\n        //   lastToken = token;\n        // },\n        });\n        traverse(ast, visitorCtx, scopingAndRequiresVisitor);\n        traverse(ast, visitorCtx, collectGlobalsVisitor);\n    }\n    catch (err) {\n        // console.log(code);\n        throw new Error(`Error parsing ${uri}: ${err.message}`);\n    }\n    // Handle explicit requires\n    const requiresBySpec = new Map();\n    for (const requireDependency of visitorCtx.requires) {\n        let locations = requiresBySpec.get(requireDependency.spec.value);\n        if (!locations) {\n            locations = [];\n            requiresBySpec.set(requireDependency.spec.value, locations);\n        }\n        locations.push({ start: requireDependency.spec.start, end: requireDependency.spec.end });\n    }\n    for (const [spec, locations] of requiresBySpec) {\n        dependencies.push(SourceModuleDependency.fromRequire(spec, locations));\n    }\n    // Handle require.resolve\n    const requireResolvesBySpec = new Map();\n    for (const requireDependency of visitorCtx.requireResolves) {\n        let locations = requiresBySpec.get(requireDependency.spec.value);\n        if (!locations) {\n            locations = [];\n            requiresBySpec.set(requireDependency.spec.value, locations);\n        }\n        locations.push({ start: requireDependency.spec.start, end: requireDependency.spec.end });\n    }\n    for (const [spec, locations] of requireResolvesBySpec) {\n        dependencies.push(SourceModuleDependency.fromRequireResolve(spec, locations));\n    }\n    for (const [symbolName, locations] of visitorCtx.unboundSymbols) {\n        const shim = options.globalModules[symbolName];\n        if (shim) {\n            dependencies.push(SourceModuleDependency.fromGlobalObject(shim.spec, locations, shim.export));\n            for (const location of locations) {\n                visitorCtx.magicString.overwrite(location.start, location.end, `require(${JSON.stringify(`${shim.spec}`)})`);\n            }\n        }\n    }\n    return {\n        code: visitorCtx.magicString,\n        dependencies,\n    };\n};\nconst scopingAndRequiresVisitor = {\n    enter(node, parent, ctx) {\n        // Get AST-node level locations in the source map\n        ctx.magicString.addSourcemapLocation(node.start);\n        ctx.magicString.addSourcemapLocation(node.end);\n        if (ctx.skip.has(node)) {\n            return this.skip();\n        }\n        visitAndCaptureScoping(node, parent, ctx);\n        visitAndSkipBranches(node, parent, ctx);\n        visitRequires(node, parent, ctx);\n    },\n    leave(node, _parent, ctx) {\n        let skipped = false;\n        let nextCheck = node;\n        while (nextCheck) {\n            if (ctx.skipTransform.has(nextCheck)) {\n                skipped = true;\n                break;\n            }\n            nextCheck = nextCheck.parent;\n        }\n        if (!skipped &&\n            isMemberExpression(node) &&\n            memberExpressionMatches(node, 'process.env.NODE_ENV')) {\n            ctx.magicString.overwrite(node.start, node.end, JSON.stringify(ctx.nodeEnv), {\n                contentOnly: true,\n                storeName: true,\n            });\n            ctx.skip.add(node);\n            ctx.skipTransform.add(node);\n        }\n    },\n};\nconst collectGlobalsVisitor = {\n    enter(node, _parent, ctx) {\n        if (ctx.skip.has(node)) {\n            return this.skip();\n        }\n        if (isBindingIdentifier(node) && isIdentifier(node)) {\n            var name = node.name;\n            if (name === 'undefined')\n                return;\n            if (ctx.replacedSymbols.has(node)) {\n                return;\n            }\n            let foundBinding = false;\n            let nextParent = node.parent;\n            while (nextParent) {\n                if (name === 'arguments' && declaresArguments(nextParent)) {\n                    foundBinding = true;\n                    break;\n                }\n                const locals = ctx.locals.get(nextParent);\n                if (locals && locals[name]) {\n                    foundBinding = true;\n                    break;\n                }\n                nextParent = nextParent.parent;\n            }\n            if (!foundBinding) {\n                let unboundSymbols = ctx.unboundSymbols.get(name);\n                if (!unboundSymbols) {\n                    unboundSymbols = [];\n                    ctx.unboundSymbols.set(name, unboundSymbols);\n                }\n                unboundSymbols.push(node);\n            }\n        }\n        else if (isThisExpression(node)) {\n            let foundBinding = false;\n            let nextParent = node.parent;\n            while (nextParent) {\n                if (declaresThis(nextParent)) {\n                    foundBinding = true;\n                    break;\n                }\n                nextParent = nextParent.parent;\n            }\n            if (!foundBinding) {\n                let unboundSymbols = ctx.unboundSymbols.get('this');\n                if (!unboundSymbols) {\n                    unboundSymbols = [];\n                    ctx.unboundSymbols.set('this', unboundSymbols);\n                }\n                unboundSymbols.push(node);\n            }\n        }\n    },\n};\nfunction visitAndCaptureScoping(node, _parent, ctx) {\n    if (isVariableDeclaration(node)) {\n        let parent;\n        let nextParent = node.parent;\n        while (nextParent) {\n            if (node.kind === 'var' ? isScope(nextParent) : isBlockScope(nextParent)) {\n                parent = nextParent;\n                break;\n            }\n            nextParent = nextParent.parent;\n        }\n        if (!parent) {\n            throw new Error(`Invariant violation: Failed to find a parent`);\n        }\n        let locals = ctx.locals.get(parent);\n        if (!locals) {\n            locals = {};\n            ctx.locals.set(parent, locals);\n        }\n        for (const declaration of node.declarations) {\n            declarePattern(declaration.id, locals);\n        }\n    }\n    else if (isFunctionDeclaration(node)) {\n        let parent;\n        let nextParent = node.parent;\n        if (nextParent && nextParent.parent) {\n            nextParent = nextParent.parent;\n        }\n        while (nextParent) {\n            if (isScope(nextParent)) {\n                parent = nextParent;\n                break;\n            }\n            nextParent = nextParent.parent;\n        }\n        if (!parent) {\n            throw new Error(`Invariant violation: Failed to find a parent`);\n        }\n        let locals = ctx.locals.get(parent);\n        if (!locals) {\n            locals = {};\n            ctx.locals.set(parent, locals);\n        }\n        declareFunction(node, locals);\n    }\n    else if (isFunction(node)) {\n        let locals = ctx.locals.get(node);\n        if (!locals) {\n            locals = {};\n            ctx.locals.set(node, locals);\n        }\n        declareFunction(node, locals);\n    }\n    else if (isClassDeclaration(node) && node.id) {\n        let parent;\n        let nextParent = node.parent;\n        if (nextParent && nextParent.parent) {\n            nextParent = nextParent.parent;\n        }\n        while (nextParent) {\n            if (isScope(nextParent)) {\n                parent = nextParent;\n                break;\n            }\n            nextParent = nextParent.parent;\n        }\n        if (!parent) {\n            throw new Error(`Invariant violation: Failed to find a parent`);\n        }\n        let locals = ctx.locals.get(parent);\n        if (!locals) {\n            locals = {};\n            ctx.locals.set(parent, locals);\n        }\n        locals[node.id.name] = true;\n    }\n    else if (isTryStatement(node)) {\n        if (node.handler) {\n            let locals = ctx.locals.get(node.handler);\n            if (!locals) {\n                locals = {};\n                ctx.locals.set(node.handler, locals);\n            }\n            if (node.handler.param) {\n                declarePattern(node.handler.param, locals);\n            }\n        }\n    }\n}\nfunction visitAndSkipBranches(node, _parent, ctx) {\n    if (isIfStatement(node) && isBinaryExpression(node.test)) {\n        const tests = {\n            '!=': (l, r) => l != r,\n            '!==': (l, r) => l !== r,\n            '==': (l, r) => l == r,\n            '===': (l, r) => l === r,\n        };\n        const test = tests[node.test.operator];\n        if (test) {\n            if (isStringLiteral(node.test.left) &&\n                isMemberExpression(node.test.right) &&\n                memberExpressionMatches(node.test.right, 'process.env.NODE_ENV')) {\n                let rootObject = node.test.right;\n                while (isMemberExpression(rootObject.object)) {\n                    rootObject = rootObject.object;\n                }\n                if (isIdentifier(rootObject.object)) {\n                    ctx.replacedSymbols.add(rootObject.object);\n                }\n                ctx.skipTransform.add(node.test.right);\n                // if ('development' === process.env.NODE_ENV) {}\n                if (!test(node.test.left.value, ctx.nodeEnv)) {\n                    ctx.skip.add(node.consequent);\n                    // We can blow away the consequent\n                    ctx.magicString.remove(node.start, node.alternate ? node.alternate.start : node.consequent.end);\n                }\n                else {\n                    // We can blow away the test\n                    ctx.magicString.remove(node.start, node.consequent.start - 1);\n                    if (node.alternate) {\n                        ctx.skip.add(node.alternate);\n                        // We can blow away the alternate but we need to start and the end of the consequent + 1 char\n                        ctx.magicString.remove(node.consequent.end + 1, node.alternate.end);\n                    }\n                }\n            }\n            else if (isStringLiteral(node.test.right) &&\n                isMemberExpression(node.test.left) &&\n                memberExpressionMatches(node.test.left, 'process.env.NODE_ENV')) {\n                let rootObject = node.test.left;\n                while (isMemberExpression(rootObject.object)) {\n                    rootObject = rootObject.object;\n                }\n                if (isIdentifier(rootObject.object)) {\n                    ctx.replacedSymbols.add(rootObject.object);\n                }\n                ctx.skipTransform.add(node.test.left);\n                // if (process.env.NODE_ENV === 'development') {}\n                if (!test(node.test.right.value, ctx.nodeEnv)) {\n                    ctx.skip.add(node.consequent);\n                    // We can blow away the consequent\n                    ctx.magicString.remove(node.start, node.alternate ? node.alternate.start : node.consequent.end);\n                }\n                else {\n                    // We can blow away the test and the alternate\n                    ctx.magicString.remove(node.start, node.consequent.start - 1);\n                    if (node.alternate) {\n                        ctx.skip.add(node.alternate);\n                        // We can blow away the alternate but we need to start and the end of the consequent + 1 char\n                        ctx.magicString.remove(node.consequent.end + 1, node.alternate.end);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction visitRequires(node, _parent, ctx) {\n    if (isCallExpression(node)) {\n        const callee = node.callee;\n        if (isIdentifier(callee) && callee.name === 'require') {\n            const firstArg = node.arguments[0];\n            if (isStringLiteral(firstArg)) {\n                ctx.requires.push({\n                    spec: { start: firstArg.start, end: firstArg.end, value: firstArg.value },\n                    callee: { start: callee.start, end: callee.end },\n                });\n            }\n            else {\n                console.warn('Non string-literal first arg to require', firstArg);\n            }\n        }\n        else if (isMemberExpression(callee) &&\n            isIdentifier(callee.object) &&\n            callee.object.name === 'require' &&\n            isIdentifier(callee.property) &&\n            callee.property.name === 'resolve') {\n            const firstArg = node.arguments[0];\n            if (isStringLiteral(firstArg)) {\n                ctx.requireResolves.push({\n                    spec: { start: firstArg.start, end: firstArg.end, value: firstArg.value },\n                    callee: { start: callee.start, end: callee.end },\n                });\n            }\n            else {\n                console.warn('Non string-literal first arg to require.resolve', firstArg);\n            }\n        }\n    }\n}\nfunction declareFunction(node, locals) {\n    node.params.forEach(function (node) {\n        declarePattern(node, locals);\n    });\n    if (node.id) {\n        locals[node.id.name] = true;\n    }\n}\nfunction declarePattern(node, locals) {\n    if (isIdentifier(node)) {\n        locals[node.name] = true;\n    }\n    else if (isObjectPattern(node)) {\n        node.properties.forEach((node) => isRestElement(node)\n            ? declarePattern(node.argument, locals)\n            : declarePattern(node.value, locals));\n    }\n    else if (isArrayPattern(node)) {\n        node.elements.forEach((node) => node && declarePattern(node, locals));\n    }\n    else if (isRestElement(node)) {\n        declarePattern(node.argument, locals);\n    }\n    else if (isAssignmentPattern(node)) {\n        declarePattern(node.left, locals);\n    }\n    else {\n        throw new Error(`Invariant violation: Unexpected pattern type: ${node.type}`);\n    }\n}\nfunction isBindingIdentifier(node) {\n    return isIdentifier(node) && !isPropertyOfMemberExpression(node) && !isKeyOfProperty(node);\n}\nfunction isKeyOfProperty(node) {\n    return node.parent && isProperty(node.parent) && node.parent.key === node;\n}\nfunction isPropertyOfMemberExpression(node) {\n    return node.parent && isMemberExpression(node.parent) && node.parent.object !== node;\n}\nfunction isScope(node) {\n    return (isFunctionDeclaration(node) ||\n        isFunctionExpression(node) ||\n        isArrowFunctionExpression(node) ||\n        isProgram(node));\n}\nfunction isBlockScope(node) {\n    return isBlockStatement(node) || isScope(node);\n}\nfunction declaresArguments(node) {\n    return isFunctionDeclaration(node) || isFunctionExpression(node);\n}\nfunction declaresThis(node) {\n    return isFunctionDeclaration(node) || isFunctionExpression(node);\n}\nfunction memberExpressionMatches(node, pattern) {\n    const memberParts = pattern.split('.');\n    if (memberParts.length < 2) {\n        return false;\n    }\n    const object = memberParts.shift();\n    const property = memberParts.shift();\n    for (let i = memberParts.length - 1; i >= 0; i--) {\n        if (!isIdentifier(node.property) || node.property.name !== memberParts[i]) {\n            return false;\n        }\n        if (!isMemberExpression(node.object)) {\n            return false;\n        }\n        node = node.object;\n    }\n    if (!isIdentifier(node.object) || !isIdentifier(node.property)) {\n        return false;\n    }\n    return node.object.name === object && node.property.name === property;\n}\n\n//@ts-check\n/**\n * @param {import('./types').VelcroStaticRuntime} velcro\n * @returns {import('./runtimeInterface').VelcroRuntime}\n */\nfunction createRuntime(velcro) {\n    if (velcro.runtime)\n        return velcro.runtime;\n    /**\n     * @constructor\n     * @param {Runtime} runtime\n     * @param {string} id\n     * @param {import('./types').VelcroImportMap} importMap\n     */\n    function Module(runtime, id, importMap) {\n        this.runtime = runtime;\n        this.id = id;\n        this.importMap = importMap;\n        this.module = { exports: {} };\n        this.require = runtime.createRequire(this);\n    }\n    /**\n     * @constructor\n     * @param {import('./types').VelcroStaticRuntime} velcro\n     */\n    function Runtime(velcro) {\n        /** @type {Required<import('./types').VelcroImportMap>} */\n        this.importMap = { imports: {}, scopes: {} };\n        this.defs = velcro.defs;\n        /** @type {Record<string, Module | undefined>} */\n        this.modules = Object.create(null);\n        this.root = new Module(this, 'velcro:/root', {});\n        this.require = this.createRequire(this.root);\n        /** @type {Record<string, Module[] | undefined>} */\n        this.dependents = Object.create(null);\n    }\n    Runtime.prototype.createRequire = createRequire;\n    Runtime.prototype.inject = inject;\n    Runtime.prototype.invalidate = invalidate;\n    Runtime.prototype.resolveSpecAgainstImportMap = resolveSpecAgainstImportMap;\n    /**\n     *\n     * @this {Runtime}\n     * @param {Module} fromModule\n     */\n    function createRequire(fromModule) {\n        var runtime = this;\n        /**\n         * @param {string} spec\n         */\n        function require(spec) {\n            var id = runtime.resolveSpecAgainstImportMap(spec, fromModule);\n            var module = runtime.modules[id];\n            if (!module) {\n                var moduleDefinition = runtime.defs[id];\n                if (!moduleDefinition) {\n                    throw new Error(`Unable to locate module '${id}' from '${fromModule.id}`);\n                }\n                var [factory, importMap] = moduleDefinition;\n                module = new Module(runtime, id, importMap);\n                runtime.modules[id] = module;\n                var specParts = id.split('/');\n                var __filename = specParts.pop() || spec;\n                var __dirname = specParts.join('/');\n                factory.call(module.module.exports, module.module, module.module.exports, module.require.bind(module), __dirname, __filename);\n            }\n            (runtime.dependents[id] = runtime.dependents[id] || []).push(fromModule);\n            return module.module.exports;\n        }\n        /**\n         * @param {string} _spec\n         */\n        function resolve(_spec) {\n            return '';\n        }\n        return Object.assign(require, {\n            resolve,\n        });\n    }\n    /**\n     * Inject a pre-existing module\n     *\n     * @template T\n     * @this {Runtime}\n     * @param {string} id Identifier of module\n     * @param {T} exports Value that represents the exported interface of the module\n     */\n    function inject(id, exports) {\n        var module = new Module(this, id, Object.create(null));\n        module.module.exports = exports;\n        this.modules[id] = module;\n        return module;\n    }\n    /**\n     *\n     * @this {Runtime}\n     * @param {string[]} invalidations\n     */\n    function invalidate(invalidations) {\n        var queue = invalidations.slice();\n        while (queue.length) {\n            var id = queue.shift();\n            //@ts-expect-error\n            var deleted = delete this.modules[id];\n            /** @type {Module[] | undefined} */\n            //@ts-expect-error\n            var dependents = this.dependents[id];\n            if (!Array.isArray(dependents))\n                continue;\n            dependents.forEach((dependent) => {\n                queue.push(dependent.id);\n            });\n        }\n    }\n    /**\n     *\n     * @this {Runtime}\n     * @param {string} spec\n     * @param {Module} module\n     * @private\n     */\n    function resolveSpecAgainstImportMap(spec, module) {\n        var importMap = module.importMap;\n        if (!importMap.scopes) {\n            return spec;\n        }\n        var scopesForId = importMap.scopes[module.id];\n        if (!scopesForId) {\n            return spec;\n        }\n        var mappedId = scopesForId[spec];\n        if (mappedId) {\n            return mappedId;\n        }\n        return spec;\n    }\n    var runtime = new Runtime(velcro);\n    velcro.runtime = runtime;\n    return runtime;\n}\n\nclass ChunkOutput {\n    constructor(bundle, sourceModules, uri) {\n        this.bundle = bundle;\n        this.sourceModules = sourceModules;\n        this.uri = uri;\n    }\n    get code() {\n        if (typeof this.cachedCode === 'undefined') {\n            this.cachedCode = this.bundle.toString();\n        }\n        return this.cachedCode;\n    }\n    get href() {\n        return this.uri.toString();\n    }\n    get sourceMap() {\n        if (typeof this.cachedSourceMap === 'undefined') {\n            this.cachedSourceMap = this.generateSourceMap();\n        }\n        return this.cachedSourceMap;\n    }\n    get sourceMapString() {\n        if (typeof this.cachedSourceMapString === 'undefined') {\n            this.cachedSourceMapString = this.sourceMap.toString();\n        }\n        return this.cachedSourceMapString;\n    }\n    get sourceMapDataUri() {\n        if (typeof this.cachedSourceMapDataUri === 'undefined') {\n            this.cachedSourceMapDataUri = this.sourceMap.toDataUri();\n        }\n        return this.cachedSourceMapDataUri;\n    }\n    generateSourceMap() {\n        const inputMap = this.bundle.generateDecodedMap({\n            includeContent: false,\n            hires: true,\n            source: this.href,\n        });\n        const sourceMapTree = new Link(inputMap, inputMap.sources.map((sourceHref) => {\n            const sourceModule = this.sourceModules.get(sourceHref);\n            if (!sourceModule) {\n                return new Source(sourceHref, 'SOURCEMAP ERROR');\n            }\n            // All of the transformations included in the source module's magicString\n            // were baked into the bundle already. We just need to map these into any\n            // earlier sources.\n            return sourceModule.sourceMapsTree;\n        }));\n        const sourceMapTreeMappings = sourceMapTree.traceMappings();\n        if (sourceMapTreeMappings instanceof Error) {\n            return new SourceMap({\n                file: inputMap.file,\n                mappings: '',\n                names: [],\n                sources: [],\n                version: 3,\n                sourcesContent: [],\n            });\n        }\n        // Loop through generated mappings, removing mappings that are character-by-character increments\n        // from the previous mapping. Since we generated a hires bundle, this will shrink the resolution\n        // back down to something not unnecessarily large.\n        // for (const line of sourceMapTreeMappings.mappings) {\n        //   let lastSegment: SourceMapSegment | null = null;\n        //   const shrinkedLine: SourceMapSegment[] = [];\n        //   for (const segment of line) {\n        //     if (lastSegment && lastSegment.length >= 4 && lastSegment.length === segment.length) {\n        //       // We will only push the segment if it is not, effectively a direct cursor move of the\n        //       // last one.\n        //       // For example:\n        //       //   lastSegment = [1, 0, 0, 1] // Generated column 1, original column 1 of the 0th file, 0th line\n        //       //   segment = [2, 0, 0, 2] // Generated column 2, original column 2 of the 0th file, 0th line\n        //       // Given that, we can see that this segment is not adding any _new_ information so we can skip it.\n        //       if (\n        //         lastSegment.length >= 4 &&\n        //         (lastSegment[0] + 1 !== segment[0] ||\n        //           lastSegment[1] !== segment[1] ||\n        //           lastSegment[2] !== segment[2] ||\n        //           lastSegment[3]! + 1 !== segment[3] ||\n        //           lastSegment[4] !== segment[4])\n        //       ) {\n        //         shrinkedLine.push(segment);\n        //       }\n        //     } else {\n        //       shrinkedLine.push(segment);\n        //     }\n        //     lastSegment = segment;\n        //   }\n        //   // line.splice(0, line.length, ...shrinkedLine);\n        // }\n        const sourceMap = new SourceMap({\n            file: this.href,\n            mappings: encode(sourceMapTreeMappings.mappings),\n            names: sourceMapTreeMappings.names,\n            sources: sourceMapTreeMappings.sources,\n            version: 3,\n            sourcesContent: sourceMapTreeMappings.sourcesContent,\n        });\n        return sourceMap;\n    }\n}\n\nclass Chunk {\n    constructor(options) {\n        this.edgesFrom = new MapSet();\n        this.edgesTo = new MapSet();\n        this.sourceModules = new Map();\n        this.rootUri = options.rootUri;\n        for (const sourceModule of options.sourceModules) {\n            this.sourceModules.set(sourceModule.href, sourceModule);\n        }\n        for (const edge of options.edges) {\n            const fromHref = edge.fromUri.toString();\n            const toHref = edge.toUri.toString();\n            this.edgesFrom.add(fromHref, edge);\n            this.edgesTo.add(toHref, edge);\n        }\n    }\n    buildForStaticRuntime(options) {\n        // const velcroModuleFactoryParts = velcroModuleFactory\n        //   .toString()\n        //   .split(velcroModuleFactory.splitString);\n        // const velcroChunkWrapperParts = velcroChunkWrapper\n        //   .toString()\n        //   .split(velcroChunkWrapper.splitString);\n        const bundle = new Bundle({\n            separator: '\\n',\n        });\n        for (const sourceModule of this.sourceModules.values()) {\n            const moduleScopes = {};\n            const scopes = {\n                [sourceModule.href]: moduleScopes,\n            };\n            const importMap = { scopes };\n            const edgesFrom = this.edgesFrom.get(sourceModule.href);\n            if (edgesFrom) {\n                for (const edge of edgesFrom) {\n                    moduleScopes[edge.dependency.spec] = edge.toUri.toString();\n                }\n            }\n            const sourceModuleCode = sourceModule.source.clone();\n            sourceModuleCode.prepend(`velcro.defs[${JSON.stringify(sourceModule.uri.toString())}] = [function(module,exports,require,__dirname,__filename){\\n`);\n            sourceModuleCode.append(`\\n},${JSON.stringify(importMap)}];`);\n            bundle.addSource(sourceModuleCode);\n        }\n        const velcroStaticRuntime = { defs: {} };\n        bundle.prepend(`(function(velcro){\\n`);\n        bundle.prepend(`if (typeof Velcro === 'undefined') Velcro = Object.create(null);\\nif (typeof Velcro.registry === 'undefined') Velcro.registry = ${JSON.stringify(velcroStaticRuntime)};\\n`);\n        bundle.append(`\\n})(Velcro.registry);\\n`);\n        if (options && options.injectRuntime) {\n            bundle.append(`\\nVelcro.runtime = ${createRuntime.toString()}(Velcro.registry);\\n`);\n        }\n        if (options && options.invalidations) {\n            if (!options.injectRuntime) {\n                throw new Error('Setting injectRuntime to true is required when calling buildForStaticRuntime and specifying invalidations');\n            }\n            bundle.append(`\\nVelcro.runtime.invalidate(${JSON.stringify(options.invalidations)});\\n`);\n        }\n        return new ChunkOutput(bundle, this.sourceModules, this.rootUri);\n    }\n}\n\nclass Graph {\n    constructor(options) {\n        this.edgesFrom = new MapSet();\n        this.edgesTo = new MapSet();\n        this.sourceModules = new Map();\n        this.rootUri = options.rootUri;\n        for (const sourceModule of options.sourceModules) {\n            this.sourceModules.set(sourceModule.href, sourceModule);\n        }\n        for (const edge of options.edges) {\n            const fromHref = edge.fromUri.toString();\n            const toHref = edge.toUri.toString();\n            this.edgesFrom.add(fromHref, edge);\n            this.edgesTo.add(toHref, edge);\n        }\n    }\n    splitChunks() {\n        return [\n            new Chunk({\n                edges: this.edgesFrom.values(),\n                rootUri: Uri.joinPath(this.rootUri, './chunk/0.js'),\n                sourceModules: this.sourceModules.values(),\n            }),\n        ];\n    }\n}\n\nvar version = \"0.45.0\";\n\nconst DEFAULT_SHIM_GLOBALS = Object.assign(Object.create(null), {\n    Buffer: {\n        spec: `@velcro/node-libs@${version}/lib/buffer.js`,\n        export: 'Buffer',\n    },\n    global: {\n        spec: `@velcro/node-libs@${version}/lib/global.js`,\n    },\n    globalThis: {\n        spec: `@velcro/node-libs@${version}/lib/global.js`,\n    },\n    process: {\n        spec: `@velcro/node-libs@${version}/lib/process.js`,\n    },\n});\n\nclass SourceModule {\n    constructor(uri, rootUri, source, dependencies, sourceMapsTree, visits) {\n        this.uri = uri;\n        this.rootUri = rootUri;\n        this.source = source;\n        this.dependencies = dependencies;\n        this.sourceMapsTree = sourceMapsTree;\n        this.visits = visits;\n    }\n    get href() {\n        return this.uri.toString();\n    }\n    get rootHref() {\n        return this.rootUri.toString();\n    }\n}\n\nclass Build {\n    constructor(rootUri, options = {}) {\n        this.rootUri = rootUri;\n        this.disposer = new DisposableStore();\n        this.edges = new Set();\n        this.errors = [];\n        this.seen = new Set();\n        this.sourceModules = new Map();\n        this.pendingModuleOperations = new MapSet();\n        this.onCompletedEmitter = new Emitter();\n        this.onErrorEmitter = new Emitter();\n        this.onProgressEmitter = new Emitter();\n        this.done = new Promise((resolve, reject) => {\n            this.disposer.add(this.onCompleted(({ graph }) => resolve(graph)));\n            this.disposer.add(this.onError(({ error }) => reject(error)));\n        });\n        this.tokenSource = new CancellationTokenSource(options.token);\n        this.disposer.add(this.tokenSource);\n        this.done.catch(() => {\n            // Prevent uncaught rejection\n        });\n    }\n    get onCompleted() {\n        return this.onCompletedEmitter.event;\n    }\n    get onError() {\n        return this.onErrorEmitter.event;\n    }\n    get onProgress() {\n        return this.onProgressEmitter.event;\n    }\n    get token() {\n        return this.tokenSource.token;\n    }\n    addEdge(edge) {\n        this.edges.add(edge);\n    }\n    addSourceModule(sourceModule) {\n        this.sourceModules.set(sourceModule.href, sourceModule);\n    }\n    cancel() {\n        this.tokenSource.cancel();\n    }\n    dispose() {\n        this.cancel();\n        this.disposer.dispose();\n    }\n    hasSourceModule(href) {\n        return this.sourceModules.has(href);\n    }\n    runAsync(key, fn) {\n        if (this.token.isCancellationRequested) {\n            return;\n        }\n        const onError = (err) => {\n            if (ret) {\n                this.pendingModuleOperations.delete(key, ret);\n            }\n            this.cancel();\n            if (!isCanceledError(err)) {\n                this.errors.push(err);\n                this.onErrorEmitter.fire({ error: err });\n            }\n        };\n        const onSuccess = () => {\n            this.pendingModuleOperations.delete(key, ret);\n            if (!this.pendingModuleOperations.size) {\n                this.onCompletedEmitter.fire({\n                    graph: new Graph({\n                        edges: this.edges,\n                        rootUri: this.rootUri,\n                        sourceModules: this.sourceModules.values(),\n                    }),\n                });\n            }\n            else {\n                this.onProgressEmitter.fire({\n                    progress: {\n                        completed: this.sourceModules.size,\n                        pending: this.pendingModuleOperations.size,\n                    },\n                });\n            }\n        };\n        let ret;\n        try {\n            ret = fn().then(onSuccess, onError);\n            this.pendingModuleOperations.add(key, ret);\n        }\n        catch (err) {\n            onError(err);\n        }\n    }\n}\nclass GraphBuilder {\n    constructor(options) {\n        this.edgesByDependency = new WeakMap();\n        this.edgesByInvalidation = new MapSet();\n        this.sourceModules = new Map();\n        this.sourceModulesByInvalidation = new MapSet();\n        this.resolver = options.resolver;\n        this.external = options.external;\n        this.nodeEnv = options.nodeEnv || 'development';\n        this.pluginManager = new PluginManager(options.plugins || []);\n    }\n    loadDependency(build, sourceModule, dep) {\n        if (build.seen.has(dep))\n            return;\n        build.seen.add(dep);\n        if (this.external && this.external(dep, sourceModule)) {\n            return;\n        }\n        // console.debug('loadDependency(%s, %s)', sourceModule.href, dep.spec);\n        build.runAsync(`${sourceModule.href}|${dep.spec}`, async () => {\n            const result = await this.pluginManager.executeResolveDependency({\n                nodeEnv: this.nodeEnv,\n                resolver: this.resolver,\n                token: build.token,\n            }, dep, sourceModule);\n            const edge = this.createEdge(sourceModule.uri, sourceModule.rootUri, result.uri, result.rootUri, result.visited, dep);\n            build.addEdge(edge);\n            this.loadEdge(build, edge);\n        });\n    }\n    loadEdge(build, edge) {\n        const href = edge.toUri.toString();\n        if (build.hasSourceModule(href))\n            return;\n        const existingSourceModule = this.sourceModules.get(href);\n        if (existingSourceModule) {\n            build.addSourceModule(existingSourceModule);\n            return this.visitSourceModule(build, existingSourceModule);\n        }\n        // console.debug(\n        //   'loadEdge(%s, %s, %s)',\n        //   edge.fromUri.toString(),\n        //   edge.dependency.spec,\n        //   edge.toUri.toString()\n        // );\n        build.runAsync(href, async () => {\n            // We need to check again in case another 'thread' already produced this\n            // sourceModule\n            if (build.hasSourceModule(href))\n                return;\n            const loadResult = await this.pluginManager.executeLoad({\n                nodeEnv: this.nodeEnv,\n                resolver: this.resolver,\n                token: build.token,\n            }, edge.toUri);\n            // We need to check again in case another 'thread' already produced this\n            // sourceModule\n            if (build.hasSourceModule(href))\n                return;\n            const transformResult = await this.pluginManager.executeTransform({\n                nodeEnv: this.nodeEnv,\n                resolver: this.resolver,\n                token: build.token,\n            }, edge.toUri, loadResult.code);\n            // We need to check again in case another 'thread' already produced this\n            // sourceModule\n            if (build.hasSourceModule(href))\n                return;\n            const parseResult = parse$1(edge.toUri, transformResult.code, {\n                globalModules: DEFAULT_SHIM_GLOBALS,\n                nodeEnv: this.nodeEnv,\n            });\n            const sourceModule = new SourceModule(edge.toUri, edge.toRootUri, parseResult.code, new Set(parseResult.dependencies), transformResult.sourceMapTree, [...transformResult.visited, ...loadResult.visited]);\n            build.addSourceModule(sourceModule);\n            this.sourceModules.set(sourceModule.href, sourceModule);\n            for (const visit of sourceModule.visits) {\n                this.sourceModulesByInvalidation.add(visit.uri.toString(), sourceModule);\n            }\n            this.sourceModulesByInvalidation.add(sourceModule.href, sourceModule);\n            this.visitSourceModule(build, sourceModule);\n        });\n    }\n    loadEntrypoint(build, uri) {\n        const href = uri.toString();\n        // console.debug('loadEntrypoint(%s)', href);\n        build.runAsync(href, async () => {\n            const result = await this.pluginManager.executeResolveEntrypoint({\n                nodeEnv: this.nodeEnv,\n                resolver: this.resolver,\n                token: build.token,\n            }, uri);\n            const edge = this.createEdge(build.rootUri, build.rootUri, result.uri, result.rootUri, result.visited, SourceModuleDependency.fromEntrypoint(uri));\n            this.loadEdge(build, edge);\n        });\n    }\n    visitSourceModule(build, sourceModule) {\n        if (build.seen.has(sourceModule))\n            return;\n        build.seen.add(sourceModule);\n        // console.debug('visitSourceModule(%s)', sourceModule.href);\n        for (const dep of sourceModule.dependencies) {\n            const existingEdge = this.edgesByDependency.get(dep);\n            if (existingEdge) {\n                build.addEdge(existingEdge);\n                this.loadEdge(build, existingEdge);\n            }\n            else {\n                this.loadDependency(build, sourceModule, dep);\n            }\n        }\n    }\n    build(entrypoints, options = {}) {\n        const rootUri = Uri.parse('velcro:/');\n        const build = new Build(rootUri, { token: options.token });\n        for (const uri of entrypoints) {\n            this.loadEntrypoint(build, Uri.isUri(uri) ? uri : Uri.parse(uri));\n        }\n        return build;\n    }\n    invalidate(uri) {\n        const href = Uri.isUri(uri) ? uri.toString() : uri;\n        const sourceModules = this.sourceModulesByInvalidation.get(href);\n        if (sourceModules) {\n            for (const sourceModule of sourceModules) {\n                this.sourceModules.delete(sourceModule.href);\n            }\n            this.sourceModulesByInvalidation.deleteAll(href);\n        }\n        this.sourceModules.delete(href);\n        const edges = this.edgesByInvalidation.get(href);\n        if (edges) {\n            for (const edge of edges) {\n                this.edgesByDependency.delete(edge.dependency);\n            }\n            this.edgesByInvalidation.deleteAll(href);\n        }\n        this.resolver.invalidate(uri);\n    }\n    createEdge(fromUri, fromRootUri, toUri, toRootUri, visited, dependency) {\n        const edge = { dependency, fromUri, fromRootUri, toUri, toRootUri, visited };\n        this.edgesByDependency.set(dependency, edge);\n        this.edgesByInvalidation.add(toUri.toString(), edge);\n        for (const visit of visited) {\n            this.edgesByInvalidation.add(visit.uri.toString(), edge);\n        }\n        return edge;\n    }\n}\n\nconst version$1 = '0.45.1';\n\nexport { Build, GraphBuildError, GraphBuilder, version$1 as version };\n//# sourceMappingURL=index.js.map\n","import styled from '@emotion/styled/macro';\nimport React, { useRef, useEffect, useContext } from 'react';\nimport { EditorManagerContext } from '../lib/EditorManager';\n\nconst Editor: React.FC<{\n  className?: string;\n}> = ({ className }) => {\n  const el = useRef<HTMLDivElement | null>(null);\n  const editorManager = useContext(EditorManagerContext);\n\n  useEffect(() => {\n    if (!el.current) {\n      return;\n    }\n\n    const editor = editorManager.mount(el.current);\n\n    return () => {\n      editor.dispose();\n    };\n  }, [editorManager, el]);\n\n  return (\n    <div className={className} ref={el}>\n      <div></div>\n    </div>\n  );\n};\n\nexport default styled(Editor)``;\n","function cssPlugin() {\n    return {\n        name: 'cssPlugin',\n        transform(ctx, uri, code) {\n            if (!uri.path.endsWith('.css')) {\n                return;\n            }\n            const cssCode = code;\n            const magicString = ctx.createMagicString();\n            const BACKSLASH = '\\\\'.charCodeAt(0);\n            const SINGLE_QUOTE = \"'\".charCodeAt(0);\n            const NL = '\\n'.charCodeAt(0);\n            const CR = '\\r'.charCodeAt(0);\n            for (let i = 0; i < cssCode.length; i++) {\n                const char = cssCode.charCodeAt(i);\n                // Escape certain characters (if not already escaped)\n                switch (char) {\n                    case CR:\n                    case NL:\n                        // Break the resulting JavaScript string across new lines\n                        // so that original css lines have a 1:1 with JavaScript lines.\n                        // This allows the resulting source-map to correct show the\n                        // original source whereas if the source had been collapsed to\n                        // a JavaScript string on a single line, all the detail is lost.\n                        magicString.overwrite(i, i + 1, \"\\\\n'\\n+'\");\n                        break;\n                    case BACKSLASH:\n                    case SINGLE_QUOTE:\n                        magicString.prependRight(i, '\\\\');\n                        break;\n                }\n            }\n            magicString.prepend(`\n        function reload(){\n          var styleTag = document.createElement(\"style\");\n          styleTag.type = \"text/css\";\n          styleTag.innerHTML = '`);\n            magicString.append(`';\n          document.head.appendChild(styleTag);\n          return {\n            dispose: function() {    \n              if (styleTag && styleTag.parentElement) {\n                styleTag.parentElement.removeChild(styleTag);\n              }\n            },\n            element: styleTag\n          };\n        };\n        var result = reload();\n        module.exports = result.element;\n        if (module.hot && module.hot.dispose) {\n          module.hot.dispose(function() {\n            result.dispose();\n          });\n        }\n      `);\n            return {\n                code: magicString.toString(),\n                sourceMap: magicString.generateDecodedMap(),\n            };\n        },\n    };\n}\n\nconst version = '0.45.1';\n\nexport { cssPlugin, version };\n//# sourceMappingURL=index.js.map\n","import { transform } from 'sucrase';\n\nfunction sucrasePlugin(options = {}) {\n    const extensions = ['js'];\n    if (options.transforms) {\n        for (const transform of options.transforms) {\n            switch (transform) {\n                case 'jsx':\n                    extensions.push('jsx');\n                    break;\n                case 'typescript':\n                    extensions.push('ts', 'tsx');\n                    break;\n            }\n        }\n    }\n    const uriTestRx = new RegExp(`\\.(?:${extensions.join('|')})$`, 'i');\n    const jsxPragmaRx = /\\/\\*\\*\\s*@jsx\\s+(\\S+)\\s*\\*+\\//;\n    const jsxFragmentPragmaRx = /\\/\\*\\*\\s*@jsxFragment\\s+(\\S+)\\s*\\*+\\//;\n    return {\n        name: 'sucrasePlugin',\n        transform(ctx, uri, code) {\n            if (!uriTestRx.test(uri.path)) {\n                return;\n            }\n            const sucraseOptions = {\n                transforms: ['imports', ...(options.transforms || [])],\n                filePath: uri.toString(),\n                production: ctx.nodeEnv === 'production',\n                sourceMapOptions: {\n                    compiledFilename: uri.toString(),\n                },\n            };\n            if (!options.jsxPragma) {\n                // If not specified try to detect the pragma\n                const jsxPragmaMatches = code.match(jsxPragmaRx);\n                if (jsxPragmaMatches) {\n                    sucraseOptions.jsxPragma = jsxPragmaMatches[1];\n                }\n            }\n            if (!options.jsxFragmentPragma) {\n                // If not specified try to detect the pragma\n                const jsxFragmentPragmaMatches = code.match(jsxFragmentPragmaRx);\n                if (jsxFragmentPragmaMatches) {\n                    sucraseOptions.jsxFragmentPragma = jsxFragmentPragmaMatches[1];\n                }\n            }\n            const result = transform(code, sucraseOptions);\n            return {\n                code: result.code,\n                sourceMap: result.sourceMap,\n            };\n        },\n    };\n}\n\nconst version = '0.45.1';\n\nexport { sucrasePlugin, version };\n//# sourceMappingURL=index.js.map\n","import { Uri, isThenable, all, EntryNotFoundError, basename, checkCancellation, parseBufferAsPackageJson } from '@velcro/common';\nimport { AbstractResolverStrategyWithRoot, ResolverStrategy, ResolverContext } from '@velcro/resolver';\nimport { validRange, satisfies } from 'semver';\n\nfunction isValidEntry(entry) {\n    if (!entry || typeof entry !== 'object')\n        return false;\n    return isValidFile(entry) || isValidDirectory(entry);\n}\nfunction isValidDirectory(entry) {\n    return (typeof entry === 'object' &&\n        entry &&\n        entry.type === ResolverStrategy.EntryKind.Directory &&\n        typeof entry.path === 'string' &&\n        entry.path &&\n        (typeof entry.files === 'undefined' ||\n            (Array.isArray(entry.files) && entry.files.every(isValidEntry))));\n}\nfunction isValidFile(entry) {\n    return (typeof entry === 'object' &&\n        entry &&\n        entry.type === ResolverStrategy.EntryKind.File &&\n        typeof entry.path === 'string' &&\n        entry.path);\n}\nfunction specToString(spec) {\n    return `${spec.spec}${spec.pathname}`;\n}\nclass JSDelivrCdn {\n    constructor() {\n        this.name = 'jsdelivr';\n        this.specRx = /^\\/((@[^/]+\\/[^/@]+|[^/@]+)(?:@([^/]+))?)(.*)?$/;\n    }\n    isValidUrl(url) {\n        return url.scheme === JSDelivrCdn.protocol || url.authority === JSDelivrCdn.host;\n    }\n    normalizePackageListing(result) {\n        if (!result || typeof result !== 'object') {\n            throw new Error(`Unexpected package listing contents`);\n        }\n        const files = result.files;\n        if (!Array.isArray(files)) {\n            throw new Error(`Unexpected package listing contents`);\n        }\n        const mapChildEntry = (parent, child) => {\n            if (!child || typeof child !== 'object') {\n                throw new Error(`Unexpected entry in package listing contents`);\n            }\n            const name = child.name;\n            if (typeof name !== 'string') {\n                throw new Error(`Unexpected entry in package listing contents`);\n            }\n            const path = `${parent}/${name}`;\n            if (child.type === ResolverStrategy.EntryKind.Directory) {\n                const files = child.files;\n                if (!Array.isArray(files)) {\n                    throw new Error(`Unexpected entry in package listing contents`);\n                }\n                return {\n                    type: ResolverStrategy.EntryKind.Directory,\n                    path,\n                    files: files.map((file) => mapChildEntry(path, file)),\n                };\n            }\n            else if (child.type === ResolverStrategy.EntryKind.File) {\n                return {\n                    type: ResolverStrategy.EntryKind.File,\n                    path,\n                };\n            }\n            throw new Error(`Error mapping child entry in package file listing`);\n        };\n        return {\n            type: ResolverStrategy.EntryKind.Directory,\n            path: '/',\n            files: files.map((file) => mapChildEntry('', file)),\n        };\n    }\n    parseUrl(url) {\n        if (Uri.isUri(url)) {\n            url = url.path;\n        }\n        const prefix = `/npm`;\n        if (!url.startsWith(prefix)) {\n            throw new Error(`Unable to parse unexpected ${this.name} url: ${url}`);\n        }\n        url = url.slice(prefix.length);\n        /**\n         * 1: scope + name + version\n         * 2: scope + name\n         * 3: version?\n         * 4: pathname\n         */\n        const matches = url.match(this.specRx);\n        if (!matches) {\n            throw new Error(`Unable to parse unexpected unpkg url: ${url}`);\n        }\n        return {\n            spec: matches[1],\n            name: matches[2],\n            version: matches[3] || '',\n            pathname: matches[4] || '',\n        };\n    }\n    urlForPackageFile(spec, pathname) {\n        return Uri.from({\n            scheme: JSDelivrCdn.protocol,\n            authority: JSDelivrCdn.host,\n            path: `/npm/${spec}${pathname}`,\n        });\n    }\n    urlForPackageList(spec) {\n        return Uri.from({\n            scheme: JSDelivrCdn.protocol,\n            authority: JSDelivrCdn.dataHost,\n            path: `/v1/package/npm/${spec}/tree`,\n        });\n    }\n}\nJSDelivrCdn.protocol = 'https';\nJSDelivrCdn.host = 'cdn.jsdelivr.net';\nJSDelivrCdn.dataHost = 'data.jsdelivr.com';\nclass UnpkgCdn {\n    constructor() {\n        this.name = 'unpkg';\n        this.UNPKG_SPEC_RX = /^\\/((@[^/]+\\/[^/@]+|[^/@]+)(?:@([^/]+))?)(.*)?$/;\n    }\n    isValidUrl(url) {\n        return url.scheme === UnpkgCdn.protocol || url.authority === UnpkgCdn.host;\n    }\n    normalizePackageListing(result) {\n        if (!isValidDirectory(result)) {\n            throw new Error(`Error normalizing directory listing`);\n        }\n        return result;\n    }\n    parseUrl(url) {\n        if (Uri.isUri(url)) {\n            url = url.path;\n        }\n        /**\n         * 1: scope + name + version\n         * 2: scope + name\n         * 3: version?\n         * 4: pathname\n         */\n        const matches = url.match(this.UNPKG_SPEC_RX);\n        if (!matches) {\n            throw new Error(`Unable to parse unexpected unpkg url: ${url}`);\n        }\n        return {\n            spec: matches[1],\n            name: matches[2],\n            version: matches[3] || '',\n            pathname: matches[4] || '',\n        };\n    }\n    urlForPackageFile(spec, pathname) {\n        return Uri.from({\n            scheme: UnpkgCdn.protocol,\n            authority: UnpkgCdn.host,\n            path: `/${spec}${pathname}`,\n        });\n    }\n    urlForPackageList(spec) {\n        return Uri.from({\n            scheme: UnpkgCdn.protocol,\n            authority: UnpkgCdn.host,\n            path: `/${spec}/`,\n            query: 'meta',\n        });\n    }\n}\nUnpkgCdn.protocol = 'https';\nUnpkgCdn.host = 'unpkg.com';\nclass CdnStrategy extends AbstractResolverStrategyWithRoot {\n    constructor(readUrlFn, cdn) {\n        super(cdn.urlForPackageFile('', ''));\n        this.contentCache = new Map();\n        this.locks = new Map();\n        this.packageEntriesCache = new Map();\n        this.packageJsonCache = new Map();\n        this.cdn = cdn;\n        this.readUrlFn = readUrlFn;\n    }\n    _withRootUriCheck(uri, fn) {\n        if (!Uri.isPrefixOf(this.rootUri, uri)) {\n            throw new Error(`This strategy is only able to handle URIs under '${this.rootUri.toString()}' and is unable to handle '${uri.toString()}'`);\n        }\n        return fn(this.rootUri);\n    }\n    async getUrlForBareModule(ctx, name, spec, path) {\n        const unresolvedUri = this.cdn.urlForPackageFile(`${name}@${spec}`, path);\n        const resolveReturn = await ctx.resolveUri(unresolvedUri);\n        return resolveReturn;\n    }\n    getCanonicalUrl(ctx, uri) {\n        return this._withRootUriCheck(uri, async () => {\n            const unresolvedSpec = this.cdn.parseUrl(uri);\n            const packageJsonReturn = ctx.runInChildContext('CdnStrategy._readPackageJsonWithCache', specToString(unresolvedSpec), (ctx) => this._readPackageJsonWithCache(ctx, unresolvedSpec));\n            const packageJson = isThenable(packageJsonReturn)\n                ? await packageJsonReturn\n                : packageJsonReturn;\n            return {\n                uri: this.cdn.urlForPackageFile(`${packageJson.name}@${packageJson.version}`, unresolvedSpec.pathname),\n            };\n        });\n        // const results = all([ctx.getRootUrl(uri), ctx.getResolveRoot(uri)], ctx.token);\n        // const [rootUriResult, resolveRootResult] = isThenable(results) ? await results : results;\n    }\n    getResolveRoot(ctx, uri) {\n        return this._withRootUriCheck(uri, async () => {\n            const unresolvedSpec = this.cdn.parseUrl(uri);\n            const packageJsonReturn = this._readPackageJsonWithCache(ctx, unresolvedSpec);\n            const packageJson = isThenable(packageJsonReturn)\n                ? await packageJsonReturn\n                : packageJsonReturn;\n            return {\n                uri: this.cdn.urlForPackageFile(`${packageJson.name}@${packageJson.version}`, '/'),\n            };\n        });\n    }\n    getRootUrl() {\n        return {\n            uri: this.cdn.urlForPackageFile('', ''),\n        };\n    }\n    listEntries(ctx, uri) {\n        return this._withRootUriCheck(uri, async () => {\n            const unresolvedSpec = this.cdn.parseUrl(uri);\n            const results = all([\n                ctx.getResolveRoot(uri),\n                this._readPackageJsonWithCache(ctx, unresolvedSpec),\n                this._readPackageEntriesWithCache(ctx, unresolvedSpec),\n            ], ctx.token);\n            const [{ uri: resolveRootUri }, packageJson, entriesReturn] = isThenable(results)\n                ? await results\n                : results;\n            const canonicalizedSpec = {\n                name: packageJson.name,\n                pathname: unresolvedSpec.pathname,\n                spec: `${packageJson.name}@${packageJson.version}`,\n                version: packageJson.version,\n            };\n            // Proactively cache the canonicalized package entries\n            this.packageEntriesCache.get(packageJson.name).set(packageJson.version, entriesReturn);\n            const traversalSegments = canonicalizedSpec.pathname.split('/').filter(Boolean);\n            let parentEntry = entriesReturn;\n            while (parentEntry && traversalSegments.length) {\n                const segment = traversalSegments.shift();\n                if (parentEntry.type !== ResolverStrategy.EntryKind.Directory || !parentEntry.files) {\n                    throw new EntryNotFoundError(uri);\n                }\n                parentEntry = parentEntry.files.find((file) => file.type === ResolverStrategy.EntryKind.Directory && basename(file.path) === segment);\n            }\n            if (!parentEntry) {\n                throw new EntryNotFoundError(uri);\n            }\n            if (!parentEntry.files) {\n                return {\n                    entries: [],\n                };\n            }\n            return {\n                entries: parentEntry.files.map((entry) => {\n                    return {\n                        type: entry.type,\n                        uri: Uri.joinPath(resolveRootUri, `.${entry.path}`),\n                    };\n                }),\n            };\n        });\n    }\n    readFileContent(ctx, uri) {\n        return this._withRootUriCheck(uri, () => {\n            const uriStr = uri.toString();\n            const cached = this.contentCache.get(uriStr);\n            if (cached === null) {\n                return Promise.reject(new EntryNotFoundError(uri));\n            }\n            if (cached) {\n                return cached;\n            }\n            ctx.recordVisit(uri, ResolverContext.VisitKind.File);\n            const readReturn = this.readUrlFn(uriStr, ctx.token);\n            if (readReturn === null) {\n                this.contentCache.set(uriStr, null);\n                return Promise.reject(new EntryNotFoundError(uri));\n            }\n            if (isThenable(readReturn)) {\n                const wrappedReturn = readReturn.then((data) => {\n                    if (data === null) {\n                        this.contentCache.delete(uriStr);\n                        return Promise.reject(new EntryNotFoundError(uri));\n                    }\n                    const entry = { content: data };\n                    this.contentCache.set(uriStr, entry);\n                    return entry;\n                });\n                this.contentCache.set(uriStr, wrappedReturn);\n                return wrappedReturn;\n            }\n            const entry = { content: readReturn };\n            this.contentCache.set(uriStr, entry);\n            return entry;\n        });\n    }\n    _readPackageEntriesWithCache(ctx, spec) {\n        ctx.debug('%s._readPackageEntriesWithCache(%s)', this.constructor.name, specToString(spec));\n        return this._withLock(`packageEntries:${spec.name}`, () => {\n            let packageEntriesCacheForModule = this.packageEntriesCache.get(spec.name);\n            if (packageEntriesCacheForModule) {\n                const exactMatch = packageEntriesCacheForModule.get(spec.version);\n                if (exactMatch) {\n                    // console.log('[HIT-EXACT] readPackageJsonWithCache(%s)', spec.spec);\n                    return exactMatch;\n                }\n                const range = validRange(spec.version);\n                if (range) {\n                    for (const [version, entries] of packageEntriesCacheForModule) {\n                        if (satisfies(version, range)) {\n                            return entries;\n                        }\n                    }\n                }\n            }\n            else {\n                packageEntriesCacheForModule = new Map();\n                this.packageEntriesCache.set(spec.name, packageEntriesCacheForModule);\n            }\n            return this._readPackageEntries(ctx, spec).then((rootDir) => {\n                packageEntriesCacheForModule.set(spec.version, rootDir);\n                return rootDir;\n            });\n        });\n    }\n    async _readPackageEntries(ctx, spec) {\n        ctx.debug('%s._readPackageEntries(%s)', this.constructor.name, specToString(spec));\n        const uri = this.cdn.urlForPackageList(spec.spec);\n        const href = uri.toString();\n        ctx.recordVisit(uri, ResolverContext.VisitKind.Directory);\n        const data = await checkCancellation(this.readUrlFn(href, ctx.token), ctx.token);\n        if (data === null) {\n            throw new EntryNotFoundError(spec);\n        }\n        const dataStr = ctx.decoder.decode(data);\n        return this.cdn.normalizePackageListing(JSON.parse(dataStr));\n    }\n    _readPackageJsonWithCache(ctx, spec) {\n        return this._withLock(`packageJson:${spec.name}`, () => {\n            let packageJsonCacheForModule = this.packageJsonCache.get(spec.name);\n            if (packageJsonCacheForModule) {\n                const exactMatch = packageJsonCacheForModule.get(spec.version);\n                if (exactMatch) {\n                    // console.log('[HIT-EXACT] readPackageJsonWithCache(%s)', spec.spec);\n                    for (const visit of exactMatch.visited) {\n                        ctx.recordVisit(visit.uri, visit.type);\n                    }\n                    return exactMatch.packageJson;\n                }\n                const range = validRange(spec.version);\n                if (range) {\n                    for (const [version, entry] of packageJsonCacheForModule) {\n                        if (satisfies(version, range)) {\n                            // console.log('[HIT] readPackageJsonWithCache(%s)', spec.spec);\n                            for (const visit of entry.visited) {\n                                ctx.recordVisit(visit.uri, visit.type);\n                            }\n                            return entry.packageJson;\n                        }\n                    }\n                }\n            }\n            else {\n                packageJsonCacheForModule = new Map();\n                this.packageJsonCache.set(spec.name, packageJsonCacheForModule);\n            }\n            return this._readPackageJson(spec, ctx).then((packageJson) => {\n                packageJsonCacheForModule.set(packageJson.version, { packageJson, visited: ctx.visited });\n                return packageJson;\n            });\n        });\n    }\n    async _readPackageJson(spec, ctx) {\n        ctx.debug('%s._readPackageJson(%s)', this.constructor.name, specToString(spec));\n        const uri = this.cdn.urlForPackageFile(spec.spec, '/package.json');\n        const contentReturn = ctx.readFileContent(uri);\n        const contentResult = isThenable(contentReturn) ? await contentReturn : contentReturn;\n        let manifest;\n        try {\n            manifest = parseBufferAsPackageJson(ctx.decoder, contentResult.content, spec.spec);\n        }\n        catch (err) {\n            throw new Error(`Error parsing manifest as json for package ${spec}: ${err.message}`);\n        }\n        // Since we know what the canonicalized version is now (we didn't until the promise resolved)\n        // and the package.json was parsed), we can proactively seed the content cache for the\n        // canonical url.\n        const canonicalHref = this.cdn\n            .urlForPackageFile(`${manifest.name}@${manifest.version}`, '/package.json')\n            .toString();\n        this.contentCache.set(canonicalHref, contentResult);\n        return manifest;\n    }\n    _withLock(lockKey, fn) {\n        const lock = this.locks.get(lockKey);\n        const runCriticalSection = () => {\n            const ret = fn();\n            if (isThenable(ret)) {\n                const locked = ret.then((result) => {\n                    this.locks.delete(lockKey);\n                    return result;\n                }, (err) => {\n                    this.locks.delete(lockKey);\n                    return Promise.reject(err);\n                });\n                this.locks.set(lockKey, locked);\n                return ret;\n            }\n            // No need to lock in non-promise\n            return ret;\n        };\n        if (isThenable(lock)) {\n            return lock.then(runCriticalSection);\n        }\n        return runCriticalSection();\n    }\n    static forJsDelivr(readUrlFn) {\n        return new CdnStrategy(readUrlFn, new JSDelivrCdn());\n    }\n    static forUnpkg(readUrlFn) {\n        return new CdnStrategy(readUrlFn, new UnpkgCdn());\n    }\n}\n\nconst version = '0.45.1';\n\nexport { CdnStrategy, version };\n//# sourceMappingURL=index.js.map\n","import { AbstractResolverStrategy } from '@velcro/resolver';\nimport { Uri } from '@velcro/common';\n\nclass CompoundStrategy extends AbstractResolverStrategy {\n    constructor(options) {\n        super();\n        this.strategies = new Set(options.strategies);\n    }\n    _delegateToStrategy(method, ctx, uri) {\n        for (const strategy of this.strategies) {\n            if (Uri.isPrefixOf(strategy.rootUri, uri)) {\n                return strategy[method](ctx, uri);\n            }\n        }\n        return Promise.reject(new Error(`No strategy found whose root is a prefix of ${uri}`));\n    }\n    getCanonicalUrl(ctx, uri) {\n        return this._delegateToStrategy('getCanonicalUrl', ctx, uri);\n    }\n    getResolveRoot(ctx, uri) {\n        return this._delegateToStrategy('getResolveRoot', ctx, uri);\n    }\n    getUrlForBareModule(ctx, name, spec, path) {\n        for (const strategy of this.strategies) {\n            if (strategy.getUrlForBareModule) {\n                return strategy.getUrlForBareModule(ctx, name, spec, path);\n            }\n        }\n        return {\n            found: false,\n            uri: null,\n        };\n    }\n    listEntries(ctx, uri) {\n        return this._delegateToStrategy('listEntries', ctx, uri);\n    }\n    readFileContent(ctx, uri) {\n        return this._delegateToStrategy('readFileContent', ctx, uri);\n    }\n}\n\nconst version = '0.45.1';\n\nexport { CompoundStrategy, version };\n//# sourceMappingURL=index.js.map\n","import { Graph, GraphBuilder } from '@velcro/bundler';\nimport { CancellationTokenSource, DisposableStore, Emitter, Event, Uri } from '@velcro/common';\nimport { cssPlugin } from '@velcro/plugin-css';\nimport { sucrasePlugin } from '@velcro/plugin-sucrase';\nimport { Resolver } from '@velcro/resolver';\nimport { CdnStrategy } from '@velcro/strategy-cdn';\nimport { CompoundStrategy } from '@velcro/strategy-compound';\nimport { MemoryStrategy } from '@velcro/strategy-memory';\nimport * as Monaco from 'monaco-editor';\n\nconst readUrl = (href: string) => fetch(href).then((res) => res.arrayBuffer());\n\ntype DefineEvent<TEventName extends string, TData = never> = {\n  eventName: TEventName;\n  data: TData;\n};\ntype AnyEvent = DefineEvent<string, unknown>;\ntype EventWithData<TEvent extends AnyEvent> = TEvent extends AnyEvent\n  ? [TEvent['data']] extends [never]\n    ? never\n    : TEvent\n  : never;\ntype EventWithoutData<TEvent extends AnyEvent> = Exclude<TEvent, EventWithData<TEvent>>;\n\ntype DefineState<TStateName extends string, TData = never> = TStateName extends string\n  ? [TData] extends [never]\n    ? {\n        stateName: TStateName;\n      }\n    : {\n        stateName: TStateName;\n        data: TData;\n      }\n  : never;\ntype AnyState = DefineState<string, unknown>;\n\ntype BuilderState =\n  | DefineState<'initial'>\n  | DefineState<'dirty'>\n  | DefineState<'waiting'>\n  | DefineState<'building', { pending: number; completed: number }>\n  | DefineState<'built', { graph: Graph; latency: number }>\n  | DefineState<'error', { error: Error; latency: number }>;\n\ntype BuilderEvent =\n  | DefineEvent<'build'>\n  | DefineEvent<'change', { uri: Uri }>\n  | DefineEvent<'timer_fired'>\n  | DefineEvent<'build_error', { error: Error; start: number }>\n  | DefineEvent<'build_progress', { pending: number; completed: number }>\n  | DefineEvent<'build_complete', { graph: Graph; start: number }>;\n\nexport class VelcroMonaco {\n  private readonly disposer = new DisposableStore();\n  private readonly fsm: {\n    states: {\n      [TStateName in BuilderState['stateName']]: {\n        onEnter?(ctx: {\n          event: BuilderEvent;\n          state: Extract<BuilderState, { stateName: TStateName }>;\n        }): void;\n        onEvent?: {\n          [TEventName in BuilderEvent['eventName']]?: (ctx: {\n            event: Extract<BuilderEvent, { eventName: TEventName }>;\n            state: Extract<BuilderState, { stateName: TStateName }>;\n          }) => void;\n        };\n        onExit?(ctx: {\n          event: BuilderEvent;\n          state: Extract<BuilderState, { stateName: TStateName }>;\n        }): void;\n      };\n    };\n  } = {\n    states: {\n      initial: {\n        onEvent: {\n          build: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { pending: 0, completed: 0 } }, event),\n          change: ({ event }) => this.transitionTo({ stateName: 'dirty' }, event),\n        },\n      },\n      dirty: {\n        onEnter: ({ event }) => {\n          if (event.eventName === 'change') {\n            // Mark the uri as invalidated so that any source files or dependencies\n            // that relied on that uri are also invalidated.\n            this.graphBuilder.invalidate(event.data.uri);\n\n            // Also invalidate the containing directory in case some resolutions\n            // might have relied on the contents of that directory. We don't need\n            // to walk up the tree though, since only the contents of the immediate\n            // parent might have changed.\n            // const parentUri = Uri.joinPath(event.data.uri, '..');\n            // if (!Uri.equals(event.data.uri, parentUri)) {\n            //   this.graphBuilder.invalidate(Uri.ensureTrailingSlash(parentUri));\n            // }\n          }\n\n          if (this.buildConfig.autoBuild) {\n            this.transitionTo({ stateName: 'waiting' }, event);\n          }\n        },\n        onEvent: {\n          build: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { completed: 0, pending: 0 } }, event),\n        },\n      },\n      waiting: {\n        onEnter: () => {\n          const timerHandle = setTimeout(() => {\n            this.sendEvent('timer_fired');\n          }, this.buildConfig.autoBuildWaitTimeout);\n\n          this.stateDisposer.add({\n            dispose: () => {\n              clearTimeout(timerHandle);\n            },\n          });\n        },\n        onEvent: {\n          build: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { completed: 0, pending: 0 } }, event),\n          change: ({ event }) => this.transitionTo({ stateName: 'dirty' }, event),\n          timer_fired: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { completed: 0, pending: 0 } }, event),\n        },\n      },\n      building: {\n        onEnter: () => {\n          const tokenSource = new CancellationTokenSource();\n          const start = Date.now();\n          const build = this.graphBuilder.build([this.localStrategy.rootUri], {\n            incremental: false,\n            token: tokenSource.token,\n          });\n\n          this.stateDisposer.add({\n            dispose() {\n              tokenSource.dispose(true);\n            },\n          });\n          this.stateDisposer.add(\n            build.onCompleted(({ graph }) => this.sendEvent('build_complete', { graph, start }))\n          );\n          this.stateDisposer.add(\n            build.onProgress(({ progress }) => this.sendEvent('build_progress', progress))\n          );\n          this.stateDisposer.add(\n            build.onError(({ error }) => {\n              return this.sendEvent('build_error', { error, start });\n            })\n          );\n\n          this.graphBuilder.build([this.localStrategy.rootUri], {\n            incremental: false,\n            token: tokenSource.token,\n          });\n        },\n        onEvent: {\n          build_complete: ({ event }) =>\n            this.transitionTo(\n              {\n                stateName: 'built',\n                data: { graph: event.data.graph, latency: Date.now() - event.data.start },\n              },\n              event\n            ),\n          build_error: ({ event }) =>\n            this.transitionTo(\n              {\n                stateName: 'error',\n                data: { error: event.data.error, latency: Date.now() - event.data.start },\n              },\n              event\n            ),\n          build_progress: ({ event }) =>\n            this.transitionTo(\n              {\n                stateName: 'building',\n                data: { completed: event.data.completed, pending: event.data.pending },\n              },\n              event\n            ),\n          change: ({ event }) => this.transitionTo({ stateName: 'dirty' }, event),\n        },\n      },\n      built: {\n        onEvent: {\n          build: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { completed: 0, pending: 0 } }, event),\n          change: ({ event }) => this.transitionTo({ stateName: 'dirty' }, event),\n        },\n      },\n      error: {\n        onEvent: {\n          build: ({ event }) =>\n            this.transitionTo({ stateName: 'building', data: { completed: 0, pending: 0 } }, event),\n          change: ({ event }) => this.transitionTo({ stateName: 'dirty' }, event),\n        },\n      },\n    },\n  };\n\n  private readonly onStateChangeEmitter = new Emitter<Readonly<BuilderState>>();\n\n  private readonly localStrategy = new MemoryStrategy({}, Uri.file('/'));\n  private readonly npmStrategy = CdnStrategy.forJsDelivr(readUrl);\n  private readonly rootStrategy = new CompoundStrategy({\n    strategies: [this.localStrategy, this.npmStrategy],\n  });\n  private readonly resolver: Resolver;\n  private readonly graphBuilder: GraphBuilder;\n\n  private mutableBuildState: BuilderState = { stateName: 'initial' };\n\n  public readonly buildConfig = {\n    autoBuild: false,\n    autoBuildWaitTimeout: 500,\n  };\n\n  private pendingEvents: BuilderEvent[] = [];\n\n  sendEvent<TSentEvent extends EventWithoutData<BuilderEvent>>(\n    event: TSentEvent['eventName']\n  ): void;\n  sendEvent<TSentEvent extends EventWithData<BuilderEvent>>(\n    event: TSentEvent['eventName'],\n    data: TSentEvent['data']\n  ): void;\n  sendEvent<TSentEvent extends BuilderEvent>(\n    eventName: TSentEvent['eventName'],\n    data?: TSentEvent['data']\n  ): void {\n    // console.group();\n    // console.log('sendEvent(%s, %s)', this.state.stateName, eventName, data);\n    this.pendingEvents.push({ eventName, data } as BuilderEvent);\n\n    while (this.pendingEvents.length) {\n      const event = this.pendingEvents.shift()!;\n      const currentStateDef = this.fsm.states[this.mutableBuildState.stateName];\n\n      // console.group();\n      // console.log('sendEvent(%s, %s) handle(%s)', this.state.stateName, eventName, event.eventName);\n\n      if (currentStateDef.onEvent) {\n        const handler = currentStateDef.onEvent[event.eventName];\n        const state = this.state;\n\n        if (handler) {\n          handler({ event, state } as any);\n        }\n      }\n      // console.groupEnd();\n    }\n    // console.groupEnd();\n  }\n\n  private readonly stateDisposer = new DisposableStore();\n\n  transitionTo<TTargetState extends BuilderState, TTriggeringEvent extends BuilderEvent>(\n    state: TTargetState,\n    event: TTriggeringEvent\n  ) {\n    // console.log('transitionTo(%s, %s, %s)', this.state.stateName, state.stateName, event.eventName);\n    // console.group();\n    const nextStateConfig = this.fsm.states[state.stateName];\n    const fromState = { ...this.mutableBuildState };\n\n    this.mutableBuildState = { ...state };\n    this.onStateChangeEmitter.fire(this.state);\n\n    if (state.stateName !== fromState.stateName) {\n      this.stateDisposer.clear();\n\n      if (nextStateConfig.onEnter) {\n        // console.log('onEnter(%s, %s)', this.state.stateName, event.eventName);\n        // console.group();\n        nextStateConfig.onEnter({ event, state } as any);\n        // console.groupEnd();\n      }\n    }\n    // console.groupEnd();\n  }\n\n  constructor(\n    monaco: typeof import('monaco-editor'),\n    options: { autoBuild?: boolean; autoBuildWaitTimeout?: number } = {}\n  ) {\n    if (options.autoBuild) {\n      this.buildConfig.autoBuild = options.autoBuild;\n    }\n    if (options.autoBuildWaitTimeout) {\n      this.buildConfig.autoBuildWaitTimeout = options.autoBuildWaitTimeout;\n    }\n\n    this.resolver = new Resolver(this.rootStrategy, {\n      debug: false,\n      extensions: ['.js', '.jsx', '.json', '.ts', '.tsx', '.mjs', '.cjs'],\n      packageMain: ['browser', 'main'],\n    });\n    this.graphBuilder = new GraphBuilder({\n      resolver: this.resolver,\n      nodeEnv: 'development',\n      plugins: [cssPlugin(), sucrasePlugin({ transforms: ['imports', 'jsx', 'typescript'] })],\n    });\n\n    this.disposer.add(this.resolver);\n    // this.disposer.add(this.graphBuilder);\n\n    // Track existing models\n    for (const model of monaco.editor.getModels()) {\n      if (!Uri.isPrefixOf(this.localStrategy.rootUri, model.uri)) {\n        continue;\n      }\n\n      this.trackModel(model);\n    }\n\n    // And future models\n    monaco.editor.onDidCreateModel((model) => {\n      if (!Uri.isPrefixOf(this.localStrategy.rootUri, model.uri)) {\n        return;\n      }\n\n      this.trackModel(model);\n    });\n  }\n\n  get onStateChange(): Event<Readonly<BuilderState>> {\n    return this.onStateChangeEmitter.event;\n  }\n\n  get state(): Readonly<BuilderState> {\n    return this.mutableBuildState;\n  }\n\n  dispose() {\n    this.disposer.dispose();\n  }\n\n  startBuild() {\n    this.sendEvent('build');\n  }\n\n  private handleChange(uri: Uri) {\n    this.sendEvent('change', { uri });\n  }\n\n  private trackModel(model: Monaco.editor.ITextModel) {\n    model.onWillDispose(() => {\n      this.localStrategy.removeFile(model.uri.fsPath);\n      this.handleChange(Uri.from(model.uri));\n      disposerReference.dispose();\n    });\n\n    this.localStrategy.addFile(model.uri.fsPath, model.getValue());\n\n    const disposerReference = this.disposer.add(\n      model.onDidChangeContent(() => {\n        this.localStrategy.addFile(model.uri.fsPath, model.getValue(), {\n          overwrite: true,\n        });\n        this.handleChange(Uri.from(model.uri));\n      })\n    );\n\n    this.handleChange(Uri.from(model.uri));\n  }\n}\n","import styled from '@emotion/styled/macro';\nimport { Uri } from '@velcro/common';\nimport * as Monaco from 'monaco-editor';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { EditorManagerContext } from '../lib/EditorManager';\nimport { VelcroMonaco } from '../velcro';\n\nexport interface DeferredExecutionModuleRecord {\n  code: string;\n  dependencies: Record<string, string>;\n}\n\nexport interface DeferredExecutionManifest {\n  aliases: Record<string, string>;\n  entrypoints: Record<string, string>;\n  modules: Record<string, DeferredExecutionModuleRecord>;\n}\n\ninterface MessageLine {\n  isInternal: boolean;\n  text: string;\n}\ninterface Message {\n  lines: MessageLine[];\n}\n\nconst PreviewProgress = styled.div<{ completed: number; total: number }>`\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  width: ${(props) => (props.total ? `${Math.round((100 * props.completed) / props.total)}%` : 0)};\n  left: 0;\n  height: ${(props) => (props.total ? '2px' : '0')};\n  background-color: #008cba;\n  transition: width 0.5s 0s cubic-bezier(0.455, 0.03, 0.515, 0.955);\n`;\nconst PreviewIframeWrap = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  & > iframe {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border: none;\n    width: 100%;\n    height: 100%;\n  }\n`;\nconst PreviewWrap = styled.div`\n  position: relative;\n  background: white;\n\n  ${PreviewIframeWrap} {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n`;\nconst PreviewMessageError = styled.ul`\n  margin: 0;\n  padding: 1em 2em;\n  font-family: monospace;\n  font-size: 16px;\n  background-color: rgba(255, 0, 0, 0.5);\n  backdrop-filter: brightness(50%);\n  color: white;\n  list-style: none;\n`;\nconst PreviewMessageErrorText = styled.li<{ isInternal: boolean }>`\n  white-space: pre-wrap;\n  opacity: ${(props) => (props.isInternal ? 0.7 : 1.0)};\n`;\nconst PreviewMessages = styled.div`\n  z-index: 1;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column-reverse;\n`;\nconst PreviewMessageLine: React.FC<{ line: MessageLine }> = ({ line }) => {\n  return (\n    <PreviewMessageErrorText isInternal={line.isInternal}>{line.text}</PreviewMessageErrorText>\n  );\n};\nconst PreviewMessage: React.FC<{ message: Message }> = ({ message }) => {\n  return message.lines.length ? (\n    <PreviewMessageError>\n      {message.lines.map((line, i) => (\n        <PreviewMessageLine key={i} line={line}></PreviewMessageLine>\n      ))}\n    </PreviewMessageError>\n  ) : null;\n};\n\nconst Preview: React.FC<{ className?: string }> = (props) => {\n  const editorManager = useContext(EditorManagerContext);\n  const previewWrapRef = useRef<HTMLDivElement | null>(null);\n  const previewIframeRef = useRef<HTMLIFrameElement | null>(null);\n  const [buildState, setBuildState] = useState<VelcroMonaco['state']>({ stateName: 'initial' });\n  const [messages, setMessages] = useState([] as Message[]);\n  const [buildProgress, setBuildProgress] = useState({ completed: 0, total: 0 });\n\n  useEffect(() => {\n    const onMessage = (e: MessageEvent) => {\n      if (\n        previewIframeRef.current &&\n        previewIframeRef.current.contentWindow === e.source &&\n        e.data.event === 'click_error'\n      ) {\n        console.log(e);\n        editorManager.focusPath(Uri.parse(e.data.entry.file).fsPath, {\n          columnNumber: e.data.entry.column,\n          lineNumber: e.data.entry.line,\n        });\n      }\n    };\n\n    window.addEventListener('message', onMessage);\n\n    return () => window.removeEventListener('message', onMessage);\n  });\n\n  useEffect(() => {\n    const velcro = new VelcroMonaco(Monaco, {\n      autoBuild: true,\n      autoBuildWaitTimeout: 500,\n    });\n\n    velcro.onStateChange((state) => {\n      setBuildState(state);\n\n      switch (state.stateName) {\n        case 'building': {\n          setBuildProgress({\n            completed: state.data.completed,\n            total: state.data.completed + state.data.pending,\n          });\n          break;\n        }\n        case 'built': {\n          const graph = state.data.graph;\n          const [chunk] = graph.splitChunks();\n          const build = chunk.buildForStaticRuntime({\n            injectRuntime: true,\n          });\n          const codeWithStart = `${build.code}\\n\\n${[Uri.file('/index.jsx')]\n            .map(\n              (entrypoint) => `Velcro.runtime.require(${JSON.stringify(entrypoint.toString())});`\n            )\n            .join('\\n')}\\n`;\n          const runtimeCode = `${codeWithStart}\\n//# sourceMappingURL=${build.sourceMapDataUri}`;\n          const codeBundleFile = new File([runtimeCode], Uri.file('/index.jsx').toString(), {\n            type: 'text/javascript',\n          });\n\n          const markup = new File(\n            [\n              `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <script src=\"https://cdn.jsdelivr.net/npm/panic-overlay/build/panic-overlay.browser.js\"></script>\n    <title>Document</title>\n    </head>\n    <body>\n    <div id=\"root\"></div>\n    <script src=\"${URL.createObjectURL(codeBundleFile)}\"></script>\n    <script>\n      panic.configure ({\n        stackEntryClicked (entry) {\n          if (window.parent) {\n            window.parent.postMessage({\n              event: 'click_error',\n              entry: {\n                column: entry.column,\n                file: entry.file,\n                line: entry.line,\n              }\n            });\n          }\n        }\n      })\n    </script>\n    </body>\n    </html>`,\n            ],\n            Uri.file('/index.html').toString(),\n            {\n              type: 'text/html',\n            }\n          );\n          const htmlUrl = URL.createObjectURL(markup);\n          const iframe = document.createElement('iframe');\n          iframe.style.display = 'none';\n          iframe.src = htmlUrl;\n\n          if (previewWrapRef.current) {\n            previewWrapRef.current.appendChild(iframe);\n          }\n\n          const onLoad = () => {\n            iframe.removeEventListener('error', onError);\n            iframe.style.display = '';\n\n            if (previewIframeRef.current) {\n              previewIframeRef.current.remove();\n            }\n\n            previewIframeRef.current = iframe;\n          };\n          const onError = () => {\n            iframe.removeEventListener('load', onLoad);\n            iframe.remove();\n          };\n\n          iframe.addEventListener('load', onLoad, { once: true });\n          iframe.addEventListener('error', onError, { once: true });\n\n          break;\n        }\n        case 'error': {\n          setMessages([{ lines: [{ isInternal: true, text: state.data.error.message }] }]);\n          break;\n        }\n      }\n    });\n\n    return () => velcro.dispose();\n  }, [setBuildProgress, setBuildState]);\n\n  return (\n    <PreviewWrap className={props.className}>\n      {buildState.stateName === 'building' ? (\n        <PreviewProgress\n          completed={buildProgress.completed}\n          total={buildProgress.total}\n        ></PreviewProgress>\n      ) : null}\n      <PreviewIframeWrap ref={previewWrapRef}></PreviewIframeWrap>\n      <PreviewMessages>\n        {buildState.stateName === 'error' ? (\n          <PreviewMessage\n            message={{ lines: [{ isInternal: true, text: buildState.data.error.message }] }}\n          ></PreviewMessage>\n        ) : null}\n      </PreviewMessages>\n    </PreviewWrap>\n  );\n};\n\nexport default styled(Preview)``;\n","import { DisposableStore } from '@velcro/common';\nimport * as Monaco from 'monaco-editor';\nimport { useEffect, useState } from 'react';\n\n// import { EditorContext } from './context';\n\nexport enum EntryKind {\n  Directory = 'directory',\n  File = 'file',\n}\n\nexport interface IDirectory {\n  type: EntryKind.Directory;\n  uri: Monaco.Uri;\n}\nexport interface IFile {\n  type: EntryKind.File;\n  uri: Monaco.Uri;\n  model: Monaco.editor.ITextModel;\n}\n\nexport type DirectoryEntry = IDirectory | IFile;\n\nexport function useDirectory(uri: Monaco.Uri) {\n  // Make sure the URI always ends with a trailing slash\n  const prefix = uri.toString(true).replace(/\\/?$/, '/');\n  const sortEntries = (models: DirectoryEntry[]) => {\n    return [...models].sort((a, b) => (a.uri.fsPath > b.uri.fsPath ? 1 : -1));\n  };\n\n  const initialEntries = sortEntries(\n    Monaco.editor.getModels().reduce((entries, model) => {\n      const modelUri = model.uri.toString(true);\n\n      if (modelUri.startsWith(prefix)) {\n        const nestedPath = modelUri.slice(prefix.length);\n        const nextDirIdx = nestedPath.indexOf('/');\n\n        if (nextDirIdx === 0) {\n          throw new Error('Invariant error: WAT?');\n        }\n\n        if (nextDirIdx > 0) {\n          // This is an intermediate directory\n          const uri = Monaco.Uri.parse(`${prefix}${nestedPath.slice(0, nextDirIdx + 1)}`);\n\n          entries.push({\n            type: EntryKind.Directory,\n            uri,\n          });\n        } else {\n          entries.push({\n            type: EntryKind.File,\n            uri: model.uri,\n            model,\n          });\n        }\n      }\n\n      return entries;\n    }, [] as DirectoryEntry[])\n  );\n  const [entries, setEntries] = useState(initialEntries);\n\n  useEffect(() => {\n    const disposable = new DisposableStore();\n    const prefix = uri.toString(true).replace(/\\/?$/, '/');\n\n    disposable.add(\n      Monaco.editor.onDidCreateModel((model: Monaco.editor.ITextModel) => {\n        const modelUri = model.uri.toString(true);\n\n        if (modelUri.startsWith(prefix)) {\n          const nestedPath = modelUri.slice(prefix.length);\n          const nextDirIdx = nestedPath.indexOf('/');\n\n          if (nextDirIdx === 0) {\n            throw new Error('Invariant error: WAT?');\n          }\n\n          if (nextDirIdx > 0) {\n            // This is an intermediate directory\n            const uri = Monaco.Uri.parse(`${prefix}${nestedPath.slice(0, nextDirIdx)}`);\n\n            // It is possible that we already have this directory\n            const entry = entries.find((entry) => entry.uri.toString(true) === uri.toString(true));\n\n            if (entry) {\n              if (entry.type !== EntryKind.Directory) {\n                throw new Error(\n                  `Invariant violation: A file in '${prefix}' conflicts with the path of the new file '${modelUri}'`\n                );\n              }\n\n              return;\n            }\n\n            entries.push({ type: EntryKind.Directory, uri });\n\n            return setEntries(sortEntries(entries));\n          }\n\n          if (\n            !entries.find(\n              (entry) =>\n                entry.type === EntryKind.File &&\n                entry.uri.toString(true) === model.uri.toString(true)\n            )\n          ) {\n            entries.push({ type: EntryKind.File, uri: model.uri, model });\n\n            setEntries(sortEntries(entries));\n          }\n        }\n      })\n    );\n\n    disposable.add(\n      Monaco.editor.onWillDisposeModel((model) => {\n        const idx = entries.findIndex(\n          (entry) => entry.type === EntryKind.File && entry.model === model\n        );\n\n        if (idx === -1) {\n          throw new Error(\n            `Invariant violation: Removing an untracked model: '${model.uri.fsPath}'`\n          );\n        }\n\n        entries.splice(idx, 1);\n\n        setEntries(sortEntries(entries));\n      })\n    );\n\n    return () => disposable.dispose();\n  }, [entries, uri]);\n\n  return entries;\n}\n","import styled from '@emotion/styled/macro';\nimport * as Monaco from 'monaco-editor';\nimport React, { useContext, useRef } from 'react';\nimport { Button } from 'reakit/Button';\nimport { Tooltip, TooltipReference, useTooltipState } from 'reakit/Tooltip';\nimport { useDirectory, EntryKind } from '../lib/hooks';\nimport { useActiveModel, EditorManagerContext } from '../lib/EditorManager';\n\nconst Entry = styled.div<{ modelFocused: boolean }>`\n  background-color: ${props => (props.modelFocused ? '#008cba' : 'inherit')};\n  text-decoration: none;\n  color: ${props => (props.modelFocused ? '#fff' : '#262626')};\n\n  height: 25px;\n  padding: 0 0 0 8px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    flex: 1;\n  }\n\n  & > button {\n    display: none;\n  }\n\n  &:hover > button {\n    display: block;\n  }\n\n  ${props =>\n    props.modelFocused\n      ? {\n          ':hover': {\n            color: '#f5f5f5',\n            cursor: 'pointer',\n          },\n        }\n      : {\n          ':hover': {\n            backgroundColor: '#eee',\n            color: '#262626',\n            cursor: 'pointer',\n          },\n        }}\n`;\n\nconst CreateEntry = styled.div`\n  text-decoration: none;\n  color: '#262626';\n\n  height: 25px;\n  padding: 0 0 0 8px;\n  display: flex;\n  align-items: center;\n\n  :hover {\n    background-color: #eee;\n    cursor: pointer;\n  }\n`;\n\nconst SidebarFileDelete = styled(Button)`\n  border: none;\n  background: none;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledTooltip = styled.div`\n  font-family: Open Sans, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.4;\n  background-color: #333;\n  color: #fff;\n  border-radius: 4px;\n  opacity: 0.9;\n  padding: 0.2em 0.4em;\n`;\n\nconst SidebarFile: React.FC<{ className?: string; model: Monaco.editor.ITextModel }> = ({ className, model }) => {\n  const activeModel = useActiveModel();\n  const editorManager = useContext(EditorManagerContext);\n  const tooltip = useTooltipState({ gutter: 0 });\n\n  const onClickDelete = () => {\n    model.dispose();\n  };\n\n  return (\n    <Entry className={className} modelFocused={model === activeModel}>\n      <span onClick={() => editorManager.focusModel(model)}>{model.uri.fsPath.slice(1)}</span>\n      <TooltipReference {...tooltip} as={SidebarFileDelete} onClick={() => onClickDelete()}>\n        <span role=\"img\" aria-label=\"Delete file\">\n          ❌\n        </span>\n      </TooltipReference>\n      <Tooltip {...tooltip} as={StyledTooltip}>\n        Delete file\n      </Tooltip>\n    </Entry>\n  );\n};\n\nconst Sidebar: React.FC<{ className?: string }> = props => {\n  const rootDir = useRef(Monaco.Uri.file('/'));\n  const entries = useDirectory(rootDir.current);\n  const editorManager = useContext(EditorManagerContext);\n\n  const onClickCreate = () => {\n    const filename = prompt('Filename?');\n\n    if (filename) {\n      editorManager.createModel(filename);\n    }\n  };\n\n  return (\n    <div className={props.className}>\n      {entries.map(entry =>\n        entry.type === EntryKind.Directory ? (\n          <div>{entry.uri.fsPath.slice(1)}</div>\n        ) : (\n          <SidebarFile key={entry.uri.toString(true)} model={entry.model}></SidebarFile>\n        )\n      )}\n      <CreateEntry onClick={() => onClickCreate()}>Create...</CreateEntry>\n    </div>\n  );\n};\n\nexport default styled(Sidebar)`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from '@emotion/styled/macro';\nimport React from 'react';\n\nimport Editor from './Editor';\nimport Preview from './Preview';\nimport Sidebar from './Sidebar';\nimport { EditorManager, EditorManagerContext } from '../lib/EditorManager';\n\nconst PlaygroundCmp: React.FC<{\n  className?: string;\n  initialPath: string;\n  project: Record<string, string>;\n}> = ({ className, initialPath, project }) => {\n  const editorManager = new EditorManager({ files: project, initialPath: initialPath });\n\n  return (\n    <div className={className}>\n      <EditorManagerContext.Provider value={editorManager}>\n        <Sidebar></Sidebar>\n        <Editor></Editor>\n        <Preview></Preview>\n      </EditorManagerContext.Provider>\n    </div>\n  );\n};\n\nexport const Playground = styled(PlaygroundCmp)`\n  display: flex;\n  flex-direction: row;\n\n  font-family: Open Sans, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.4;\n\n  color: #222;\n\n  ${Sidebar} {\n    flex: 1 1 100px;\n    min-width: 100px;\n    max-width: 400px;\n    border-right: 1px solid #ccc;\n  }\n\n  ${Editor} {\n    border-right: 1px solid #ccc;\n  }\n\n  ${Editor}, ${Preview} {\n    flex: 10;\n  }\n`;\n","export const files: Record<string, string> = {\n  'package.json':\n    JSON.stringify(\n      {\n        name: 'react-template',\n        version: '0.0.0',\n        dependencies: {\n          'github-markdown-css': '^3.0.1',\n          react: '^16.9.0',\n          'react-dom': '^16.9.0',\n        },\n      },\n      null,\n      2\n    ) + '\\n',\n  'app.jsx': `\nimport React, { Component } from 'react';\nimport 'github-markdown-css';\n\nimport { Explanation } from './explanation';\nimport { name } from './name';\nimport './style.css';\n\nclass Hello extends Component {\n  render() {\n    return <div className=\"markdown-body\">\n      <h1>Hello {name}</h1>\n      <blockquote>There is no <del>spoon</del> server</blockquote>\n      <Explanation/>\n    </div>;\n  }\n}\n\nexport default Hello\n  `.trim(),\n  'explanation.jsx':\n    `\nimport React from 'react';\n\nexport const Explanation = () => <>\n  <section>\n    <h2>What is this?</h2>\n    <p>\n      This is a demo of bundling and serving a browser-based sandbox fully from the browser. <strong>There are <em>no</em> servers involved</strong> except the static server hosting this demo and <a href=\"https://unpkg.com\" target=\"_blank\" rel=\"noopener\">unpkg.com</a>. All module resolution, transpilation and bundling is happening in the browser.\n    </p>\n    <p>\n      Try it. Go offline, and reload...\n    </p>\n    <p>\n      <strong>I dare you.</strong>\n    </p>\n  </section>\n  <section>\n    <h2>Features</h2>\n    <ul>\n      <li>Full offline support. Once your cache is seeded, you can cut the cord.</li>\n      <li>Fully browser-based bundling.</li>\n      <li>Add (almost) any node module and no server is involved.</li>\n      <li>If you want to add another module, make sure to add it to <code>package.json</code> first.</li>\n      <li>Automatic type acquisition for full typings support in the browser, in JavaScript!</li>\n      <li>Resolve source locations in stack traces</li>\n      <li>Hot module reloading</li>\n    </ul>\n  </section>\n</>;\n    `.trim() + '\\n',\n  'index.jsx':\n    `\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n  \nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n      `.trim() + '\\n',\n  'name.js':\n    `\nexport const name = 'Velcro';\n    `.trim() + '\\n',\n  'style.css':\n    `\n.markdown-body {\n  box-sizing: border-box;\n  min-width: 200px;\n  max-width: 980px;\n  margin: 0 auto;\n  padding: 45px;\n}\n\n@media (max-width: 767px) {\n  .markdown-body {\n    padding: 15px;\n  }\n}\n    `.trim() + '\\n',\n};\n","import React from 'react';\n\n// import * as serviceWorker from './serviceWorker';\n\ninterface ServiceWorkerEvent extends Event {\n  target: (Partial<ServiceWorker> & EventTarget) | null;\n}\n\ninterface ServiceWorkerContextValue {\n  assetsUpdateReady: boolean;\n  assetsCached: boolean;\n  updateAssets(): void;\n}\n\nconst ServiceWorkerContext = React.createContext<ServiceWorkerContextValue | undefined>(undefined);\n\nexport function ServiceWorkerProvider(props: React.PropsWithChildren<{}>) {\n  const [waitingServiceWorker, setWaitingServiceWorker] = React.useState<ServiceWorker | null>(\n    null\n  );\n  const [assetsUpdateReady, setAssetsUpdateReady] = React.useState(false);\n  const [assetsCached, setAssetsCached] = React.useState(false);\n\n  const value = React.useMemo(() => {\n    return {\n      assetsUpdateReady,\n      assetsCached,\n      // Call when the user confirm update of application and reload page\n      updateAssets: () => {\n        if (waitingServiceWorker) {\n          waitingServiceWorker.addEventListener('statechange', (event: ServiceWorkerEvent) => {\n            if (event.target && event.target.state === 'activated') {\n              window.location.reload();\n            }\n          });\n\n          waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\n        }\n      },\n    };\n  }, [assetsUpdateReady, assetsCached, waitingServiceWorker]);\n\n  // Once on component mounted subscribe to Update and Succes events in\n  // CRA's service worker wrapper\n  // React.useEffect(() => {\n  //   serviceWorker.register({\n  //     onUpdate: (registration) => {\n  //       setWaitingServiceWorker(registration.waiting);\n  //     },\n  //     onUpdateAvailable: () => {\n  //       setAssetsUpdateReady(true);\n  //     },\n  //     onSuccess: (registration) => {\n  //       setAssetsCached(true);\n  //       setAssetsUpdateReady(false);\n\n  //       if (registration.active) {\n  //         registration.active.addEventListener('statechange', (event: ServiceWorkerEvent) => {\n  //           if (!navigator.serviceWorker.controller) {\n  //             setAssetsCached(false);\n  //           }\n  //         });\n  //       }\n  //     },\n  //   });\n  // }, []);\n\n  return <ServiceWorkerContext.Provider value={value} {...props} />;\n}\n\nexport function useServiceWorker() {\n  const context = React.useContext(ServiceWorkerContext);\n\n  if (!context) {\n    throw new Error('useServiceWorker must be used within a ServiceWorkerProvider');\n  }\n\n  return context;\n}\n","//@ts-nocheck\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled/macro';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { OfflineBolt, Update } from '@material-ui/icons';\nimport React from 'react';\nimport { Tooltip, TooltipReference, useTooltipState } from 'reakit/Tooltip';\n\nimport { Playground } from './playground';\nimport { files } from './templates/react';\nimport { useServiceWorker, ServiceWorkerProvider } from './useServiceWorker';\nimport { Button } from 'reakit/Button';\n\nconst PlaygroundWrapper = styled.div`\n  background: white;\n  color: #666;\n  display: flex;\n  flex-direction: column;\n\n  ${Playground} {\n    border-bottom: 1px solid #ccc;\n    flex: 1;\n  }\n`;\n\nconst StatusBarItem = styled.span`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ReloadButton = styled(Button)`\n  border: 0;\n  background: #008cba;\n  margin: 0 0.5em;\n  color: white;\n  border-radius: 2px;\n  font-weight: 600;\n\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledTooltip = styled.div`\n  font-family: Open Sans, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.4;\n  background-color: #333;\n  color: #fff;\n  border-radius: 4px;\n  opacity: 0.9;\n  padding: 0.2em 0.4em;\n`;\n\nconst StatusBar: React.FC = () => {\n  const serviceWorker = useServiceWorker();\n  const offlineTooltip = useTooltipState({ gutter: 0 });\n  const reloadTooltip = useTooltipState({ gutter: 0 });\n\n  return (\n    <StatusBarStyles>\n      {serviceWorker.assetsCached ? (\n        <TooltipReference {...offlineTooltip} as={StatusBarItem}>\n          <OfflineBolt color=\"inherit\" fontSize=\"small\" />\n          &nbsp;Offline ready\n        </TooltipReference>\n      ) : null}\n      <Tooltip {...offlineTooltip} as={StyledTooltip}>\n        This application has been fully cached and can now be used offline.\n      </Tooltip>\n\n      {serviceWorker.assetsUpdateReady ? (\n        <TooltipReference {...reloadTooltip} as={StatusBarItem}>\n          <Update color=\"inherit\" fontSize=\"small\" />\n          &nbsp;Update ready:\n          <ReloadButton onClick={() => serviceWorker.updateAssets()}>Reload</ReloadButton>\n        </TooltipReference>\n      ) : null}\n      <Tooltip {...reloadTooltip} as={StyledTooltip}>\n        There is an update of this application ready to install. Click install reload to install the\n        update and reload the page.\n      </Tooltip>\n    </StatusBarStyles>\n  );\n};\n\nconst StatusBarStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  font-size: 90%;\n\n  height: 24px;\n  padding: 0 0.5em;\n\n  ${StatusBarItem} {\n    margin-left: 0.5em;\n    margin-right: 0.5em;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  min-width: 200px;\n  max-width: 80vw;\n  margin: 0 auto;\n  padding: 0 0 45px 0;\n\n  @media (max-width: 960px) {\n    padding: 0 15px 15px 15px;\n    max-width: initial;\n  }\n\n  display: flex;\n  flex-direction: column;\n\n  ${PlaygroundWrapper} {\n    flex: 1;\n    background: #f5f5f5;\n    border-radius: 2px;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n\n    ${StatusBarStyles} {\n    }\n  }\n`;\n\nconst Title = styled.div`\n  font-family: 'Raleway', sans-serif;\n  font-size: 250%;\n  font-weight: 800;\n  font-variant: small-caps;\n  font-variant-caps: small-caps;\n  color: #00bfff;\n`;\n\nconst Subtitle = styled.div`\n  color: #ddd;\n  font-size: 120%;\n  font-weight: 400;\n`;\n\nconst Link = styled.a`\n  color: white;\n  text-decoration: none;\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Links = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  & > *:not(:last-child):after {\n    padding: 0 0.5em;\n    content: '｜';\n    color: #aaa;\n    text-decoration: none;\n  }\n\n  ${Link} {\n    color: #ccc;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  padding: 0.8em 0 0.3em 0;\n  text-shadow: #000 1px 1px 5px;\n\n  ${Title} {\n    margin-right: 0.5em;\n  }\n\n  ${Subtitle} {\n    margin-right: 0.5em;\n  }\n\n  ${Links} {\n    flex: 1;\n    justify-content: flex-end;\n  }\n`;\n\nconst globalCss = css`\n  @import url('https://fonts.googleapis.com/css?family=Raleway:900&display=swap');\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n\n    font-family: Open Sans, Helvetica Neue, Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    line-height: 1.4;\n\n    background: #333;\n    color: #fff;\n\n    display: flex;\n    flex-direction: column;\n\n    #root {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n\n      ${AppWrapper} {\n        flex: 1;\n      }\n    }\n  }\n`;\n\nexport const App: React.FC = () => {\n  return (\n    <ServiceWorkerProvider>\n      <CssBaseline />\n      <AppWrapper>\n        <Global styles={globalCss}></Global>\n        <Header>\n          <Title>Velcro</Title>\n          <Subtitle>The client-side bundler and playground</Subtitle>\n          <Links>\n            <div>\n              <Link href=\"https://twitter.com/filearts\" target=\"_blank\" rel=\"nofollow noreferrer\">\n                @filearts\n              </Link>\n            </div>\n            <div>\n              <Link\n                href=\"https://github.com/ggoodman/velcro\"\n                target=\"_blank\"\n                rel=\"nofollow noreferrer\"\n              >\n                View on GitHub\n              </Link>\n            </div>\n          </Links>\n        </Header>\n        <PlaygroundWrapper>\n          <Playground project={files} initialPath=\"index.jsx\"></Playground>\n        </PlaygroundWrapper>\n      </AppWrapper>\n    </ServiceWorkerProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.unregister();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import { CancellationTokenSource, MapSet, Decoder, Uri, isThenable, all, checkCancellation, dirname, DependencyNotFoundError, EntryExcludedError, parseBufferAsPartialPackageJson, basename, EntryNotFoundError, parseBufferAsPackageJson, CanceledError } from '@velcro/common';\n\nconst SPEC_RX = /^((@[^/]+\\/[^/@]+|[^./@][^/@]*)(?:@([^/]+))?)(.*)?$/;\nfunction parseBareModuleSpec(bareModuleSpec) {\n    const matches = bareModuleSpec.match(SPEC_RX);\n    if (matches) {\n        const [, nameSpec, name, spec, path = ''] = matches;\n        return {\n            nameSpec,\n            name,\n            spec,\n            path,\n        };\n    }\n    return null;\n}\n\nvar version = \"0.45.0\";\n\nconst NODE_CORE_SHIMS = Object.assign(Object.create(null), {\n    string_decoder: parseBareModuleSpec('string_decoder@1.2.0'),\n    punycode: parseBareModuleSpec('punycode@2.1.1'),\n});\nfor (const name of [\n    'assert',\n    'buffer',\n    'constants',\n    'crypto',\n    'events',\n    'fs',\n    'http',\n    'https',\n    'net',\n    'os',\n    'path',\n    'process',\n    'querystring',\n    'stream',\n    'tls',\n    'url',\n    'util',\n    'vm',\n    'zlib',\n]) {\n    NODE_CORE_SHIMS[name] = parseBareModuleSpec(`@velcro/node-libs@${version}/lib/${name}.js`);\n}\n\nvar ResolverStrategy;\n(function (ResolverStrategy) {\n    let EntryKind;\n    (function (EntryKind) {\n        EntryKind[\"File\"] = \"file\";\n        EntryKind[\"Directory\"] = \"directory\";\n    })(EntryKind = ResolverStrategy.EntryKind || (ResolverStrategy.EntryKind = {}));\n})(ResolverStrategy || (ResolverStrategy = {}));\nclass AbstractResolverStrategy {\n    getCanonicalUrl(_ctx, uri) {\n        return {\n            uri,\n        };\n    }\n    getSettings(ctx, _uri) {\n        return {\n            settings: ctx.settings,\n        };\n    }\n    /**\n     * Create a new ResolverStrategy having one or more methods overridden.\n     *\n     * You might use this if you want to override specific behaviour of another strategy without\n     * wanting to re-implement the whole strategy.\n     *\n     * If you need to invoke an overridden method, the overridden strategy will be available\n     * on `this.parent`.\n     *\n     * @param overrides A map of ResolverStrategy methods that you would like to override\n     */\n    withOverrides(overrides) {\n        const strategy = { ...overrides, parent: this };\n        return Object.setPrototypeOf(Object.assign(Object.create(null), strategy), this);\n    }\n}\nclass AbstractResolverStrategyWithRoot extends AbstractResolverStrategy {\n    constructor(rootUri) {\n        super();\n        this.rootUri = rootUri;\n    }\n}\n\n// type UncachedReturnType<T> = { [K in keyof T] : K extends typeof CACHE ? never : T[K] };\n// type UncachedReturn<\n//   T extends (...any: any[]) => any,\n//   TReturn = ReturnType<T>\n// > = TReturn extends Thenable<infer U>\n//   ? Thenable<UncachedReturnType<U>>\n//   : UncachedReturnType<TReturn>;\nconst CACHE = Symbol('Context.cache');\nclass Visits {\n    constructor(uri, parent) {\n        this.uri = uri;\n        this.visits = [];\n        this.parent = parent;\n    }\n    child(uri) {\n        return new Visits(uri, this);\n    }\n    push(visit) {\n        if (!this.visits.find((cmp) => cmp.type == visit.type && Uri.equals(cmp.uri, visit.uri))) {\n            this.visits.push(visit);\n            if (this.parent) {\n                this.parent.push(visit);\n            }\n        }\n    }\n    toArray() {\n        return this.parent ? this.parent.toArray() : this.visits.slice();\n    }\n}\nclass ResolverContext {\n    constructor(options) {\n        this.mapResultWithVisits = (result) => Object.assign(result, { visited: this.visits.toArray() });\n        this.cache = options.cache;\n        this.cacheInvalidations = options.cacheInvalidations;\n        this.debugMode = options.debug;\n        this.decoder = options.decoder;\n        this.path = options.path;\n        this.resolver = options.resolver;\n        this.settings = options.settings;\n        this.strategy = options.strategy;\n        this.tokenSource = new CancellationTokenSource(options.token);\n        this.visits = options.visits;\n    }\n    static create(resolver, strategy, settings, token, options = {}) {\n        return new ResolverContext({\n            cache: new Map(),\n            cacheInvalidations: new MapSet(),\n            debug: !!options.debug,\n            decoder: new Decoder(),\n            path: [],\n            resolver,\n            settings,\n            strategy,\n            token,\n            visits: new Visits(Uri.parse('velcro:/root')),\n        });\n    }\n    get token() {\n        return this.tokenSource.token;\n    }\n    get visited() {\n        return this.visits.toArray();\n    }\n    dispose() {\n        this.tokenSource.dispose(true);\n    }\n    forOperation(operationName, uri, options = {}) {\n        const encodedOperation = encodePathNode(operationName, uri);\n        if (this.path.includes(encodedOperation)) {\n            const formattedPath = this.path\n                .map((segment) => {\n                const { operationName, uri } = decodePathNode(segment);\n                return `${operationName}(${uri.toString()})`;\n            })\n                .join(' -> ');\n            throw this._wrapError(new Error(`Detected a recursive call to the operation '${operationName}' for '${uri.toString()}' at path '${formattedPath}'`));\n        }\n        return new ResolverContext({\n            cache: this.cache,\n            cacheInvalidations: this.cacheInvalidations,\n            debug: this.debugMode,\n            decoder: this.decoder,\n            path: options.resetPath ? [] : this.path.concat(encodedOperation),\n            resolver: this.resolver,\n            settings: this.settings,\n            strategy: this.strategy,\n            token: this.tokenSource.token,\n            visits: options.resetVisits ? new Visits(uri) : this.visits.child(uri),\n        });\n    }\n    getCanonicalUrl(uri) {\n        const method = this.strategy.getCanonicalUrl;\n        const receiver = this.strategy;\n        const operationName = 'Strategy.getCanonicalUrl';\n        const href = uri.toString();\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    getResolveRoot(uri) {\n        const method = this.strategy.getResolveRoot;\n        const receiver = this.strategy;\n        const operationName = 'Strategy.getResolveRoot';\n        const href = uri.toString();\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    getSettings(uri) {\n        const method = this.strategy.getSettings;\n        const receiver = this.strategy;\n        const operationName = 'Strategy.getSettings';\n        const href = uri.toString();\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    getUrlForBareModule(name, spec, path) {\n        const method = this.strategy.getUrlForBareModule;\n        if (!method) {\n            return Promise.reject(new Error(`Unable to resolve bare module spec '${name}@${spec}${path}' because no strategy was found that supports resolving bare modules`));\n        }\n        const receiver = this.strategy;\n        const operationName = 'Strategy.getUrlForBareModule';\n        const href = `${name}@${spec}${path}`;\n        return this.runInChildContext(operationName, href, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, name, spec, path));\n    }\n    invalidate(uri) {\n        const href = uri.toString();\n        const invalidations = this.cacheInvalidations.get(href);\n        let invalidated = false;\n        if (invalidations) {\n            for (const { cacheKey, operationCache } of invalidations) {\n                invalidated = operationCache.delete(cacheKey) || invalidated;\n            }\n        }\n        this.cacheInvalidations.deleteAll(href);\n        return invalidated;\n    }\n    listEntries(uri) {\n        const method = this.strategy.listEntries;\n        const receiver = this.strategy;\n        const operationName = 'Strategy.listEntries';\n        const href = uri.toString();\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    readFileContent(uri) {\n        const method = this.strategy.readFileContent;\n        const receiver = this.strategy;\n        const operationName = 'Strategy.readFileContent';\n        const href = uri.toString();\n        this.recordVisit(uri, ResolverContext.VisitKind.File);\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    readParentPackageJson(uri) {\n        return this.runWithCache('readParentPackageJson', uri.toString(), readParentPackageJson, null, this, uri);\n    }\n    recordVisit(uri, type = ResolverContext.VisitKind.File) {\n        this.visits.push({ type, uri });\n    }\n    resolve(spec, fromUri) {\n        const method = resolveDependency;\n        const receiver = null;\n        const operationName = 'resolve';\n        const href = `${fromUri}|${spec}`;\n        return this.runInChildContext(operationName, href, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, fromUri, spec));\n    }\n    resolveUri(uri) {\n        const method = resolve;\n        const receiver = null;\n        const operationName = 'resolveUri';\n        const href = uri.toString();\n        return this.runInChildContext(operationName, uri, (ctx) => ctx.runWithCache(operationName, href, method, receiver, ctx, uri));\n    }\n    runInChildContext(operationName, uri, contextFn) {\n        return this.runInContext(operationName, uri, { resetPath: false, resetVisits: false }, contextFn);\n    }\n    runInIsolatedContext(operationName, uri, contextFn) {\n        return this.runInContext(operationName, uri, { resetPath: true, resetVisits: true }, contextFn);\n    }\n    runInContext(operationName, uri, options, contextFn) {\n        const ctx = this.forOperation(operationName, uri, options);\n        ctx.debug('%s(%s)', operationName, uri.toString());\n        return contextFn(ctx);\n    }\n    createStoreResultFn(operationCache, cacheKey) {\n        return (result) => {\n            const mappedResult = this.mapResultWithVisits(result);\n            const visited = mappedResult.visited;\n            if (mappedResult[CACHE]) {\n                const cacheEntries = mappedResult[CACHE];\n                delete mappedResult[CACHE];\n                for (const [cacheKey, value] of cacheEntries) {\n                    operationCache.set(cacheKey, value);\n                    for (const visit of visited) {\n                        this.cacheInvalidations.add(visit.uri.toString(), { cacheKey, operationCache });\n                    }\n                }\n            }\n            // Override the pending value with the resolved value\n            operationCache.set(cacheKey, mappedResult);\n            for (const visit of visited) {\n                this.cacheInvalidations.add(visit.uri.toString(), { cacheKey, operationCache });\n            }\n            return mappedResult;\n        };\n    }\n    runWithCache(cacheSegment, cacheKey, fn, target, ...args) {\n        let operationCache = this.cache.get(cacheSegment);\n        if (!operationCache) {\n            operationCache = new Map();\n            this.cache.set(cacheSegment, operationCache);\n        }\n        const cached = operationCache.get(cacheKey);\n        if (cached) {\n            this.debug('%s(%s) [HIT]', cacheSegment, cacheKey);\n            // We either have a cached result or a cached promise for a result. Either way, the value\n            // is suitable as a return.\n            return cached;\n        }\n        const cacheResult = this.createStoreResultFn(operationCache, cacheKey);\n        this.debug('%s(%s) [MISS]', cacheSegment, cacheKey);\n        // Nothing is cached\n        const ret = fn.apply(target, args);\n        if (isThenable(ret)) {\n            const promiseRet = ret;\n            // Produce a promise that will only be settled once the cache has been updated accordingly.\n            const wrappedRet = promiseRet.then(cacheResult, (err) => {\n                // Delete the entry from the cache in case it was a transient failure\n                operationCache.delete(cacheKey);\n                return Promise.reject(err);\n            });\n            // Set the pending value in the cache for now\n            operationCache.set(cacheKey, wrappedRet);\n            return wrappedRet;\n        }\n        return cacheResult(ret);\n    }\n    _wrapError(err) {\n        return Object.assign(err, {\n            path: this.path.map(decodePathNode),\n        });\n    }\n    debug(...args) {\n        if (this.debugMode) {\n            if (typeof args[0] === 'string') {\n                args[0] = ' '.repeat(this.path.length) + args[0];\n            }\n            console.warn(...args);\n        }\n    }\n}\nfunction encodePathNode(operationName, uri) {\n    return `${operationName}:${uri.toString()}`;\n}\nfunction decodePathNode(node) {\n    const parts = node.split(':', 2);\n    if (parts.length !== 2) {\n        console.log('WTF', { node, parts });\n        throw new Error(`Invariant violation: Unexpected path node: '${node}'`);\n    }\n    return {\n        operationName: parts[0],\n        uri: parts[1].includes(':') ? Uri.parse(parts[1]) : parts[1],\n    };\n}\nasync function resolve(ctx, uri) {\n    const bothResolved = all([ctx.getCanonicalUrl(uri), ctx.getResolveRoot(uri), ctx.getSettings(uri)], ctx.token);\n    const [canonicalizationResult, resolveRootResult, settingsResult] = isThenable(bothResolved)\n        ? await checkCancellation(bothResolved, ctx.token)\n        : bothResolved;\n    const rootUri = resolveRootResult.uri;\n    const rootUriWithoutTrailingSlash = Uri.ensureTrailingSlash(rootUri, '');\n    if (!Uri.isPrefixOf(rootUriWithoutTrailingSlash, canonicalizationResult.uri)) {\n        throw new Error(`Unable to resolve a module whose path ${canonicalizationResult.uri.toString(true)} is above the host's root ${rootUri.toString()}`);\n    }\n    const resolveReturn = Uri.equals(rootUriWithoutTrailingSlash, canonicalizationResult.uri) ||\n        Uri.equals(rootUri, canonicalizationResult.uri)\n        ? ctx.runInChildContext('resolveAsDirectory', canonicalizationResult.uri, (ctx) => resolveAsDirectory(ctx, Uri.ensureTrailingSlash(canonicalizationResult.uri), resolveRootResult.uri, settingsResult.settings))\n        : ctx.runInChildContext('resolveAsFile', canonicalizationResult.uri, (ctx) => resolveAsFile(ctx, canonicalizationResult.uri, resolveRootResult.uri, settingsResult.settings, null));\n    const readParentPackageJsonReturn = ctx.readParentPackageJson(uri);\n    const resolveAndPackageJson = all([resolveReturn, readParentPackageJsonReturn], ctx.token);\n    const [resolveResult, readParentPackageJsonResult] = isThenable(resolveAndPackageJson)\n        ? await resolveAndPackageJson\n        : resolveAndPackageJson;\n    return {\n        ...resolveResult,\n        parentPackageJson: readParentPackageJsonResult.found\n            ? {\n                packageJson: readParentPackageJsonResult.packageJson,\n                uri: readParentPackageJsonResult.uri,\n            }\n            : undefined,\n    };\n}\nasync function resolveDependency(ctx, fromUri, spec) {\n    const parsedSpec = parseBareModuleSpec(spec);\n    if (parsedSpec) {\n        return ctx.runInChildContext('resolveBareModule', fromUri, (ctx) => resolveBareModule(ctx, fromUri, parsedSpec));\n    }\n    const relativeUri = Uri.joinPath(Uri.from({\n        ...fromUri,\n        path: dirname(fromUri.path),\n    }), spec);\n    return ctx.runInChildContext('resolveUri', relativeUri, (ctx) => resolve(ctx, relativeUri));\n}\nasync function resolveBareModule(ctx, uri, parsedSpec) {\n    let locatorName = parsedSpec.name;\n    let locatorSpec = parsedSpec.spec;\n    let locatorPath = parsedSpec.path;\n    if (!locatorSpec) {\n        const resolveRootReturn = ctx.getResolveRoot(uri);\n        const resolveRootResult = isThenable(resolveRootReturn)\n            ? await checkCancellation(resolveRootReturn, ctx.token)\n            : resolveRootReturn;\n        let nextUri = uri;\n        let maxIterations = 10;\n        while (Uri.isPrefixOf(resolveRootResult.uri, nextUri)) {\n            if (--maxIterations <= 0) {\n                throw new Error('Max iterations reached');\n            }\n            const parentPackageJsonReturn = ctx.readParentPackageJson(uri);\n            const parentPackageJsonResult = isThenable(parentPackageJsonReturn)\n                ? await checkCancellation(parentPackageJsonReturn, ctx.token)\n                : parentPackageJsonReturn;\n            if (!parentPackageJsonResult.found) {\n                throw new DependencyNotFoundError(parsedSpec.nameSpec, uri);\n            }\n            ctx.recordVisit(parentPackageJsonResult.uri, ResolverContext.VisitKind.File);\n            if (parentPackageJsonResult.packageJson.name === parsedSpec.name) {\n                // We found a parent directory that *IS* the module we're looking for\n                const directoryUri = Uri.ensureTrailingSlash(Uri.joinPath(parentPackageJsonResult.uri, '../'));\n                return ctx.runInChildContext('resolveAsDirectory', directoryUri, (ctx) => resolveAsDirectory(ctx, directoryUri, resolveRootResult.uri, ctx.settings));\n            }\n            const dependencies = {\n                ...(parentPackageJsonResult.packageJson.devDependencies || {}),\n                ...(parentPackageJsonResult.packageJson.peerDependencies || {}),\n                ...(parentPackageJsonResult.packageJson.dependencies || {}),\n            };\n            locatorSpec = dependencies[parsedSpec.name];\n            if (locatorSpec) {\n                break;\n            }\n            nextUri = Uri.joinPath(parentPackageJsonResult.uri, '..');\n            if (Uri.equals(nextUri, resolveRootResult.uri)) {\n                break;\n            }\n        }\n    }\n    if (!locatorSpec) {\n        const builtIn = NODE_CORE_SHIMS[parsedSpec.name];\n        if (builtIn) {\n            locatorName = builtIn.name;\n            locatorSpec = builtIn.spec;\n            locatorPath = builtIn.path;\n        }\n    }\n    if (!locatorSpec) {\n        throw new DependencyNotFoundError(parsedSpec.nameSpec, uri);\n    }\n    const bareModuleUriReturn = ctx.getUrlForBareModule(locatorName, locatorSpec, locatorPath);\n    const bareModuleUriResult = isThenable(bareModuleUriReturn)\n        ? await checkCancellation(bareModuleUriReturn, ctx.token)\n        : bareModuleUriReturn;\n    if (!bareModuleUriResult.found) {\n        throw new DependencyNotFoundError(parsedSpec.nameSpec, uri);\n    }\n    if (!bareModuleUriResult.uri) {\n        // TODO: Inject empty module\n        throw new EntryExcludedError(parsedSpec.nameSpec);\n    }\n    const resolveReturn = ctx.resolveUri(bareModuleUriResult.uri);\n    const resolveResult = isThenable(resolveReturn)\n        ? await checkCancellation(resolveReturn, ctx.token)\n        : resolveReturn;\n    return resolveResult;\n}\n(function (ResolverContext) {\n    let VisitKind;\n    (function (VisitKind) {\n        VisitKind[\"Directory\"] = \"Directory\";\n        VisitKind[\"File\"] = \"File\";\n    })(VisitKind = ResolverContext.VisitKind || (ResolverContext.VisitKind = {}));\n})(ResolverContext || (ResolverContext = {}));\nasync function resolveAsDirectory(ctx, uri, rootUri, settings) {\n    ctx.recordVisit(uri, ResolverContext.VisitKind.Directory);\n    const listEntriesReturn = ctx.listEntries(uri);\n    const listEntriesResult = isThenable(listEntriesReturn)\n        ? await checkCancellation(listEntriesReturn, ctx.token)\n        : listEntriesReturn;\n    let mainPathname = 'index';\n    // Step 1: Look for a package.json with an main field\n    const packageJsonUri = Uri.joinPath(uri, './package.json');\n    ctx.recordVisit(packageJsonUri, ResolverContext.VisitKind.File);\n    const packageJsonEntry = listEntriesResult.entries.find((entry) => entry.type === ResolverStrategy.EntryKind.File && Uri.equals(packageJsonUri, entry.uri));\n    let packageJson = null;\n    if (packageJsonEntry) {\n        const packageJsonContentReturn = ctx.readFileContent(packageJsonUri);\n        const packageJsonContentResult = isThenable(packageJsonContentReturn)\n            ? await checkCancellation(packageJsonContentReturn, ctx.token)\n            : packageJsonContentReturn;\n        packageJson = parseBufferAsPartialPackageJson(ctx.decoder, packageJsonContentResult.content, uri.toString());\n        for (const packageMain of settings.packageMain) {\n            const pathname = packageJson[packageMain];\n            if (typeof pathname === 'string') {\n                mainPathname = pathname;\n                break;\n            }\n        }\n    }\n    const fileUri = Uri.joinPath(uri, mainPathname);\n    return ctx.runInChildContext('resolveAsFile', uri, (ctx) => resolveAsFile(ctx, fileUri, rootUri, settings, packageJson));\n}\nasync function resolveAsFile(ctx, uri, rootUri, settings, packageJson, ignoreBrowserOverrides = false) {\n    if (uri.path === '' || uri.path === '/') {\n        throw new TypeError(`Unable to resolve the root as a file: ${uri.toString()}`);\n    }\n    ctx.recordVisit(uri, ResolverContext.VisitKind.File);\n    const browserOverrides = new Map();\n    if (packageJson === null) {\n        // The parent package.json is only interesting if we are going to look at the `browser`\n        // field and then consider browser mapping overrides in there.\n        const parentPackageJsonResult = settings.packageMain.includes('browser') && !ignoreBrowserOverrides\n            ? await checkCancellation(ctx.runInChildContext('readParentPackageJsonInternal', uri, (ctx) => readParentPackageJsonInternal(ctx, uri, rootUri, { uriIsCanonicalized: true })), ctx.token)\n            : undefined;\n        if (parentPackageJsonResult && parentPackageJsonResult.found) {\n            ctx.recordVisit(parentPackageJsonResult.uri, ResolverContext.VisitKind.File);\n            packageJson = parentPackageJsonResult.packageJson;\n            if (parentPackageJsonResult.packageJson.browser &&\n                typeof parentPackageJsonResult.packageJson.browser === 'object') {\n                const browserMap = parentPackageJsonResult.packageJson.browser;\n                const packageJsonDir = Uri.joinPath(parentPackageJsonResult.uri, '..');\n                for (const entry in browserMap) {\n                    const impliedUri = Uri.joinPath(packageJsonDir, entry);\n                    const targetSpec = browserMap[entry];\n                    const target = targetSpec === false ? false : Uri.joinPath(packageJsonDir, targetSpec);\n                    if (Uri.equals(impliedUri, uri)) {\n                        if (target === false) {\n                            return {\n                                found: false,\n                                uri: null,\n                            };\n                        }\n                        // console.warn('REMAPPED %s to %s', url, target);\n                        // We found an exact match so let's make sure we resolve the re-mapped file but\n                        // also that we don't go through the browser overrides rodeo again.\n                        return ctx.runInChildContext('resolveAsFile', target, (ctx) => resolveAsFile(ctx, target, rootUri, settings, packageJson, true));\n                    }\n                    browserOverrides.set(impliedUri.toString(), target);\n                }\n            }\n        }\n    }\n    const containingDirUri = Uri.ensureTrailingSlash(Uri.joinPath(uri, '..'));\n    const filename = basename(uri.path);\n    const entriesReturn = ctx.listEntries(containingDirUri);\n    const entriesResult = isThenable(entriesReturn)\n        ? await checkCancellation(entriesReturn, ctx.token)\n        : entriesReturn;\n    const entryDirectoryMap = new Map();\n    const entryFileMap = new Map();\n    for (const entry of entriesResult.entries) {\n        if (Uri.equals(entry.uri, uri) && entry.type == ResolverStrategy.EntryKind.File) {\n            // Found an exact match\n            return {\n                found: true,\n                rootUri,\n                uri,\n            };\n        }\n        if (entry.type === ResolverStrategy.EntryKind.Directory) {\n            const childFilename = Uri.getFirstPathSegmentAfterPrefix(entry.uri, containingDirUri);\n            entryDirectoryMap.set(childFilename, entry);\n        }\n        else if (entry.type === ResolverStrategy.EntryKind.File) {\n            const childFilename = basename(entry.uri.path);\n            entryFileMap.set(childFilename, entry);\n        }\n    }\n    // Look for browser overrides\n    for (const ext of settings.extensions) {\n        const hrefWithExtensionUri = uri.with({ path: `${uri.path}${ext}` });\n        const hrefWithExtension = hrefWithExtensionUri.toString();\n        const mapping = browserOverrides.get(hrefWithExtension);\n        ctx.recordVisit(hrefWithExtensionUri, ResolverContext.VisitKind.File);\n        if (mapping === false) {\n            // console.warn('REMAPPED %s to undefined', url);\n            return {\n                found: true,\n                rootUri,\n                uri: null,\n            };\n        }\n        else if (mapping) {\n            // console.warn('REMAPPED %s to %s', url, mapping);\n            return ctx.runInChildContext('resolveAsFile', mapping, (ctx) => resolveAsFile(ctx, mapping, rootUri, settings, packageJson, true));\n        }\n        const match = entryFileMap.get(`${filename}${ext}`);\n        if (match) {\n            if (match.type !== ResolverStrategy.EntryKind.File) {\n                continue;\n            }\n            return {\n                found: true,\n                rootUri,\n                uri: match.uri,\n            };\n        }\n    }\n    // First, attempt to find a matching file or directory\n    const match = entryDirectoryMap.get(filename);\n    if (match) {\n        if (match.type !== ResolverStrategy.EntryKind.Directory) {\n            throw new Error(`Invariant violation ${match.type} is unexpected`);\n        }\n        return ctx.runInChildContext('resolveAsDirectory', match.uri, (ctx) => resolveAsDirectory(ctx, Uri.ensureTrailingSlash(match.uri), rootUri, settings));\n    }\n    throw new EntryNotFoundError(uri);\n}\nasync function readParentPackageJson(ctx, uri) {\n    const canonicalizationReturn = ctx.getCanonicalUrl(uri);\n    const resolveRootReturn = ctx.getResolveRoot(uri);\n    const bothResolved = all([canonicalizationReturn, resolveRootReturn], ctx.token);\n    const [canonicalizationResult, resolveRootResult] = isThenable(bothResolved)\n        ? await checkCancellation(bothResolved, ctx.token)\n        : bothResolved;\n    const readReturn = ctx.runInChildContext('readParentPackageJsonInternal', canonicalizationResult.uri, (ctx) => readParentPackageJsonInternal(ctx, canonicalizationResult.uri, resolveRootResult.uri, {\n        uriIsCanonicalized: true,\n    }));\n    const readResult = isThenable(readReturn) ? await readReturn : readReturn;\n    if (readResult.found && readResult.visitedDirs) {\n        const visitedDirs = readResult.visitedDirs;\n        delete readResult.visitedDirs;\n        readResult[CACHE] = visitedDirs.map((uri) => [uri.toString(), { ...readResult, uri }]);\n    }\n    return readResult;\n}\nasync function readParentPackageJsonInternal(ctx, uri, rootUri, options) {\n    if (!options.uriIsCanonicalized) {\n        const canonicalizationReturn = ctx.getCanonicalUrl(uri);\n        const canonicalizationResult = isThenable(canonicalizationReturn)\n            ? await checkCancellation(canonicalizationReturn, ctx.token)\n            : canonicalizationReturn;\n        uri = canonicalizationResult.uri;\n    }\n    const hostRootHref = Uri.ensureTrailingSlash(rootUri);\n    const containingDirUrl = Uri.ensureTrailingSlash(Uri.joinPath(uri, '..'));\n    const visitedDirs = [];\n    const readPackageJsonOrRecurse = async (ctx, dir) => {\n        if (!Uri.isPrefixOf(hostRootHref, dir)) {\n            // Terminal condition for recursion\n            return {\n                found: false,\n                packageJson: null,\n                uri: null,\n            };\n        }\n        ctx.recordVisit(dir, ResolverContext.VisitKind.Directory);\n        const entriesReturn = ctx.listEntries(dir);\n        const entriesResult = isThenable(entriesReturn)\n            ? await checkCancellation(entriesReturn, ctx.token)\n            : entriesReturn;\n        const packageJsonUri = Uri.joinPath(dir, 'package.json');\n        const packageJsonEntry = entriesResult.entries.find((entry) => entry.type === ResolverStrategy.EntryKind.File && Uri.equals(entry.uri, packageJsonUri));\n        ctx.recordVisit(packageJsonUri, ResolverContext.VisitKind.File);\n        if (packageJsonEntry) {\n            // Found! Let's try to parse\n            try {\n                const parentPackageJsonContentReturn = ctx.readFileContent(packageJsonUri);\n                const parentPackageJsonContentResult = isThenable(parentPackageJsonContentReturn)\n                    ? await checkCancellation(parentPackageJsonContentReturn, ctx.token)\n                    : parentPackageJsonContentReturn;\n                const packageJson = parseBufferAsPackageJson(ctx.decoder, parentPackageJsonContentResult.content, packageJsonUri.toString());\n                return { found: true, packageJson, uri: packageJsonUri, visitedDirs };\n            }\n            catch (err) {\n                if (err instanceof CanceledError || (err && err.name === 'CanceledError')) {\n                    throw err;\n                }\n                // TODO: Maybe issue some warning?\n            }\n        }\n        // Not found here, let's try one up\n        const parentDir = Uri.ensureTrailingSlash(Uri.joinPath(dir, '..'));\n        // Skip infinite recursion\n        if (Uri.equals(dir, parentDir) || Uri.isPrefixOf(dir, parentDir)) {\n            return {\n                found: false,\n                packageJson: null,\n                uri: null,\n            };\n        }\n        visitedDirs.push(dir);\n        return ctx.runInChildContext('readPackageJsonOrRecurse', parentDir, (ctx) => readPackageJsonOrRecurse(ctx, parentDir));\n    };\n    if (Uri.equals(uri, containingDirUrl) || Uri.isPrefixOf(uri, containingDirUrl)) {\n        return {\n            found: false,\n            packageJson: null,\n            uri: null,\n        };\n    }\n    return ctx.runInChildContext('readPackageJsonOrRecurse', containingDirUrl, (ctx) => readPackageJsonOrRecurse(ctx, containingDirUrl));\n}\n\nclass Resolver {\n    constructor(strategy, settings) {\n        this.disposed = false;\n        this.tokenSource = new CancellationTokenSource();\n        this.settings = settings;\n        this.strategy = strategy;\n        this.rootCtx = ResolverContext.create(this, this.strategy, this.settings, this.tokenSource.token, { debug: settings.debug });\n    }\n    decode(buf) {\n        if (typeof buf === 'string') {\n            return buf;\n        }\n        return this.rootCtx.decoder.decode(buf);\n    }\n    dispose() {\n        this.disposed = true;\n        return this.rootCtx.dispose();\n    }\n    getCanonicalUrl(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.getCanonicalUrl', uri, (ctx) => ctx.getCanonicalUrl(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    getResolveRoot(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.getResolveRoot', uri, (ctx) => ctx.getResolveRoot(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    getSettings(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.getSettings', uri, (ctx) => ctx.getSettings(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    getUrlForBareModule(name, spec, path) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.getUrlForBareModule', `${name}|${spec}|${path}`, (ctx) => ctx.getUrlForBareModule(name, spec, path));\n    }\n    invalidate(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.invalidate', uri, (ctx) => ctx.invalidate(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    listEntries(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.listEntries', uri, (ctx) => ctx.listEntries(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    readFileContent(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.readFileContent', uri, (ctx) => ctx.readFileContent(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    readParentPackageJson(uri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.readParentPackageJson', uri, (ctx) => ctx.readParentPackageJson(typeof uri === 'string' ? Uri.parse(uri) : uri));\n    }\n    resolve(spec, fromUri) {\n        if (this.disposed) {\n            throw new Error('Resolver has been disposed');\n        }\n        if (Uri.isUri(spec)) {\n            return this.rootCtx.runInIsolatedContext('Resolver.resolveUri', spec, (ctx) => ctx.resolveUri(spec));\n        }\n        if (!fromUri) {\n            throw new Error('When calling Resolver.resolve with a string spec, a second \"fromUri\" argument is required');\n        }\n        return this.rootCtx.runInIsolatedContext('Resolver.resolve', `${fromUri ? fromUri.toString() : ''}|${spec}`, (ctx) => ctx.resolve(spec, fromUri));\n    }\n}\n\nconst version$1 = '0.45.1';\n\nexport { AbstractResolverStrategy, AbstractResolverStrategyWithRoot, Resolver, ResolverContext, ResolverStrategy, version$1 as version };\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}