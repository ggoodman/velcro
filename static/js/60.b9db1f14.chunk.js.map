{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","tokenPostfix","specialFunctions","mainFunctions","builtinFunctions","symbols","token","escapes","variables","tokenizer","root","cases","next","include","bracket","dstring","sstring","whitespace","newlineComment","nestedVariable","nestedCall","specialFunc"],"mappings":"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","file":"static/js/60.b9db1f14.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.tcl',\r\n    specialFunctions: [\r\n        'set', 'unset', 'rename', 'variable', 'proc', 'coroutine',\r\n        'foreach',\r\n        'incr', 'append',\r\n        'lappend', 'linsert', 'lreplace'\r\n    ],\r\n    mainFunctions: [\r\n        'if', 'then', 'elseif', 'else', 'case', 'switch', 'while', 'for',\r\n        'break', 'continue', 'return',\r\n        'package', 'namespace',\r\n        'catch', 'exit',\r\n        'eval', 'expr', 'uplevel', 'upvar'\r\n    ],\r\n    builtinFunctions: [\r\n        'file', 'info', 'concat', 'join', 'lindex',\r\n        'list', 'llength', 'lrange', 'lsearch', 'lsort', 'split',\r\n        'array', 'parray', 'binary', 'format', 'regexp', 'regsub', 'scan', 'string',\r\n        'subst', 'dict', 'cd', 'clock', 'exec', 'glob', 'pid', 'pwd', 'close', 'eof', 'fblocked',\r\n        'fconfigure', 'fcopy', 'fileevent', 'flush', 'gets', 'open', 'puts', 'read', 'seek',\r\n        'socket', 'tell', 'interp', 'after', 'auto_execok',\r\n        'auto_load', 'auto_mkindex', 'auto_reset', 'bgerror', 'error',\r\n        'global', 'history', 'load', 'source', 'time', 'trace',\r\n        'unknown', 'unset', 'update', 'vwait', 'winfo', 'wm', 'bind', 'event',\r\n        'pack', 'place', 'grid', 'font', 'bell', 'clipboard', 'destroy', 'focus', 'grab', 'lower',\r\n        'option', 'raise', 'selection', 'send', 'tk', 'tkwait', 'tk_bisque', 'tk_focusNext',\r\n        'tk_focusPrev', 'tk_focusFollowsMouse', 'tk_popup', 'tk_setPalette'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' }\r\n    ],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, { cases: {\r\n                        '@specialFunctions': { token: 'keyword.flow', next: '@specialFunc' },\r\n                        '@mainFunctions': 'keyword',\r\n                        '@builtinFunctions': 'variable',\r\n                        '@default': 'operator.scss'\r\n                    } }],\r\n            [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, 'metatag'],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'operator'],\r\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\r\n            [/@variables/, 'type.identifier'],\r\n            [/\\.(?!\\d|\\.)[\\w\\-]*/, 'operator.sql'],\r\n            // numbers\r\n            [/\\d+(\\.\\d+)?/, 'number'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter\r\n            [/;/, 'delimiter'],\r\n            // strings\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@dstring' }],\r\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@sstring' }]\r\n        ],\r\n        dstring: [\r\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\r\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\r\n            [/@variables/, 'type.identifier'],\r\n            [/[^\\\\$\\[\\]\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\r\n        ],\r\n        sstring: [\r\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\r\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\r\n            [/@variables/, 'type.identifier'],\r\n            [/[^\\\\$\\[\\]']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#.*\\\\$/, { token: 'comment', next: '@newlineComment' }],\r\n            [/#.*(?!\\\\)$/, 'comment']\r\n        ],\r\n        newlineComment: [\r\n            [/.*\\\\$/, 'comment'],\r\n            [/.*(?!\\\\)$/, { token: 'comment', next: '@pop' }]\r\n        ],\r\n        nestedVariable: [\r\n            [/[^\\{\\}\\$]+/, 'type.identifier'],\r\n            [/\\}/, { token: 'identifier', next: '@pop' }]\r\n        ],\r\n        nestedCall: [\r\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\r\n            [/\\]/, { token: '@brackets', next: '@pop' }],\r\n            { include: 'root' }\r\n        ],\r\n        specialFunc: [\r\n            [/\"/, { token: 'string', next: '@dstring' }],\r\n            [/'/, { token: 'string', next: '@sstring' }],\r\n            [/\\S+/, { token: 'type', next: '@pop' }],\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}