{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value"],"mappings":"iIAAA,qFAKO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,MAEjBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAMC,MAAO,IAAMC,MAAO,CAAC,SAAU,YAC7C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,aAE/CC,QAAS,CACLC,SAAS,IAGNC,EAAW,CAClBC,aAAc,GACdC,aAAc,OACdC,YAAY,EACZV,SAAU,CACN,CAAEW,MAAO,kBAAmBT,KAAM,IAAKC,MAAO,KAC9C,CAAEQ,MAAO,kBAAmBT,KAAM,IAAKC,MAAO,KAC9C,CAAEQ,MAAO,wBAAyBT,KAAM,IAAKC,MAAO,MAExDS,SAAU,CAAC,SAAU,QAAS,OAAQ,UAAW,UAAW,OAAQ,OAAQ,UACxE,MAAO,KAAM,KAAM,UAAW,QAAS,SAAU,SAAU,MAAO,QACtEC,KAAM,CACF,IAAK,OAAQ,UAAW,UAAW,OAAQ,UAAW,QAAS,QAC/D,IAAK,OAAQ,WAAY,MAAO,MAAO,aAAc,OAAQ,KAAM,SACnE,SAAU,UAAW,SAAU,OAAQ,OAAQ,MAAO,WAAY,UAClE,WAAY,KAAM,MAAO,UAAW,MAAO,MAAO,KAAM,KACxD,KAAM,QACN,WAAY,aAAc,SAAU,OAAQ,SAAU,OAAQ,QAAS,WACvE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,SAAU,SAAU,KAAM,OACtE,IAAK,SAAU,MAAO,QAAS,MAC/B,SAAU,MACV,QAAS,KAAM,OACf,MAAO,OAAQ,OAAQ,OAAQ,QAC/B,MAAO,WAAY,WACnB,SAAU,KAAM,WAAY,SAAU,SACtC,IAAK,QAAS,MAAO,WACrB,IACA,KAAM,KAAM,OACZ,IAAK,OAAQ,SAAU,UAAW,SAAU,QAAS,SAAU,OAAQ,SAAU,SAAU,QAAS,MAAO,UAAW,MACtH,QAAS,QAAS,KAAM,WAAY,QAAS,KAAM,QAAS,OAAQ,QAAS,KAAM,SAAU,KAC7F,IAAK,KACL,QACA,OAGJC,QAAS,8BACTC,QAAS,wEACTC,UAAW,CACPC,KAAM,CAEF,CAAC,2BACG,CACIC,MAAO,CACH,UAAW,CACPA,MAAO,CACH,OAAQ,CAAC,GAAI,OACb,WAAY,CAAC,GAAI,CAAEP,MAAO,MAAOQ,KAAM,cAG/C,cAAe,CAAC,GAAI,CAAER,MAAO,eAC7B,WAAY,CAAC,GAAI,OAK7B,CAAC,4BAA6B,CACtBO,MAAO,CACH,OAAQ,CAAC,GAAI,UACb,WAAY,CAAC,GAAI,CAAEP,MAAO,SAAUQ,KAAM,eAItD,CAAC,6BAA8B,CACvBD,MAAO,CACH,OAAQ,CAAC,GAAI,aACb,WAAY,CAAC,GAAI,CAAEP,MAAO,YAAaQ,KAAM,eAIzD,CAAC,gBAAiB,IAClB,CAAEC,QAAS,eAEX,CAAC,mBAAoB,CACbF,MAAO,CACH,YAAa,CAAEP,MAAO,cACtB,WAAY,MAIxB,CAAC,aAAc,aACf,CAAC,WAAY,aAEb,CAAC,2BAA4B,gBAC7B,CAAC,MAAO,UAER,CAAC,IAAK,SAAU,aAChB,CAAC,IAAK,SAAU,cAEpBU,IAAK,CACD,CAAC,aAAc,CAAC,CAAEV,MAAO,YAAaQ,KAAM,mBAAqB,KACjE,CAAC,MAAO,CAAER,MAAO,GAAIQ,KAAM,gBAE3B,CAAC,oBAAqB,CACdD,MAAO,CACH,OAAQ,CAAEP,MAAO,SAAUQ,KAAM,QACjC,WAAY,YAIxB,CAAC,qBAAsB,CACfD,MAAO,CACH,OAAQ,CAAEP,MAAO,YAAaQ,KAAM,QACpC,WAAY,eAIxB,CAAC,KAAM,CAAER,MAAO,wBAAyBQ,KAAM,oBAEnDG,WAAY,CACR,CAAC,SAAU,CAAEX,MAAO,GAAIQ,KAAM,YAC9B,CAAC,QAAS,CAAER,MAAO,KAEnB,CAAC,iBAAkB,CACXO,MAAO,CACH,OAAQ,CAAC,0BAA2B,gBAAiB,CAAEP,MAAO,0BAA2BQ,KAAM,YAC/F,WAAY,CAAC,0BAA2B,gBAAiB,8BAGrE,CAAC,KAAM,CAAER,MAAO,GAAIQ,KAAM,YAC1B,CAAC,IAAK,KAEVI,cAAe,CACX,CAAC,MAAO,IACR,CAAC,sBAAuB,CAAC,iBAAkB,YAAa,CAAEZ,MAAO,kBAAmBQ,KAAM,eAC1F,CAAC,MAAO,kBACR,CAAC,IAAK,CACED,MAAO,CACH,OAAQ,CAAEP,MAAO,sBAAuBQ,KAAM,WAC9C,WAAY,yBAGxB,CAAC,MAAO,CAAER,MAAO,wBAAyBQ,KAAM,YAChD,CAAC,KAAM,CAAER,MAAO,wBAAyBQ,KAAM,UAEnDK,WAAY,CACR,CAAC,kBAAmB,CAAEb,MAAO,UAAWQ,KAAM,0BAC9C,CAAC,aAAc,IACf,CAAC,OAAQ,CAAER,MAAO,UAAWQ,KAAM,cAEvCM,UAAW,CACP,CAAC,UAAW,CACJP,MAAO,CACH,eAAgB,CAAEP,MAAO,OACzB,WAAY,CAAEA,MAAO,WAAYQ,KAAM,cAGnD,CAAC,IAAK,CAAER,MAAO,WAAYQ,KAAM,aAErCO,QAAS,CACL,CAAC,UAAW,mBACZ,CAAC,MAAO,CAAEf,MAAO,UAAWQ,KAAM,SAClC,CAAC,OAAQ,2BACT,CAAC,QAAS,oBAEdQ,OAAQ,CACJ,CAAC,YAAa,CACNT,MAAO,CACH,OAAQ,CAAEP,MAAO,SAAUQ,KAAM,WACjC,WAAY,YAGxB,CAAC,WAAY,CACLD,MAAO,CACH,OAAQ,CAAEP,MAAO,gBAAiBQ,KAAM,WACxC,WAAY,mBAGxB,CAAC,MAAO,CACAD,MAAO,CACH,OAAQ,CAAEP,MAAO,wBAAyBQ,KAAM,WAChD,WAAY,2BAIxB,CAAC,iBAAkB,CAAC,0BAA2B,gBAAiB,4BAChE,CAAC,IAAK,UACN,CAAC,OAAQ,CACDD,MAAO,CACH,UAAW,CAAEP,MAAO,SAAUQ,KAAM,QACpC,WAAY,CAAER,MAAO,cAKrCiB,MAAO,CACH,CAAC,WAAY,CACLV,MAAO,CACH,OAAQ,CAAEP,MAAO,kBAAmBQ,KAAM,WAC1C,WAAY,qBAGxB,CAAC,MAAO,CACAD,MAAO,CACH,OAAQ,CAAEP,MAAO,kBAAmBQ,KAAM,WAC1C,WAAY,qBAGxB,CAAC,OAAQ,CACDD,MAAO,CACH,UAAW,CAAEP,MAAO,kBAAmBQ,KAAM,QAC7C,WAAY,CAAER,MAAO","file":"static/js/42.9fecf3a7.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pug',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\r\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\r\n    tags: [\r\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\r\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\r\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\r\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\r\n        'em', 'embed',\r\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\r\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n        'i', 'iframe', 'img', 'input', 'ins',\r\n        'keygen', 'kbd',\r\n        'label', 'li', 'link',\r\n        'map', 'mark', 'menu', 'meta', 'meter',\r\n        'nav', 'noframes', 'noscript',\r\n        'object', 'ol', 'optgroup', 'option', 'output',\r\n        'p', 'param', 'pre', 'progress',\r\n        'q',\r\n        'rp', 'rt', 'ruby',\r\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\r\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\r\n        'u', 'ul',\r\n        'video',\r\n        'wbr'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Tag or a keyword at start\r\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\r\n                {\r\n                    cases: {\r\n                        '$2@tags': {\r\n                            cases: {\r\n                                '@eos': ['', 'tag'],\r\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\r\n                            }\r\n                        },\r\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\r\n                        '@default': ['', '',]\r\n                    }\r\n                }\r\n            ],\r\n            // id\r\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.id'],\r\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // class\r\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.class'],\r\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // plain text with pipe\r\n            [/^(\\s*)(\\|.*)$/, ''],\r\n            { include: '@whitespace' },\r\n            // keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        tag: [\r\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\r\n            [/\\s+/, { token: '', next: '@simpleText' }],\r\n            // id\r\n            [/#[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.id', next: '@pop' },\r\n                        '@default': 'tag.id'\r\n                    }\r\n                }],\r\n            // class\r\n            [/\\.[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.class', next: '@pop' },\r\n                        '@default': 'tag.class'\r\n                    }\r\n                }],\r\n            // attributes\r\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\r\n        ],\r\n        simpleText: [\r\n            [/[^#]+$/, { token: '', next: '@popall' }],\r\n            [/[^#]+/, { token: '' }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, {\r\n                    cases: {\r\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\r\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\r\n                    }\r\n                }],\r\n            [/#$/, { token: '', next: '@popall' }],\r\n            [/#/, '']\r\n        ],\r\n        attributeList: [\r\n            [/\\s+/, ''],\r\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\r\n            [/\\w+/, 'attribute.name'],\r\n            [/,/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\r\n                        '@default': 'attribute.delimiter'\r\n                    }\r\n                }],\r\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\r\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        whitespace: [\r\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }],\r\n        ],\r\n        blockText: [\r\n            [/^\\s+.*$/, {\r\n                    cases: {\r\n                        '($S2\\\\s+.*$)': { token: '$S3' },\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/./, { token: '@rematch', next: '@popall' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'#]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\r\n            [/#/, 'string'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': { token: 'string' }\r\n                    }\r\n                }],\r\n        ],\r\n        // Almost identical to above, except for escapes and the output token\r\n        value: [\r\n            [/[^\\\\\"']+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\r\n                        '@default': { token: 'attribute.value' }\r\n                    }\r\n                }],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":""}