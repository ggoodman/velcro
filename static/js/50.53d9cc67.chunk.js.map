{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","cases","token","bracket","next","include","whitespace","comment","string","numbers"],"mappings":"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","file":"static/js/50.53d9cc67.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.rust',\r\n    defaultToken: 'invalid',\r\n    keywords: [\r\n        'as', 'box', 'break', 'const', 'continue', 'crate', 'else', 'enum',\r\n        'extern', 'false', 'fn', 'for', 'if', 'impl', 'in', 'let', 'loop',\r\n        'match', 'mod', 'move', 'mut', 'pub', 'ref', 'return', 'self',\r\n        'static', 'struct', 'super', 'trait', 'true', 'type', 'unsafe', 'use',\r\n        'where', 'while', 'catch', 'default', 'union', 'static', 'abstract',\r\n        'alignof', 'become', 'do', 'final', 'macro', 'offsetof', 'override',\r\n        'priv', 'proc', 'pure', 'sizeof', 'typeof', 'unsized', 'virtual',\r\n        'yield',\r\n    ],\r\n    typeKeywords: [\r\n        'Self', 'm32', 'm64', 'm128', 'f80', 'f16', 'f128', 'int', 'uint',\r\n        'float', 'char', 'bool', 'u8', 'u16', 'u32', 'u64', 'f32', 'f64', 'i8',\r\n        'i16', 'i32', 'i64', 'str', 'Option', 'Either', 'c_float', 'c_double',\r\n        'c_void', 'FILE', 'fpos_t', 'DIR', 'dirent', 'c_char', 'c_schar',\r\n        'c_uchar', 'c_short', 'c_ushort', 'c_int', 'c_uint', 'c_long',\r\n        'c_ulong', 'size_t', 'ptrdiff_t', 'clock_t', 'time_t', 'c_longlong',\r\n        'c_ulonglong', 'intptr_t', 'uintptr_t', 'off_t', 'dev_t', 'ino_t',\r\n        'pid_t', 'mode_t', 'ssize_t',\r\n    ],\r\n    constants: [\r\n        'true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err',\r\n    ],\r\n    supportConstants: [\r\n        'EXIT_FAILURE', 'EXIT_SUCCESS', 'RAND_MAX', 'EOF', 'SEEK_SET',\r\n        'SEEK_CUR', 'SEEK_END', '_IOFBF', '_IONBF', '_IOLBF', 'BUFSIZ',\r\n        'FOPEN_MAX', 'FILENAME_MAX', 'L_tmpnam', 'TMP_MAX', 'O_RDONLY',\r\n        'O_WRONLY', 'O_RDWR', 'O_APPEND', 'O_CREAT', 'O_EXCL', 'O_TRUNC',\r\n        'S_IFIFO', 'S_IFCHR', 'S_IFBLK', 'S_IFDIR', 'S_IFREG', 'S_IFMT',\r\n        'S_IEXEC', 'S_IWRITE', 'S_IREAD', 'S_IRWXU', 'S_IXUSR', 'S_IWUSR',\r\n        'S_IRUSR', 'F_OK', 'R_OK', 'W_OK', 'X_OK', 'STDIN_FILENO',\r\n        'STDOUT_FILENO', 'STDERR_FILENO',\r\n    ],\r\n    supportMacros: [\r\n        'format!', 'print!', 'println!', 'panic!', 'format_args!', 'unreachable!',\r\n        'write!', 'writeln!'\r\n    ],\r\n    operators: [\r\n        '!', '!=', '%', '%=', '&', '&=', '&&', '*', '*=', '+', '+=', '-', '-=',\r\n        '->', '.', '..', '...', '/', '/=', ':', ';', '<<', '<<=', '<', '<=', '=',\r\n        '==', '=>', '>', '>=', '>>', '>>=', '@', '^', '^=', '|', '|=', '||', '_',\r\n        '?', '#'\r\n    ],\r\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\r\n    delimiters: /[,]/,\r\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\r\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\r\n    floatSuffixes: /f(32|64)/,\r\n    tokenizer: {\r\n        root: [\r\n            [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\r\n                {\r\n                    cases: {\r\n                        '@typeKeywords': 'keyword.type',\r\n                        '@keywords': 'keyword',\r\n                        '@supportConstants': 'keyword',\r\n                        '@supportMacros': 'keyword',\r\n                        '@constants': 'keyword',\r\n                        '@default': 'identifier',\r\n                    }\r\n                }\r\n            ],\r\n            // Designator\r\n            [/\\$/, 'identifier'],\r\n            // Lifetime annotations\r\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\r\n            // Byte literal\r\n            [/'\\S'/, 'string.byteliteral'],\r\n            // Strings\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\r\n            { include: '@numbers' },\r\n            // Whitespace + comments\r\n            { include: '@whitespace' },\r\n            [/@delimiters/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'delimiter'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]<>]/, '@brackets'],\r\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            [\"\\\\*/\", 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        numbers: [\r\n            //Octal\r\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\r\n            //Binary\r\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\r\n            //Exponent\r\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\r\n            //Float\r\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\r\n            //Hexadecimal\r\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\r\n            //Integer\r\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }],\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}