{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","next","string","herestring","comment"],"mappings":"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","file":"static/js/41.af3cbb6f.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `$-`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: ['<#', '#>'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.ps1',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: [\r\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\r\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\r\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\r\n        'function', 'if', 'in', 'param', 'process', 'return',\r\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\r\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\r\n    ],\r\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // commands and keywords\r\n            [/[a-zA-Z_][\\w-]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // labels\r\n            [/^:\\w*/, 'metatag'],\r\n            // variables\r\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\r\n            // Comments\r\n            [/<#/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // delimiters\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\\@\"/, 'string', '@herestring.\"'],\r\n            [/\\@'/, 'string', '@herestring.\\''],\r\n            [/\"/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }],\r\n            [/'/, {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\\'' }\r\n                    }\r\n                }],\r\n        ],\r\n        string: [\r\n            [/[^\"'\\$`]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/`./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+$/, {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'variable', next: '@popall' },\r\n                        '@default': { token: 'string', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': {\r\n                            cases: {\r\n                                '@eos': { token: 'string', next: '@popall' },\r\n                                '@default': 'string'\r\n                            }\r\n                        }\r\n                    }\r\n                }],\r\n        ],\r\n        herestring: [\r\n            [/^\\s*([\"'])@/, {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/[^\\$`]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/`./, 'string.escape.invalid'],\r\n            [/\\$[\\w]+/, {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/[^#\\.]+/, 'comment'],\r\n            [/#>/, 'comment', '@pop'],\r\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\r\n            [/[\\.#]/, 'comment']\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":""}